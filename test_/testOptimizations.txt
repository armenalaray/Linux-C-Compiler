False
sys.float_info(max=1.7976931348623157e+308, max_exp=1024, max_10_exp=308, min=2.2250738585072014e-308, min_exp=-1021, min_10_exp=-307, dig=15, mant_dig=53, epsilon=2.220446049250313e-16, radix=2, rounds=1)
9
['/home/alejandro/CComp/code/cd.py', '--codegen', '-lmath.h', '--fold-constants', '--propagate-copies', '--eliminate-unreachable-code', '--eliminate-dead-stores', '--optimize', '/home/alejandro/CComp/test_/test.c']
File: /home/alejandro/CComp/test_/test.c
Last Stage: assemblyGeneration
NoLink: False
NotAssembly: False
--fold-constants True
--propagate-copies True
--eliminate-unreachable-code True
--eliminate-dead-stores True
--optimize True
Libary: math.h
[('int', <TokenType.INT_KW: 4>, 1), ('check_one_int', <TokenType.IDENTIFIER: 2>, 1), ('(', <TokenType.OPEN_PAREN: 7>, 1), ('int', <TokenType.INT_KW: 4>, 1), ('actual', <TokenType.IDENTIFIER: 2>, 1), (',', <TokenType.COMMA: 38>, 1), ('int', <TokenType.INT_KW: 4>, 1), ('expected', <TokenType.IDENTIFIER: 2>, 1), (')', <TokenType.CLOSE_PAREN: 8>, 1), (';', <TokenType.SEMICOLON: 11>, 1), ('int', <TokenType.INT_KW: 4>, 2), ('check_5_ints', <TokenType.IDENTIFIER: 2>, 2), ('(', <TokenType.OPEN_PAREN: 7>, 2), ('int', <TokenType.INT_KW: 4>, 2), ('a', <TokenType.IDENTIFIER: 2>, 2), (',', <TokenType.COMMA: 38>, 2), ('int', <TokenType.INT_KW: 4>, 2), ('b', <TokenType.IDENTIFIER: 2>, 2), (',', <TokenType.COMMA: 38>, 2), ('int', <TokenType.INT_KW: 4>, 2), ('c', <TokenType.IDENTIFIER: 2>, 2), (',', <TokenType.COMMA: 38>, 2), ('int', <TokenType.INT_KW: 4>, 2), ('d', <TokenType.IDENTIFIER: 2>, 2), (',', <TokenType.COMMA: 38>, 2), ('int', <TokenType.INT_KW: 4>, 2), ('e', <TokenType.IDENTIFIER: 2>, 2), (',', <TokenType.COMMA: 38>, 2), ('int', <TokenType.INT_KW: 4>, 2), ('start', <TokenType.IDENTIFIER: 2>, 2), (')', <TokenType.CLOSE_PAREN: 8>, 2), (';', <TokenType.SEMICOLON: 11>, 2), ('int', <TokenType.INT_KW: 4>, 3), ('check_12_ints', <TokenType.IDENTIFIER: 2>, 3), ('(', <TokenType.OPEN_PAREN: 7>, 3), ('int', <TokenType.INT_KW: 4>, 3), ('a', <TokenType.IDENTIFIER: 2>, 3), (',', <TokenType.COMMA: 38>, 3), ('int', <TokenType.INT_KW: 4>, 3), ('b', <TokenType.IDENTIFIER: 2>, 3), (',', <TokenType.COMMA: 38>, 3), ('int', <TokenType.INT_KW: 4>, 3), ('c', <TokenType.IDENTIFIER: 2>, 3), (',', <TokenType.COMMA: 38>, 3), ('int', <TokenType.INT_KW: 4>, 3), ('d', <TokenType.IDENTIFIER: 2>, 3), (',', <TokenType.COMMA: 38>, 3), ('int', <TokenType.INT_KW: 4>, 3), ('e', <TokenType.IDENTIFIER: 2>, 3), (',', <TokenType.COMMA: 38>, 3), ('int', <TokenType.INT_KW: 4>, 3), ('f', <TokenType.IDENTIFIER: 2>, 3), (',', <TokenType.COMMA: 38>, 3), ('int', <TokenType.INT_KW: 4>, 3), ('g', <TokenType.IDENTIFIER: 2>, 3), (',', <TokenType.COMMA: 38>, 3), ('int', <TokenType.INT_KW: 4>, 3), ('h', <TokenType.IDENTIFIER: 2>, 3), (',', <TokenType.COMMA: 38>, 3), ('int', <TokenType.INT_KW: 4>, 3), ('i', <TokenType.IDENTIFIER: 2>, 3), (',', <TokenType.COMMA: 38>, 3), ('int', <TokenType.INT_KW: 4>, 4), ('j', <TokenType.IDENTIFIER: 2>, 4), (',', <TokenType.COMMA: 38>, 4), ('int', <TokenType.INT_KW: 4>, 4), ('k', <TokenType.IDENTIFIER: 2>, 4), (',', <TokenType.COMMA: 38>, 4), ('int', <TokenType.INT_KW: 4>, 4), ('l', <TokenType.IDENTIFIER: 2>, 4), (',', <TokenType.COMMA: 38>, 4), ('int', <TokenType.INT_KW: 4>, 4), ('start', <TokenType.IDENTIFIER: 2>, 4), (')', <TokenType.CLOSE_PAREN: 8>, 4), (';', <TokenType.SEMICOLON: 11>, 4), ('int', <TokenType.INT_KW: 4>, 5), ('id', <TokenType.IDENTIFIER: 2>, 5), ('(', <TokenType.OPEN_PAREN: 7>, 5), ('int', <TokenType.INT_KW: 4>, 5), ('x', <TokenType.IDENTIFIER: 2>, 5), (')', <TokenType.CLOSE_PAREN: 8>, 5), (';', <TokenType.SEMICOLON: 11>, 5), ('int', <TokenType.INT_KW: 4>, 6), ('glob_three', <TokenType.IDENTIFIER: 2>, 6), ('=', <TokenType.EQUAL: 28>, 6), ('3', <TokenType.INT_CONSTANT: 3>, 6), (';', <TokenType.SEMICOLON: 11>, 6), ('int', <TokenType.INT_KW: 4>, 7), ('target', <TokenType.IDENTIFIER: 2>, 7), ('(', <TokenType.OPEN_PAREN: 7>, 7), ('void', <TokenType.VOID_KW: 5>, 7), (')', <TokenType.CLOSE_PAREN: 8>, 7), ('{', <TokenType.OPEN_BRACE: 9>, 7), ('int', <TokenType.INT_KW: 4>, 8), ('should_spill', <TokenType.IDENTIFIER: 2>, 8), ('=', <TokenType.EQUAL: 28>, 8), ('glob_three', <TokenType.IDENTIFIER: 2>, 8), ('+', <TokenType.PLUS: 18>, 8), ('3', <TokenType.INT_CONSTANT: 3>, 8), (';', <TokenType.SEMICOLON: 11>, 8), ('int', <TokenType.INT_KW: 4>, 9), ('one', <TokenType.IDENTIFIER: 2>, 9), ('=', <TokenType.EQUAL: 28>, 9), ('glob_three', <TokenType.IDENTIFIER: 2>, 9), ('-', <TokenType.HYPHEN: 13>, 9), ('2', <TokenType.INT_CONSTANT: 3>, 9), (';', <TokenType.SEMICOLON: 11>, 9), ('int', <TokenType.INT_KW: 4>, 10), ('two', <TokenType.IDENTIFIER: 2>, 10), ('=', <TokenType.EQUAL: 28>, 10), ('one', <TokenType.IDENTIFIER: 2>, 10), ('+', <TokenType.PLUS: 18>, 10), ('one', <TokenType.IDENTIFIER: 2>, 10), (';', <TokenType.SEMICOLON: 11>, 10), ('int', <TokenType.INT_KW: 4>, 11), ('three', <TokenType.IDENTIFIER: 2>, 11), ('=', <TokenType.EQUAL: 28>, 11), ('2', <TokenType.INT_CONSTANT: 3>, 11), ('+', <TokenType.PLUS: 18>, 11), ('one', <TokenType.IDENTIFIER: 2>, 11), (';', <TokenType.SEMICOLON: 11>, 11), ('int', <TokenType.INT_KW: 4>, 12), ('four', <TokenType.IDENTIFIER: 2>, 12), ('=', <TokenType.EQUAL: 28>, 12), ('two', <TokenType.IDENTIFIER: 2>, 12), ('*', <TokenType.ASTERISK: 17>, 12), ('two', <TokenType.IDENTIFIER: 2>, 12), (';', <TokenType.SEMICOLON: 11>, 12), ('int', <TokenType.INT_KW: 4>, 13), ('five', <TokenType.IDENTIFIER: 2>, 13), ('=', <TokenType.EQUAL: 28>, 13), ('6', <TokenType.INT_CONSTANT: 3>, 13), ('-', <TokenType.HYPHEN: 13>, 13), ('one', <TokenType.IDENTIFIER: 2>, 13), (';', <TokenType.SEMICOLON: 11>, 13), ('int', <TokenType.INT_KW: 4>, 14), ('six', <TokenType.IDENTIFIER: 2>, 14), ('=', <TokenType.EQUAL: 28>, 14), ('two', <TokenType.IDENTIFIER: 2>, 14), ('*', <TokenType.ASTERISK: 17>, 14), ('three', <TokenType.IDENTIFIER: 2>, 14), (';', <TokenType.SEMICOLON: 11>, 14), ('int', <TokenType.INT_KW: 4>, 15), ('seven', <TokenType.IDENTIFIER: 2>, 15), ('=', <TokenType.EQUAL: 28>, 15), ('one', <TokenType.IDENTIFIER: 2>, 15), ('+', <TokenType.PLUS: 18>, 15), ('6', <TokenType.INT_CONSTANT: 3>, 15), (';', <TokenType.SEMICOLON: 11>, 15), ('int', <TokenType.INT_KW: 4>, 16), ('eight', <TokenType.IDENTIFIER: 2>, 16), ('=', <TokenType.EQUAL: 28>, 16), ('two', <TokenType.IDENTIFIER: 2>, 16), ('*', <TokenType.ASTERISK: 17>, 16), ('4', <TokenType.INT_CONSTANT: 3>, 16), (';', <TokenType.SEMICOLON: 11>, 16), ('int', <TokenType.INT_KW: 4>, 17), ('nine', <TokenType.IDENTIFIER: 2>, 17), ('=', <TokenType.EQUAL: 28>, 17), ('three', <TokenType.IDENTIFIER: 2>, 17), ('*', <TokenType.ASTERISK: 17>, 17), ('three', <TokenType.IDENTIFIER: 2>, 17), (';', <TokenType.SEMICOLON: 11>, 17), ('int', <TokenType.INT_KW: 4>, 18), ('ten', <TokenType.IDENTIFIER: 2>, 18), ('=', <TokenType.EQUAL: 28>, 18), ('four', <TokenType.IDENTIFIER: 2>, 18), ('+', <TokenType.PLUS: 18>, 18), ('six', <TokenType.IDENTIFIER: 2>, 18), (';', <TokenType.SEMICOLON: 11>, 18), ('int', <TokenType.INT_KW: 4>, 19), ('eleven', <TokenType.IDENTIFIER: 2>, 19), ('=', <TokenType.EQUAL: 28>, 19), ('16', <TokenType.INT_CONSTANT: 3>, 19), ('-', <TokenType.HYPHEN: 13>, 19), ('five', <TokenType.IDENTIFIER: 2>, 19), (';', <TokenType.SEMICOLON: 11>, 19), ('int', <TokenType.INT_KW: 4>, 20), ('twelve', <TokenType.IDENTIFIER: 2>, 20), ('=', <TokenType.EQUAL: 28>, 20), ('six', <TokenType.IDENTIFIER: 2>, 20), ('+', <TokenType.PLUS: 18>, 20), ('six', <TokenType.IDENTIFIER: 2>, 20), (';', <TokenType.SEMICOLON: 11>, 20), ('check_12_ints', <TokenType.IDENTIFIER: 2>, 21), ('(', <TokenType.OPEN_PAREN: 7>, 21), ('one', <TokenType.IDENTIFIER: 2>, 21), (',', <TokenType.COMMA: 38>, 21), ('two', <TokenType.IDENTIFIER: 2>, 21), (',', <TokenType.COMMA: 38>, 21), ('three', <TokenType.IDENTIFIER: 2>, 21), (',', <TokenType.COMMA: 38>, 21), ('four', <TokenType.IDENTIFIER: 2>, 21), (',', <TokenType.COMMA: 38>, 21), ('five', <TokenType.IDENTIFIER: 2>, 21), (',', <TokenType.COMMA: 38>, 21), ('six', <TokenType.IDENTIFIER: 2>, 21), (',', <TokenType.COMMA: 38>, 21), ('seven', <TokenType.IDENTIFIER: 2>, 21), (',', <TokenType.COMMA: 38>, 21), ('eight', <TokenType.IDENTIFIER: 2>, 21), (',', <TokenType.COMMA: 38>, 21), ('nine', <TokenType.IDENTIFIER: 2>, 21), (',', <TokenType.COMMA: 38>, 21), ('ten', <TokenType.IDENTIFIER: 2>, 21), (',', <TokenType.COMMA: 38>, 21), ('eleven', <TokenType.IDENTIFIER: 2>, 22), (',', <TokenType.COMMA: 38>, 22), ('twelve', <TokenType.IDENTIFIER: 2>, 22), (',', <TokenType.COMMA: 38>, 22), ('1', <TokenType.INT_CONSTANT: 3>, 22), (')', <TokenType.CLOSE_PAREN: 8>, 22), (';', <TokenType.SEMICOLON: 11>, 22), ('int', <TokenType.INT_KW: 4>, 23), ('thirteen', <TokenType.IDENTIFIER: 2>, 23), ('=', <TokenType.EQUAL: 28>, 23), ('10', <TokenType.INT_CONSTANT: 3>, 23), ('+', <TokenType.PLUS: 18>, 23), ('glob_three', <TokenType.IDENTIFIER: 2>, 23), (';', <TokenType.SEMICOLON: 11>, 23), ('int', <TokenType.INT_KW: 4>, 24), ('fourteen', <TokenType.IDENTIFIER: 2>, 24), ('=', <TokenType.EQUAL: 28>, 24), ('thirteen', <TokenType.IDENTIFIER: 2>, 24), ('+', <TokenType.PLUS: 18>, 24), ('1', <TokenType.INT_CONSTANT: 3>, 24), (';', <TokenType.SEMICOLON: 11>, 24), ('int', <TokenType.INT_KW: 4>, 25), ('fifteen', <TokenType.IDENTIFIER: 2>, 25), ('=', <TokenType.EQUAL: 28>, 25), ('28', <TokenType.INT_CONSTANT: 3>, 25), ('-', <TokenType.HYPHEN: 13>, 25), ('thirteen', <TokenType.IDENTIFIER: 2>, 25), (';', <TokenType.SEMICOLON: 11>, 25), ('int', <TokenType.INT_KW: 4>, 26), ('sixteen', <TokenType.IDENTIFIER: 2>, 26), ('=', <TokenType.EQUAL: 28>, 26), ('fourteen', <TokenType.IDENTIFIER: 2>, 26), ('+', <TokenType.PLUS: 18>, 26), ('2', <TokenType.INT_CONSTANT: 3>, 26), (';', <TokenType.SEMICOLON: 11>, 26), ('int', <TokenType.INT_KW: 4>, 27), ('seventeen', <TokenType.IDENTIFIER: 2>, 27), ('=', <TokenType.EQUAL: 28>, 27), ('4', <TokenType.INT_CONSTANT: 3>, 27), ('+', <TokenType.PLUS: 18>, 27), ('thirteen', <TokenType.IDENTIFIER: 2>, 27), (';', <TokenType.SEMICOLON: 11>, 27), ('int', <TokenType.INT_KW: 4>, 28), ('eighteen', <TokenType.IDENTIFIER: 2>, 28), ('=', <TokenType.EQUAL: 28>, 28), ('32', <TokenType.INT_CONSTANT: 3>, 28), ('-', <TokenType.HYPHEN: 13>, 28), ('fourteen', <TokenType.IDENTIFIER: 2>, 28), (';', <TokenType.SEMICOLON: 11>, 28), ('int', <TokenType.INT_KW: 4>, 29), ('nineteen', <TokenType.IDENTIFIER: 2>, 29), ('=', <TokenType.EQUAL: 28>, 29), ('35', <TokenType.INT_CONSTANT: 3>, 29), ('-', <TokenType.HYPHEN: 13>, 29), ('sixteen', <TokenType.IDENTIFIER: 2>, 29), (';', <TokenType.SEMICOLON: 11>, 29), ('int', <TokenType.INT_KW: 4>, 30), ('twenty', <TokenType.IDENTIFIER: 2>, 30), ('=', <TokenType.EQUAL: 28>, 30), ('fifteen', <TokenType.IDENTIFIER: 2>, 30), ('+', <TokenType.PLUS: 18>, 30), ('5', <TokenType.INT_CONSTANT: 3>, 30), (';', <TokenType.SEMICOLON: 11>, 30), ('int', <TokenType.INT_KW: 4>, 31), ('twenty_one', <TokenType.IDENTIFIER: 2>, 31), ('=', <TokenType.EQUAL: 28>, 31), ('thirteen', <TokenType.IDENTIFIER: 2>, 31), ('*', <TokenType.ASTERISK: 17>, 31), ('2', <TokenType.INT_CONSTANT: 3>, 31), ('-', <TokenType.HYPHEN: 13>, 31), ('5', <TokenType.INT_CONSTANT: 3>, 31), (';', <TokenType.SEMICOLON: 11>, 31), ('int', <TokenType.INT_KW: 4>, 32), ('twenty_two', <TokenType.IDENTIFIER: 2>, 32), ('=', <TokenType.EQUAL: 28>, 32), ('fifteen', <TokenType.IDENTIFIER: 2>, 32), ('+', <TokenType.PLUS: 18>, 32), ('7', <TokenType.INT_CONSTANT: 3>, 32), (';', <TokenType.SEMICOLON: 11>, 32), ('int', <TokenType.INT_KW: 4>, 33), ('twenty_three', <TokenType.IDENTIFIER: 2>, 33), ('=', <TokenType.EQUAL: 28>, 33), ('6', <TokenType.INT_CONSTANT: 3>, 33), ('+', <TokenType.PLUS: 18>, 33), ('seventeen', <TokenType.IDENTIFIER: 2>, 33), (';', <TokenType.SEMICOLON: 11>, 33), ('int', <TokenType.INT_KW: 4>, 34), ('twenty_four', <TokenType.IDENTIFIER: 2>, 34), ('=', <TokenType.EQUAL: 28>, 34), ('thirteen', <TokenType.IDENTIFIER: 2>, 34), ('+', <TokenType.PLUS: 18>, 34), ('11', <TokenType.INT_CONSTANT: 3>, 34), (';', <TokenType.SEMICOLON: 11>, 34), ('check_12_ints', <TokenType.IDENTIFIER: 2>, 35), ('(', <TokenType.OPEN_PAREN: 7>, 35), ('thirteen', <TokenType.IDENTIFIER: 2>, 35), (',', <TokenType.COMMA: 38>, 35), ('fourteen', <TokenType.IDENTIFIER: 2>, 35), (',', <TokenType.COMMA: 38>, 35), ('fifteen', <TokenType.IDENTIFIER: 2>, 35), (',', <TokenType.COMMA: 38>, 35), ('sixteen', <TokenType.IDENTIFIER: 2>, 35), (',', <TokenType.COMMA: 38>, 35), ('seventeen', <TokenType.IDENTIFIER: 2>, 35), (',', <TokenType.COMMA: 38>, 35), ('eighteen', <TokenType.IDENTIFIER: 2>, 35), (',', <TokenType.COMMA: 38>, 35), ('nineteen', <TokenType.IDENTIFIER: 2>, 36), (',', <TokenType.COMMA: 38>, 36), ('twenty', <TokenType.IDENTIFIER: 2>, 36), (',', <TokenType.COMMA: 38>, 36), ('twenty_one', <TokenType.IDENTIFIER: 2>, 36), (',', <TokenType.COMMA: 38>, 36), ('twenty_two', <TokenType.IDENTIFIER: 2>, 36), (',', <TokenType.COMMA: 38>, 36), ('twenty_three', <TokenType.IDENTIFIER: 2>, 36), (',', <TokenType.COMMA: 38>, 36), ('twenty_four', <TokenType.IDENTIFIER: 2>, 37), (',', <TokenType.COMMA: 38>, 37), ('13', <TokenType.INT_CONSTANT: 3>, 37), (')', <TokenType.CLOSE_PAREN: 8>, 37), (';', <TokenType.SEMICOLON: 11>, 37), ('if', <TokenType.IF_KW: 31>, 38), ('(', <TokenType.OPEN_PAREN: 7>, 38), ('should_spill', <TokenType.IDENTIFIER: 2>, 38), ('!=', <TokenType.EXCLAMATIONEQUAL: 25>, 38), ('6', <TokenType.INT_CONSTANT: 3>, 38), (')', <TokenType.CLOSE_PAREN: 8>, 38), ('{', <TokenType.OPEN_BRACE: 9>, 38), ('return', <TokenType.RETURN_KW: 6>, 39), ('-', <TokenType.HYPHEN: 13>, 39), ('1', <TokenType.INT_CONSTANT: 3>, 39), (';', <TokenType.SEMICOLON: 11>, 39), ('}', <TokenType.CLOSE_BRACE: 10>, 40), ('return', <TokenType.RETURN_KW: 6>, 41), ('0', <TokenType.INT_CONSTANT: 3>, 41), (';', <TokenType.SEMICOLON: 11>, 41), ('}', <TokenType.CLOSE_BRACE: 10>, 42)]
<parser.Int object at 0x7f2700c720c0>
[<parser.TypeS object at 0x7f26fcfebe00>]
[<class 'parser.Int'>]
int
[<class 'parser.Int'>]
[<class 'parser.Int'>]
int (FunDeclarator: (IdenDeclarator: check_one_int) [int (IdenDeclarator: actual), int (IdenDeclarator: expected)])
FunType: ParamTypes: [int, int] Return Type: int
<parser.Int object at 0x7f26fcfebef0>
[<parser.TypeS object at 0x7f26fcfebec0>]
[<class 'parser.Int'>]
int
[<class 'parser.Int'>]
[<class 'parser.Int'>]
[<class 'parser.Int'>]
[<class 'parser.Int'>]
[<class 'parser.Int'>]
[<class 'parser.Int'>]
int (FunDeclarator: (IdenDeclarator: check_5_ints) [int (IdenDeclarator: a), int (IdenDeclarator: b), int (IdenDeclarator: c), int (IdenDeclarator: d), int (IdenDeclarator: e), int (IdenDeclarator: start)])
FunType: ParamTypes: [int, int, int, int, int, int] Return Type: int
<parser.Int object at 0x7f26fcfebe00>
[<parser.TypeS object at 0x7f26fcfebfe0>]
[<class 'parser.Int'>]
int
[<class 'parser.Int'>]
[<class 'parser.Int'>]
[<class 'parser.Int'>]
[<class 'parser.Int'>]
[<class 'parser.Int'>]
[<class 'parser.Int'>]
[<class 'parser.Int'>]
[<class 'parser.Int'>]
[<class 'parser.Int'>]
[<class 'parser.Int'>]
[<class 'parser.Int'>]
[<class 'parser.Int'>]
[<class 'parser.Int'>]
int (FunDeclarator: (IdenDeclarator: check_12_ints) [int (IdenDeclarator: a), int (IdenDeclarator: b), int (IdenDeclarator: c), int (IdenDeclarator: d), int (IdenDeclarator: e), int (IdenDeclarator: f), int (IdenDeclarator: g), int (IdenDeclarator: h), int (IdenDeclarator: i), int (IdenDeclarator: j), int (IdenDeclarator: k), int (IdenDeclarator: l), int (IdenDeclarator: start)])
FunType: ParamTypes: [int, int, int, int, int, int, int, int, int, int, int, int, int] Return Type: int
<parser.Int object at 0x7f26fcfebfe0>
[<parser.TypeS object at 0x7f26fd0101a0>]
[<class 'parser.Int'>]
int
[<class 'parser.Int'>]
int (FunDeclarator: (IdenDeclarator: id) [int (IdenDeclarator: x)])
FunType: ParamTypes: [int] Return Type: int
<parser.Int object at 0x7f26fcfebfe0>
[<parser.TypeS object at 0x7f26fcfebe00>]
[<class 'parser.Int'>]
int
int (IdenDeclarator: glob_three)
int
<parser.Int object at 0x7f26fcfebe00>
[<parser.TypeS object at 0x7f26fcfebfe0>]
[<class 'parser.Int'>]
int
int (FunDeclarator: (IdenDeclarator: target) [])
FunType: ParamTypes: [] Return Type: int
<parser.Int object at 0x7f26fd0109b0>
[<parser.TypeS object at 0x7f26fd010a70>]
[<class 'parser.Int'>]
int
int (IdenDeclarator: should_spill)
int
<parser.Int object at 0x7f26fd010a70>
[<parser.TypeS object at 0x7f26fd0109b0>]
[<class 'parser.Int'>]
int
int (IdenDeclarator: one)
int
<parser.Int object at 0x7f26fd0109b0>
[<parser.TypeS object at 0x7f26fd010a70>]
[<class 'parser.Int'>]
int
int (IdenDeclarator: two)
int
<parser.Int object at 0x7f26fd010a70>
[<parser.TypeS object at 0x7f26fd0109b0>]
[<class 'parser.Int'>]
int
int (IdenDeclarator: three)
int
<parser.Int object at 0x7f26fd0109b0>
[<parser.TypeS object at 0x7f26fd010a70>]
[<class 'parser.Int'>]
int
int (IdenDeclarator: four)
int
<parser.Int object at 0x7f26fd010a70>
[<parser.TypeS object at 0x7f26fd0109b0>]
[<class 'parser.Int'>]
int
int (IdenDeclarator: five)
int
<parser.Int object at 0x7f26fd0109b0>
[<parser.TypeS object at 0x7f26fd010a70>]
[<class 'parser.Int'>]
int
int (IdenDeclarator: six)
int
<parser.Int object at 0x7f26fd010a70>
[<parser.TypeS object at 0x7f26fd0109b0>]
[<class 'parser.Int'>]
int
int (IdenDeclarator: seven)
int
<parser.Int object at 0x7f26fd0109b0>
[<parser.TypeS object at 0x7f26fd010a70>]
[<class 'parser.Int'>]
int
int (IdenDeclarator: eight)
int
<parser.Int object at 0x7f26fd010a70>
[<parser.TypeS object at 0x7f26fd0109b0>]
[<class 'parser.Int'>]
int
int (IdenDeclarator: nine)
int
<parser.Int object at 0x7f26fd0109b0>
[<parser.TypeS object at 0x7f26fd010a70>]
[<class 'parser.Int'>]
int
int (IdenDeclarator: ten)
int
<parser.Int object at 0x7f26fd010a70>
[<parser.TypeS object at 0x7f26fd0109b0>]
[<class 'parser.Int'>]
int
int (IdenDeclarator: eleven)
int
<parser.Int object at 0x7f26fd0109b0>
[<parser.TypeS object at 0x7f26fd010a70>]
[<class 'parser.Int'>]
int
int (IdenDeclarator: twelve)
int
<parser.Int object at 0x7f26fd088740>
[<parser.TypeS object at 0x7f26fd0128a0>]
[<class 'parser.Int'>]
int
int (IdenDeclarator: thirteen)
int
<parser.Int object at 0x7f26fd012930>
[<parser.TypeS object at 0x7f26fd0128a0>]
[<class 'parser.Int'>]
int
int (IdenDeclarator: fourteen)
int
<parser.Int object at 0x7f26fd0128a0>
[<parser.TypeS object at 0x7f26fd012930>]
[<class 'parser.Int'>]
int
int (IdenDeclarator: fifteen)
int
<parser.Int object at 0x7f26fd012930>
[<parser.TypeS object at 0x7f26fd0128a0>]
[<class 'parser.Int'>]
int
int (IdenDeclarator: sixteen)
int
<parser.Int object at 0x7f26fd0128a0>
[<parser.TypeS object at 0x7f26fd012930>]
[<class 'parser.Int'>]
int
int (IdenDeclarator: seventeen)
int
<parser.Int object at 0x7f26fd012930>
[<parser.TypeS object at 0x7f26fd0128a0>]
[<class 'parser.Int'>]
int
int (IdenDeclarator: eighteen)
int
<parser.Int object at 0x7f26fd0128a0>
[<parser.TypeS object at 0x7f26fd0132c0>]
[<class 'parser.Int'>]
int
int (IdenDeclarator: nineteen)
int
<parser.Int object at 0x7f26fd0132c0>
[<parser.TypeS object at 0x7f26fd012930>]
[<class 'parser.Int'>]
int
int (IdenDeclarator: twenty)
int
<parser.Int object at 0x7f26fd012930>
[<parser.TypeS object at 0x7f26fd0132c0>]
[<class 'parser.Int'>]
int
int (IdenDeclarator: twenty_one)
int
<parser.Int object at 0x7f26fd0132c0>
[<parser.TypeS object at 0x7f26fd012930>]
[<class 'parser.Int'>]
int
int (IdenDeclarator: twenty_two)
int
<parser.Int object at 0x7f26fd012930>
[<parser.TypeS object at 0x7f26fd0132c0>]
[<class 'parser.Int'>]
int
int (IdenDeclarator: twenty_three)
int
<parser.Int object at 0x7f26fd0132c0>
[<parser.TypeS object at 0x7f26fd012930>]
[<class 'parser.Int'>]
int
int (IdenDeclarator: twenty_four)
int
0
1
AST Program:
FunDecl: NULL check_one_int (actual, expected, ) ParamTypes: (int, int, ) ReturnType: int

FunDecl: NULL check_5_ints (a, b, c, d, e, start, ) ParamTypes: (int, int, int, int, int, int, ) ReturnType: int

FunDecl: NULL check_12_ints (a, b, c, d, e, f, g, h, i, j, k, l, start, ) ParamTypes: (int, int, int, int, int, int, int, int, int, int, int, int, int, ) ReturnType: int

FunDecl: NULL id (x, ) ParamTypes: (int, ) ReturnType: int

VarDecl: NULL int glob_three = SI: (3)
FunDecl: NULL target () ParamTypes: () ReturnType: int
Declaration:
VarDecl: NULL int should_spill = SI: ((glob_three) ADD (3))
Declaration:
VarDecl: NULL int one = SI: ((glob_three) SUBTRACT (2))
Declaration:
VarDecl: NULL int two = SI: ((one) ADD (one))
Declaration:
VarDecl: NULL int three = SI: ((2) ADD (one))
Declaration:
VarDecl: NULL int four = SI: ((two) MULTIPLY (two))
Declaration:
VarDecl: NULL int five = SI: ((6) SUBTRACT (one))
Declaration:
VarDecl: NULL int six = SI: ((two) MULTIPLY (three))
Declaration:
VarDecl: NULL int seven = SI: ((one) ADD (6))
Declaration:
VarDecl: NULL int eight = SI: ((two) MULTIPLY (4))
Declaration:
VarDecl: NULL int nine = SI: ((three) MULTIPLY (three))
Declaration:
VarDecl: NULL int ten = SI: ((four) ADD (six))
Declaration:
VarDecl: NULL int eleven = SI: ((16) SUBTRACT (five))
Declaration:
VarDecl: NULL int twelve = SI: ((six) ADD (six))
Statement: Expression: (check_12_ints((one), (two), (three), (four), (five), (six), (seven), (eight), (nine), (ten), (eleven), (twelve), (1), ))
Declaration:
VarDecl: NULL int thirteen = SI: ((10) ADD (glob_three))
Declaration:
VarDecl: NULL int fourteen = SI: ((thirteen) ADD (1))
Declaration:
VarDecl: NULL int fifteen = SI: ((28) SUBTRACT (thirteen))
Declaration:
VarDecl: NULL int sixteen = SI: ((fourteen) ADD (2))
Declaration:
VarDecl: NULL int seventeen = SI: ((4) ADD (thirteen))
Declaration:
VarDecl: NULL int eighteen = SI: ((32) SUBTRACT (fourteen))
Declaration:
VarDecl: NULL int nineteen = SI: ((35) SUBTRACT (sixteen))
Declaration:
VarDecl: NULL int twenty = SI: ((fifteen) ADD (5))
Declaration:
VarDecl: NULL int twenty_one = SI: (((thirteen) MULTIPLY (2)) SUBTRACT (5))
Declaration:
VarDecl: NULL int twenty_two = SI: ((fifteen) ADD (7))
Declaration:
VarDecl: NULL int twenty_three = SI: ((6) ADD (seventeen))
Declaration:
VarDecl: NULL int twenty_four = SI: ((thirteen) ADD (11))
Statement: Expression: (check_12_ints((thirteen), (fourteen), (fifteen), (sixteen), (seventeen), (eighteen), (nineteen), (twenty), (twenty_one), (twenty_two), (twenty_three), (twenty_four), (13), ))
Statement: if (((should_spill) NOTEQUAL (6)))
	Statement: return (NEGATE (1))
Statement: return (0)

OLD {}
NEW {}
OLD {}
NEW {}
OLD {}
NEW {}
OLD {}
NEW {}
OLD {}
NEW {}
OLD {}
NEW {}
0
1
AST Program:
FunDecl: NULL check_one_int (actual.0, expected.1, ) ParamTypes: (int, int, ) ReturnType: int

FunDecl: NULL check_5_ints (a.2, b.3, c.4, d.5, e.6, start.7, ) ParamTypes: (int, int, int, int, int, int, ) ReturnType: int

FunDecl: NULL check_12_ints (a.8, b.9, c.10, d.11, e.12, f.13, g.14, h.15, i.16, j.17, k.18, l.19, start.20, ) ParamTypes: (int, int, int, int, int, int, int, int, int, int, int, int, int, ) ReturnType: int

FunDecl: NULL id (x.21, ) ParamTypes: (int, ) ReturnType: int

VarDecl: NULL int glob_three = SI: (3)
FunDecl: NULL target () ParamTypes: () ReturnType: int
Declaration:
VarDecl: NULL int should_spill.22 = SI: ((glob_three) ADD (3))
Declaration:
VarDecl: NULL int one.23 = SI: ((glob_three) SUBTRACT (2))
Declaration:
VarDecl: NULL int two.24 = SI: ((one.23) ADD (one.23))
Declaration:
VarDecl: NULL int three.25 = SI: ((2) ADD (one.23))
Declaration:
VarDecl: NULL int four.26 = SI: ((two.24) MULTIPLY (two.24))
Declaration:
VarDecl: NULL int five.27 = SI: ((6) SUBTRACT (one.23))
Declaration:
VarDecl: NULL int six.28 = SI: ((two.24) MULTIPLY (three.25))
Declaration:
VarDecl: NULL int seven.29 = SI: ((one.23) ADD (6))
Declaration:
VarDecl: NULL int eight.30 = SI: ((two.24) MULTIPLY (4))
Declaration:
VarDecl: NULL int nine.31 = SI: ((three.25) MULTIPLY (three.25))
Declaration:
VarDecl: NULL int ten.32 = SI: ((four.26) ADD (six.28))
Declaration:
VarDecl: NULL int eleven.33 = SI: ((16) SUBTRACT (five.27))
Declaration:
VarDecl: NULL int twelve.34 = SI: ((six.28) ADD (six.28))
Statement: Expression: (check_12_ints((one.23), (two.24), (three.25), (four.26), (five.27), (six.28), (seven.29), (eight.30), (nine.31), (ten.32), (eleven.33), (twelve.34), (1), ))
Declaration:
VarDecl: NULL int thirteen.35 = SI: ((10) ADD (glob_three))
Declaration:
VarDecl: NULL int fourteen.36 = SI: ((thirteen.35) ADD (1))
Declaration:
VarDecl: NULL int fifteen.37 = SI: ((28) SUBTRACT (thirteen.35))
Declaration:
VarDecl: NULL int sixteen.38 = SI: ((fourteen.36) ADD (2))
Declaration:
VarDecl: NULL int seventeen.39 = SI: ((4) ADD (thirteen.35))
Declaration:
VarDecl: NULL int eighteen.40 = SI: ((32) SUBTRACT (fourteen.36))
Declaration:
VarDecl: NULL int nineteen.41 = SI: ((35) SUBTRACT (sixteen.38))
Declaration:
VarDecl: NULL int twenty.42 = SI: ((fifteen.37) ADD (5))
Declaration:
VarDecl: NULL int twenty_one.43 = SI: (((thirteen.35) MULTIPLY (2)) SUBTRACT (5))
Declaration:
VarDecl: NULL int twenty_two.44 = SI: ((fifteen.37) ADD (7))
Declaration:
VarDecl: NULL int twenty_three.45 = SI: ((6) ADD (seventeen.39))
Declaration:
VarDecl: NULL int twenty_four.46 = SI: ((thirteen.35) ADD (11))
Statement: Expression: (check_12_ints((thirteen.35), (fourteen.36), (fifteen.37), (sixteen.38), (seventeen.39), (eighteen.40), (nineteen.41), (twenty.42), (twenty_one.43), (twenty_two.44), (twenty_three.45), (twenty_four.46), (13), ))
Statement: if (((should_spill.22) NOTEQUAL (6)))
	Statement: return (NEGATE (1))
Statement: return (0)

[(one.23 RetType: int), (two.24 RetType: int), (three.25 RetType: int), (four.26 RetType: int), (five.27 RetType: int), (six.28 RetType: int), (seven.29 RetType: int), (eight.30 RetType: int), (nine.31 RetType: int), (ten.32 RetType: int), (eleven.33 RetType: int), (twelve.34 RetType: int), (1 RetType: int)]
[(thirteen.35 RetType: int), (fourteen.36 RetType: int), (fifteen.37 RetType: int), (sixteen.38 RetType: int), (seventeen.39 RetType: int), (eighteen.40 RetType: int), (nineteen.41 RetType: int), (twenty.42 RetType: int), (twenty_one.43 RetType: int), (twenty_two.44 RetType: int), (twenty_three.45 RetType: int), (twenty_four.46 RetType: int), (13 RetType: int)]
0
1
AST Program:
FunDecl: NULL check_one_int (actual.0, expected.1, ) ParamTypes: (int, int, ) ReturnType: int

FunDecl: NULL check_5_ints (a.2, b.3, c.4, d.5, e.6, start.7, ) ParamTypes: (int, int, int, int, int, int, ) ReturnType: int

FunDecl: NULL check_12_ints (a.8, b.9, c.10, d.11, e.12, f.13, g.14, h.15, i.16, j.17, k.18, l.19, start.20, ) ParamTypes: (int, int, int, int, int, int, int, int, int, int, int, int, int, ) ReturnType: int

FunDecl: NULL id (x.21, ) ParamTypes: (int, ) ReturnType: int

VarDecl: NULL int glob_three = SI: (3 : int) : int
FunDecl: NULL target () ParamTypes: () ReturnType: int
Declaration:
VarDecl: NULL int should_spill.22 = SI: ((glob_three : int) ADD (3 : int) : int) : int
Declaration:
VarDecl: NULL int one.23 = SI: ((glob_three : int) SUBTRACT (2 : int) : int) : int
Declaration:
VarDecl: NULL int two.24 = SI: ((one.23 : int) ADD (one.23 : int) : int) : int
Declaration:
VarDecl: NULL int three.25 = SI: ((2 : int) ADD (one.23 : int) : int) : int
Declaration:
VarDecl: NULL int four.26 = SI: ((two.24 : int) MULTIPLY (two.24 : int) : int) : int
Declaration:
VarDecl: NULL int five.27 = SI: ((6 : int) SUBTRACT (one.23 : int) : int) : int
Declaration:
VarDecl: NULL int six.28 = SI: ((two.24 : int) MULTIPLY (three.25 : int) : int) : int
Declaration:
VarDecl: NULL int seven.29 = SI: ((one.23 : int) ADD (6 : int) : int) : int
Declaration:
VarDecl: NULL int eight.30 = SI: ((two.24 : int) MULTIPLY (4 : int) : int) : int
Declaration:
VarDecl: NULL int nine.31 = SI: ((three.25 : int) MULTIPLY (three.25 : int) : int) : int
Declaration:
VarDecl: NULL int ten.32 = SI: ((four.26 : int) ADD (six.28 : int) : int) : int
Declaration:
VarDecl: NULL int eleven.33 = SI: ((16 : int) SUBTRACT (five.27 : int) : int) : int
Declaration:
VarDecl: NULL int twelve.34 = SI: ((six.28 : int) ADD (six.28 : int) : int) : int
Statement: Expression: (check_12_ints((one.23 : int), (two.24 : int), (three.25 : int), (four.26 : int), (five.27 : int), (six.28 : int), (seven.29 : int), (eight.30 : int), (nine.31 : int), (ten.32 : int), (eleven.33 : int), (twelve.34 : int), (1 : int), ) : int)
Declaration:
VarDecl: NULL int thirteen.35 = SI: ((10 : int) ADD (glob_three : int) : int) : int
Declaration:
VarDecl: NULL int fourteen.36 = SI: ((thirteen.35 : int) ADD (1 : int) : int) : int
Declaration:
VarDecl: NULL int fifteen.37 = SI: ((28 : int) SUBTRACT (thirteen.35 : int) : int) : int
Declaration:
VarDecl: NULL int sixteen.38 = SI: ((fourteen.36 : int) ADD (2 : int) : int) : int
Declaration:
VarDecl: NULL int seventeen.39 = SI: ((4 : int) ADD (thirteen.35 : int) : int) : int
Declaration:
VarDecl: NULL int eighteen.40 = SI: ((32 : int) SUBTRACT (fourteen.36 : int) : int) : int
Declaration:
VarDecl: NULL int nineteen.41 = SI: ((35 : int) SUBTRACT (sixteen.38 : int) : int) : int
Declaration:
VarDecl: NULL int twenty.42 = SI: ((fifteen.37 : int) ADD (5 : int) : int) : int
Declaration:
VarDecl: NULL int twenty_one.43 = SI: (((thirteen.35 : int) MULTIPLY (2 : int) : int) SUBTRACT (5 : int) : int) : int
Declaration:
VarDecl: NULL int twenty_two.44 = SI: ((fifteen.37 : int) ADD (7 : int) : int) : int
Declaration:
VarDecl: NULL int twenty_three.45 = SI: ((6 : int) ADD (seventeen.39 : int) : int) : int
Declaration:
VarDecl: NULL int twenty_four.46 = SI: ((thirteen.35 : int) ADD (11 : int) : int) : int
Statement: Expression: (check_12_ints((thirteen.35 : int), (fourteen.36 : int), (fifteen.37 : int), (sixteen.38 : int), (seventeen.39 : int), (eighteen.40 : int), (nineteen.41 : int), (twenty.42 : int), (twenty_one.43 : int), (twenty_two.44 : int), (twenty_three.45 : int), (twenty_four.46 : int), (13 : int), ) : int)
Statement: if (((should_spill.22 : int) NOTEQUAL (6 : int) : int))
	Statement: return (NEGATE (1 : int) : int)
Statement: return (0 : int)

Type Table:
 {}
Symbol Table:
 {'check_one_int': check_one_int FunType: ParamTypes: [int, int] Return Type: int Defined: False Global: True, 'check_5_ints': check_5_ints FunType: ParamTypes: [int, int, int, int, int, int] Return Type: int Defined: False Global: True, 'check_12_ints': check_12_ints FunType: ParamTypes: [int, int, int, int, int, int, int, int, int, int, int, int, int] Return Type: int Defined: False Global: True, 'id': id FunType: ParamTypes: [int] Return Type: int Defined: False Global: True, 'glob_three': glob_three int InitialVal: InitialList: [c_int(3)] Global: True, 'target': target FunType: ParamTypes: [] Return Type: int Defined: True Global: True, 'should_spill.22': should_spill.22 int <typeChecker.LocalAttributes object at 0x7f26fce31370>, 'one.23': one.23 int <typeChecker.LocalAttributes object at 0x7f26fce315b0>, 'two.24': two.24 int <typeChecker.LocalAttributes object at 0x7f26fce317f0>, 'three.25': three.25 int <typeChecker.LocalAttributes object at 0x7f26fce31a00>, 'four.26': four.26 int <typeChecker.LocalAttributes object at 0x7f26fce31c40>, 'five.27': five.27 int <typeChecker.LocalAttributes object at 0x7f26fce31e50>, 'six.28': six.28 int <typeChecker.LocalAttributes object at 0x7f26fce32090>, 'seven.29': seven.29 int <typeChecker.LocalAttributes object at 0x7f26fce322a0>, 'eight.30': eight.30 int <typeChecker.LocalAttributes object at 0x7f26fce324e0>, 'nine.31': nine.31 int <typeChecker.LocalAttributes object at 0x7f26fce32720>, 'ten.32': ten.32 int <typeChecker.LocalAttributes object at 0x7f26fce32930>, 'eleven.33': eleven.33 int <typeChecker.LocalAttributes object at 0x7f26fce32b40>, 'twelve.34': twelve.34 int <typeChecker.LocalAttributes object at 0x7f26fce32d80>, 'thirteen.35': thirteen.35 int <typeChecker.LocalAttributes object at 0x7f26fce33560>, 'fourteen.36': fourteen.36 int <typeChecker.LocalAttributes object at 0x7f26fce337a0>, 'fifteen.37': fifteen.37 int <typeChecker.LocalAttributes object at 0x7f26fce339e0>, 'sixteen.38': sixteen.38 int <typeChecker.LocalAttributes object at 0x7f26fce33c20>, 'seventeen.39': seventeen.39 int <typeChecker.LocalAttributes object at 0x7f26fce33e60>, 'eighteen.40': eighteen.40 int <typeChecker.LocalAttributes object at 0x7f26fce340e0>, 'nineteen.41': nineteen.41 int <typeChecker.LocalAttributes object at 0x7f26fce34350>, 'twenty.42': twenty.42 int <typeChecker.LocalAttributes object at 0x7f26fce345c0>, 'twenty_one.43': twenty_one.43 int <typeChecker.LocalAttributes object at 0x7f26fce34830>, 'twenty_two.44': twenty_two.44 int <typeChecker.LocalAttributes object at 0x7f26fce34b60>, 'twenty_three.45': twenty_three.45 int <typeChecker.LocalAttributes object at 0x7f26fce34dd0>, 'twenty_four.46': twenty_four.46 int <typeChecker.LocalAttributes object at 0x7f26fce35040>}
0
1
AST Program:
FunDecl: NULL check_one_int (actual.0, expected.1, ) ParamTypes: (int, int, ) ReturnType: int

FunDecl: NULL check_5_ints (a.2, b.3, c.4, d.5, e.6, start.7, ) ParamTypes: (int, int, int, int, int, int, ) ReturnType: int

FunDecl: NULL check_12_ints (a.8, b.9, c.10, d.11, e.12, f.13, g.14, h.15, i.16, j.17, k.18, l.19, start.20, ) ParamTypes: (int, int, int, int, int, int, int, int, int, int, int, int, int, ) ReturnType: int

FunDecl: NULL id (x.21, ) ParamTypes: (int, ) ReturnType: int

VarDecl: NULL int glob_three = SI: (3 : int) : int
FunDecl: NULL target () ParamTypes: () ReturnType: int
Declaration:
VarDecl: NULL int should_spill.22 = SI: ((glob_three : int) ADD (3 : int) : int) : int
Declaration:
VarDecl: NULL int one.23 = SI: ((glob_three : int) SUBTRACT (2 : int) : int) : int
Declaration:
VarDecl: NULL int two.24 = SI: ((one.23 : int) ADD (one.23 : int) : int) : int
Declaration:
VarDecl: NULL int three.25 = SI: ((2 : int) ADD (one.23 : int) : int) : int
Declaration:
VarDecl: NULL int four.26 = SI: ((two.24 : int) MULTIPLY (two.24 : int) : int) : int
Declaration:
VarDecl: NULL int five.27 = SI: ((6 : int) SUBTRACT (one.23 : int) : int) : int
Declaration:
VarDecl: NULL int six.28 = SI: ((two.24 : int) MULTIPLY (three.25 : int) : int) : int
Declaration:
VarDecl: NULL int seven.29 = SI: ((one.23 : int) ADD (6 : int) : int) : int
Declaration:
VarDecl: NULL int eight.30 = SI: ((two.24 : int) MULTIPLY (4 : int) : int) : int
Declaration:
VarDecl: NULL int nine.31 = SI: ((three.25 : int) MULTIPLY (three.25 : int) : int) : int
Declaration:
VarDecl: NULL int ten.32 = SI: ((four.26 : int) ADD (six.28 : int) : int) : int
Declaration:
VarDecl: NULL int eleven.33 = SI: ((16 : int) SUBTRACT (five.27 : int) : int) : int
Declaration:
VarDecl: NULL int twelve.34 = SI: ((six.28 : int) ADD (six.28 : int) : int) : int
Statement: Expression: (check_12_ints((one.23 : int), (two.24 : int), (three.25 : int), (four.26 : int), (five.27 : int), (six.28 : int), (seven.29 : int), (eight.30 : int), (nine.31 : int), (ten.32 : int), (eleven.33 : int), (twelve.34 : int), (1 : int), ) : int)
Declaration:
VarDecl: NULL int thirteen.35 = SI: ((10 : int) ADD (glob_three : int) : int) : int
Declaration:
VarDecl: NULL int fourteen.36 = SI: ((thirteen.35 : int) ADD (1 : int) : int) : int
Declaration:
VarDecl: NULL int fifteen.37 = SI: ((28 : int) SUBTRACT (thirteen.35 : int) : int) : int
Declaration:
VarDecl: NULL int sixteen.38 = SI: ((fourteen.36 : int) ADD (2 : int) : int) : int
Declaration:
VarDecl: NULL int seventeen.39 = SI: ((4 : int) ADD (thirteen.35 : int) : int) : int
Declaration:
VarDecl: NULL int eighteen.40 = SI: ((32 : int) SUBTRACT (fourteen.36 : int) : int) : int
Declaration:
VarDecl: NULL int nineteen.41 = SI: ((35 : int) SUBTRACT (sixteen.38 : int) : int) : int
Declaration:
VarDecl: NULL int twenty.42 = SI: ((fifteen.37 : int) ADD (5 : int) : int) : int
Declaration:
VarDecl: NULL int twenty_one.43 = SI: (((thirteen.35 : int) MULTIPLY (2 : int) : int) SUBTRACT (5 : int) : int) : int
Declaration:
VarDecl: NULL int twenty_two.44 = SI: ((fifteen.37 : int) ADD (7 : int) : int) : int
Declaration:
VarDecl: NULL int twenty_three.45 = SI: ((6 : int) ADD (seventeen.39 : int) : int) : int
Declaration:
VarDecl: NULL int twenty_four.46 = SI: ((thirteen.35 : int) ADD (11 : int) : int) : int
Statement: Expression: (check_12_ints((thirteen.35 : int), (fourteen.36 : int), (fifteen.37 : int), (sixteen.38 : int), (seventeen.39 : int), (eighteen.40 : int), (nineteen.41 : int), (twenty.42 : int), (twenty_one.43 : int), (twenty_two.44 : int), (twenty_three.45 : int), (twenty_four.46 : int), (13 : int), ) : int)
Statement: if (((should_spill.22 : int) NOTEQUAL (6 : int) : int))
	Statement: return (NEGATE (1 : int) : int)
Statement: return (0 : int)

check_one_int FunType: ParamTypes: [int, int] Return Type: int Defined: False Global: True
check_5_ints FunType: ParamTypes: [int, int, int, int, int, int] Return Type: int Defined: False Global: True
check_12_ints FunType: ParamTypes: [int, int, int, int, int, int, int, int, int, int, int, int, int] Return Type: int Defined: False Global: True
id FunType: ParamTypes: [int] Return Type: int Defined: False Global: True
glob_three int InitialVal: InitialList: [c_int(3)] Global: True
target FunType: ParamTypes: [] Return Type: int Defined: True Global: True
should_spill.22 int <typeChecker.LocalAttributes object at 0x7f26fce31370>
one.23 int <typeChecker.LocalAttributes object at 0x7f26fce315b0>
two.24 int <typeChecker.LocalAttributes object at 0x7f26fce317f0>
three.25 int <typeChecker.LocalAttributes object at 0x7f26fce31a00>
four.26 int <typeChecker.LocalAttributes object at 0x7f26fce31c40>
five.27 int <typeChecker.LocalAttributes object at 0x7f26fce31e50>
six.28 int <typeChecker.LocalAttributes object at 0x7f26fce32090>
seven.29 int <typeChecker.LocalAttributes object at 0x7f26fce322a0>
eight.30 int <typeChecker.LocalAttributes object at 0x7f26fce324e0>
nine.31 int <typeChecker.LocalAttributes object at 0x7f26fce32720>
ten.32 int <typeChecker.LocalAttributes object at 0x7f26fce32930>
eleven.33 int <typeChecker.LocalAttributes object at 0x7f26fce32b40>
twelve.34 int <typeChecker.LocalAttributes object at 0x7f26fce32d80>
thirteen.35 int <typeChecker.LocalAttributes object at 0x7f26fce33560>
fourteen.36 int <typeChecker.LocalAttributes object at 0x7f26fce337a0>
fifteen.37 int <typeChecker.LocalAttributes object at 0x7f26fce339e0>
sixteen.38 int <typeChecker.LocalAttributes object at 0x7f26fce33c20>
seventeen.39 int <typeChecker.LocalAttributes object at 0x7f26fce33e60>
eighteen.40 int <typeChecker.LocalAttributes object at 0x7f26fce340e0>
nineteen.41 int <typeChecker.LocalAttributes object at 0x7f26fce34350>
twenty.42 int <typeChecker.LocalAttributes object at 0x7f26fce345c0>
twenty_one.43 int <typeChecker.LocalAttributes object at 0x7f26fce34830>
twenty_two.44 int <typeChecker.LocalAttributes object at 0x7f26fce34b60>
twenty_three.45 int <typeChecker.LocalAttributes object at 0x7f26fce34dd0>
twenty_four.46 int <typeChecker.LocalAttributes object at 0x7f26fce35040>
tmp.47 int <typeChecker.LocalAttributes object at 0x7f26fce375c0>
tmp.48 int <typeChecker.LocalAttributes object at 0x7f26fce377a0>
tmp.49 int <typeChecker.LocalAttributes object at 0x7f26fce37980>
tmp.50 int <typeChecker.LocalAttributes object at 0x7f26fce37b60>
tmp.51 int <typeChecker.LocalAttributes object at 0x7f26fce37d40>
tmp.52 int <typeChecker.LocalAttributes object at 0x7f26fce37f20>
tmp.53 int <typeChecker.LocalAttributes object at 0x7f26fce38140>
tmp.54 int <typeChecker.LocalAttributes object at 0x7f26fce38320>
tmp.55 int <typeChecker.LocalAttributes object at 0x7f26fce386b0>
tmp.56 int <typeChecker.LocalAttributes object at 0x7f26fce386e0>
tmp.57 int <typeChecker.LocalAttributes object at 0x7f26fce388c0>
tmp.58 int <typeChecker.LocalAttributes object at 0x7f26fce38b00>
tmp.59 int <typeChecker.LocalAttributes object at 0x7f26fce38ce0>
tmp.60 int <typeChecker.LocalAttributes object at 0x7f26fce38fe0>
tmp.61 int <typeChecker.LocalAttributes object at 0x7f26fce39130>
tmp.62 int <typeChecker.LocalAttributes object at 0x7f26fce39280>
tmp.63 int <typeChecker.LocalAttributes object at 0x7f26fce393d0>
tmp.64 int <typeChecker.LocalAttributes object at 0x7f26fce39520>
tmp.65 int <typeChecker.LocalAttributes object at 0x7f26fce39670>
tmp.66 int <typeChecker.LocalAttributes object at 0x7f26fce397c0>
tmp.67 int <typeChecker.LocalAttributes object at 0x7f26fce39910>
tmp.68 int <typeChecker.LocalAttributes object at 0x7f26fce39a60>
tmp.69 int <typeChecker.LocalAttributes object at 0x7f26fce39bb0>
tmp.70 int <typeChecker.LocalAttributes object at 0x7f26fce39d00>
tmp.71 int <typeChecker.LocalAttributes object at 0x7f26fce39e50>
tmp.72 int <typeChecker.LocalAttributes object at 0x7f26fce39fa0>
tmp.73 int <typeChecker.LocalAttributes object at 0x7f26fce38ef0>
tmp.74 int <typeChecker.LocalAttributes object at 0x7f26fce3a0c0>
tmp.75 int <typeChecker.LocalAttributes object at 0x7f26fce3a2a0>
tmp.76 int <typeChecker.LocalAttributes object at 0x7f26fce3a480>
tmp.77 int <typeChecker.LocalAttributes object at 0x7f26fce3a660>
tmp.78 int <typeChecker.LocalAttributes object at 0x7f26fce3a840>
tmp.79 int <typeChecker.LocalAttributes object at 0x7f26fce3aa20>
tmp.80 int <typeChecker.LocalAttributes object at 0x7f26fce3ac00>
tmp.81 int <typeChecker.LocalAttributes object at 0x7f26fce3ade0>
tmp.82 int <typeChecker.LocalAttributes object at 0x7f26fce3b110>
tmp.83 int <typeChecker.LocalAttributes object at 0x7f26fce3aff0>
tmp.84 int <typeChecker.LocalAttributes object at 0x7f26fce3b320>
tmp.85 int <typeChecker.LocalAttributes object at 0x7f26fce3b500>
tmp.86 int <typeChecker.LocalAttributes object at 0x7f26fce3b740>
tmp.87 int <typeChecker.LocalAttributes object at 0x7f26fce3bad0>
tmp.88 int <typeChecker.LocalAttributes object at 0x7f26fce3bc20>
tmp.89 int <typeChecker.LocalAttributes object at 0x7f26fce3bd70>
tmp.90 int <typeChecker.LocalAttributes object at 0x7f26fce3bec0>
tmp.91 int <typeChecker.LocalAttributes object at 0x7f26fce3bfb0>
tmp.92 int <typeChecker.LocalAttributes object at 0x7f26fce401a0>
tmp.93 int <typeChecker.LocalAttributes object at 0x7f26fce402f0>
tmp.94 int <typeChecker.LocalAttributes object at 0x7f26fce40440>
tmp.95 int <typeChecker.LocalAttributes object at 0x7f26fce40590>
tmp.96 int <typeChecker.LocalAttributes object at 0x7f26fce406e0>
tmp.97 int <typeChecker.LocalAttributes object at 0x7f26fce40830>
tmp.98 int <typeChecker.LocalAttributes object at 0x7f26fce40980>
tmp.99 int <typeChecker.LocalAttributes object at 0x7f26fce40b00>
tmp.100 int <typeChecker.LocalAttributes object at 0x7f26fce400b0>
tmp.101 int <typeChecker.LocalAttributes object at 0x7f26fce40c80>
tmp.102 int <typeChecker.LocalAttributes object at 0x7f26fce38830>
tmp.104 int <typeChecker.LocalAttributes object at 0x7f26fce410d0>
TAC Program:[Function: target ([]) instructions:[tmp.47 = glob_three + 3, CopyToOffset(should_spill.22 + 0) = tmp.47 , tmp.48 = glob_three - 2, CopyToOffset(one.23 + 0) = tmp.48 , tmp.49 = one.23 + one.23, CopyToOffset(two.24 + 0) = tmp.49 , tmp.50 = 2 + one.23, CopyToOffset(three.25 + 0) = tmp.50 , tmp.51 = two.24 * two.24, CopyToOffset(four.26 + 0) = tmp.51 , tmp.52 = 6 - one.23, CopyToOffset(five.27 + 0) = tmp.52 , tmp.53 = two.24 * three.25, CopyToOffset(six.28 + 0) = tmp.53 , tmp.54 = one.23 + 6, CopyToOffset(seven.29 + 0) = tmp.54 , tmp.55 = two.24 * 4, CopyToOffset(eight.30 + 0) = tmp.55 , tmp.56 = three.25 * three.25, CopyToOffset(nine.31 + 0) = tmp.56 , tmp.57 = four.26 + six.28, CopyToOffset(ten.32 + 0) = tmp.57 , tmp.58 = 16 - five.27, CopyToOffset(eleven.33 + 0) = tmp.58 , tmp.59 = six.28 + six.28, CopyToOffset(twelve.34 + 0) = tmp.59 , Copy tmp.60 = one.23, Copy tmp.61 = two.24, Copy tmp.62 = three.25, Copy tmp.63 = four.26, Copy tmp.64 = five.27, Copy tmp.65 = six.28, Copy tmp.66 = seven.29, Copy tmp.67 = eight.30, Copy tmp.68 = nine.31, Copy tmp.69 = ten.32, Copy tmp.70 = eleven.33, Copy tmp.71 = twelve.34, Copy tmp.72 = 1, tmp.73 = check_12_ints([tmp.60, tmp.61, tmp.62, tmp.63, tmp.64, tmp.65, tmp.66, tmp.67, tmp.68, tmp.69, tmp.70, tmp.71, tmp.72]), tmp.74 = 10 + glob_three, CopyToOffset(thirteen.35 + 0) = tmp.74 , tmp.75 = thirteen.35 + 1, CopyToOffset(fourteen.36 + 0) = tmp.75 , tmp.76 = 28 - thirteen.35, CopyToOffset(fifteen.37 + 0) = tmp.76 , tmp.77 = fourteen.36 + 2, CopyToOffset(sixteen.38 + 0) = tmp.77 , tmp.78 = 4 + thirteen.35, CopyToOffset(seventeen.39 + 0) = tmp.78 , tmp.79 = 32 - fourteen.36, CopyToOffset(eighteen.40 + 0) = tmp.79 , tmp.80 = 35 - sixteen.38, CopyToOffset(nineteen.41 + 0) = tmp.80 , tmp.81 = fifteen.37 + 5, CopyToOffset(twenty.42 + 0) = tmp.81 , tmp.82 = thirteen.35 * 2, tmp.83 = tmp.82 - 5, CopyToOffset(twenty_one.43 + 0) = tmp.83 , tmp.84 = fifteen.37 + 7, CopyToOffset(twenty_two.44 + 0) = tmp.84 , tmp.85 = 6 + seventeen.39, CopyToOffset(twenty_three.45 + 0) = tmp.85 , tmp.86 = thirteen.35 + 11, CopyToOffset(twenty_four.46 + 0) = tmp.86 , Copy tmp.87 = thirteen.35, Copy tmp.88 = fourteen.36, Copy tmp.89 = fifteen.37, Copy tmp.90 = sixteen.38, Copy tmp.91 = seventeen.39, Copy tmp.92 = eighteen.40, Copy tmp.93 = nineteen.41, Copy tmp.94 = twenty.42, Copy tmp.95 = twenty_one.43, Copy tmp.96 = twenty_two.44, Copy tmp.97 = twenty_three.45, Copy tmp.98 = twenty_four.46, Copy tmp.99 = 13, tmp.100 = check_12_ints([tmp.87, tmp.88, tmp.89, tmp.90, tmp.91, tmp.92, tmp.93, tmp.94, tmp.95, tmp.96, tmp.97, tmp.98, tmp.99]), tmp.101 = should_spill.22 != 6, Copy tmp.102 = tmp.101, JumpIfZero(tmp.102, tmp.103), tmp.104 = -1, Return tmp.104, Label(tmp.103), Return 0, Return 0], Global: True glob_three = [c_int(3)]]
Type Table:
 {}
Symbol Table:
 {'check_one_int': check_one_int FunType: ParamTypes: [int, int] Return Type: int Defined: False Global: True, 'check_5_ints': check_5_ints FunType: ParamTypes: [int, int, int, int, int, int] Return Type: int Defined: False Global: True, 'check_12_ints': check_12_ints FunType: ParamTypes: [int, int, int, int, int, int, int, int, int, int, int, int, int] Return Type: int Defined: False Global: True, 'id': id FunType: ParamTypes: [int] Return Type: int Defined: False Global: True, 'glob_three': glob_three int InitialVal: InitialList: [c_int(3)] Global: True, 'target': target FunType: ParamTypes: [] Return Type: int Defined: True Global: True, 'should_spill.22': should_spill.22 int <typeChecker.LocalAttributes object at 0x7f26fce31370>, 'one.23': one.23 int <typeChecker.LocalAttributes object at 0x7f26fce315b0>, 'two.24': two.24 int <typeChecker.LocalAttributes object at 0x7f26fce317f0>, 'three.25': three.25 int <typeChecker.LocalAttributes object at 0x7f26fce31a00>, 'four.26': four.26 int <typeChecker.LocalAttributes object at 0x7f26fce31c40>, 'five.27': five.27 int <typeChecker.LocalAttributes object at 0x7f26fce31e50>, 'six.28': six.28 int <typeChecker.LocalAttributes object at 0x7f26fce32090>, 'seven.29': seven.29 int <typeChecker.LocalAttributes object at 0x7f26fce322a0>, 'eight.30': eight.30 int <typeChecker.LocalAttributes object at 0x7f26fce324e0>, 'nine.31': nine.31 int <typeChecker.LocalAttributes object at 0x7f26fce32720>, 'ten.32': ten.32 int <typeChecker.LocalAttributes object at 0x7f26fce32930>, 'eleven.33': eleven.33 int <typeChecker.LocalAttributes object at 0x7f26fce32b40>, 'twelve.34': twelve.34 int <typeChecker.LocalAttributes object at 0x7f26fce32d80>, 'thirteen.35': thirteen.35 int <typeChecker.LocalAttributes object at 0x7f26fce33560>, 'fourteen.36': fourteen.36 int <typeChecker.LocalAttributes object at 0x7f26fce337a0>, 'fifteen.37': fifteen.37 int <typeChecker.LocalAttributes object at 0x7f26fce339e0>, 'sixteen.38': sixteen.38 int <typeChecker.LocalAttributes object at 0x7f26fce33c20>, 'seventeen.39': seventeen.39 int <typeChecker.LocalAttributes object at 0x7f26fce33e60>, 'eighteen.40': eighteen.40 int <typeChecker.LocalAttributes object at 0x7f26fce340e0>, 'nineteen.41': nineteen.41 int <typeChecker.LocalAttributes object at 0x7f26fce34350>, 'twenty.42': twenty.42 int <typeChecker.LocalAttributes object at 0x7f26fce345c0>, 'twenty_one.43': twenty_one.43 int <typeChecker.LocalAttributes object at 0x7f26fce34830>, 'twenty_two.44': twenty_two.44 int <typeChecker.LocalAttributes object at 0x7f26fce34b60>, 'twenty_three.45': twenty_three.45 int <typeChecker.LocalAttributes object at 0x7f26fce34dd0>, 'twenty_four.46': twenty_four.46 int <typeChecker.LocalAttributes object at 0x7f26fce35040>, 'tmp.47': tmp.47 int <typeChecker.LocalAttributes object at 0x7f26fce375c0>, 'tmp.48': tmp.48 int <typeChecker.LocalAttributes object at 0x7f26fce377a0>, 'tmp.49': tmp.49 int <typeChecker.LocalAttributes object at 0x7f26fce37980>, 'tmp.50': tmp.50 int <typeChecker.LocalAttributes object at 0x7f26fce37b60>, 'tmp.51': tmp.51 int <typeChecker.LocalAttributes object at 0x7f26fce37d40>, 'tmp.52': tmp.52 int <typeChecker.LocalAttributes object at 0x7f26fce37f20>, 'tmp.53': tmp.53 int <typeChecker.LocalAttributes object at 0x7f26fce38140>, 'tmp.54': tmp.54 int <typeChecker.LocalAttributes object at 0x7f26fce38320>, 'tmp.55': tmp.55 int <typeChecker.LocalAttributes object at 0x7f26fce386b0>, 'tmp.56': tmp.56 int <typeChecker.LocalAttributes object at 0x7f26fce386e0>, 'tmp.57': tmp.57 int <typeChecker.LocalAttributes object at 0x7f26fce388c0>, 'tmp.58': tmp.58 int <typeChecker.LocalAttributes object at 0x7f26fce38b00>, 'tmp.59': tmp.59 int <typeChecker.LocalAttributes object at 0x7f26fce38ce0>, 'tmp.60': tmp.60 int <typeChecker.LocalAttributes object at 0x7f26fce38fe0>, 'tmp.61': tmp.61 int <typeChecker.LocalAttributes object at 0x7f26fce39130>, 'tmp.62': tmp.62 int <typeChecker.LocalAttributes object at 0x7f26fce39280>, 'tmp.63': tmp.63 int <typeChecker.LocalAttributes object at 0x7f26fce393d0>, 'tmp.64': tmp.64 int <typeChecker.LocalAttributes object at 0x7f26fce39520>, 'tmp.65': tmp.65 int <typeChecker.LocalAttributes object at 0x7f26fce39670>, 'tmp.66': tmp.66 int <typeChecker.LocalAttributes object at 0x7f26fce397c0>, 'tmp.67': tmp.67 int <typeChecker.LocalAttributes object at 0x7f26fce39910>, 'tmp.68': tmp.68 int <typeChecker.LocalAttributes object at 0x7f26fce39a60>, 'tmp.69': tmp.69 int <typeChecker.LocalAttributes object at 0x7f26fce39bb0>, 'tmp.70': tmp.70 int <typeChecker.LocalAttributes object at 0x7f26fce39d00>, 'tmp.71': tmp.71 int <typeChecker.LocalAttributes object at 0x7f26fce39e50>, 'tmp.72': tmp.72 int <typeChecker.LocalAttributes object at 0x7f26fce39fa0>, 'tmp.73': tmp.73 int <typeChecker.LocalAttributes object at 0x7f26fce38ef0>, 'tmp.74': tmp.74 int <typeChecker.LocalAttributes object at 0x7f26fce3a0c0>, 'tmp.75': tmp.75 int <typeChecker.LocalAttributes object at 0x7f26fce3a2a0>, 'tmp.76': tmp.76 int <typeChecker.LocalAttributes object at 0x7f26fce3a480>, 'tmp.77': tmp.77 int <typeChecker.LocalAttributes object at 0x7f26fce3a660>, 'tmp.78': tmp.78 int <typeChecker.LocalAttributes object at 0x7f26fce3a840>, 'tmp.79': tmp.79 int <typeChecker.LocalAttributes object at 0x7f26fce3aa20>, 'tmp.80': tmp.80 int <typeChecker.LocalAttributes object at 0x7f26fce3ac00>, 'tmp.81': tmp.81 int <typeChecker.LocalAttributes object at 0x7f26fce3ade0>, 'tmp.82': tmp.82 int <typeChecker.LocalAttributes object at 0x7f26fce3b110>, 'tmp.83': tmp.83 int <typeChecker.LocalAttributes object at 0x7f26fce3aff0>, 'tmp.84': tmp.84 int <typeChecker.LocalAttributes object at 0x7f26fce3b320>, 'tmp.85': tmp.85 int <typeChecker.LocalAttributes object at 0x7f26fce3b500>, 'tmp.86': tmp.86 int <typeChecker.LocalAttributes object at 0x7f26fce3b740>, 'tmp.87': tmp.87 int <typeChecker.LocalAttributes object at 0x7f26fce3bad0>, 'tmp.88': tmp.88 int <typeChecker.LocalAttributes object at 0x7f26fce3bc20>, 'tmp.89': tmp.89 int <typeChecker.LocalAttributes object at 0x7f26fce3bd70>, 'tmp.90': tmp.90 int <typeChecker.LocalAttributes object at 0x7f26fce3bec0>, 'tmp.91': tmp.91 int <typeChecker.LocalAttributes object at 0x7f26fce3bfb0>, 'tmp.92': tmp.92 int <typeChecker.LocalAttributes object at 0x7f26fce401a0>, 'tmp.93': tmp.93 int <typeChecker.LocalAttributes object at 0x7f26fce402f0>, 'tmp.94': tmp.94 int <typeChecker.LocalAttributes object at 0x7f26fce40440>, 'tmp.95': tmp.95 int <typeChecker.LocalAttributes object at 0x7f26fce40590>, 'tmp.96': tmp.96 int <typeChecker.LocalAttributes object at 0x7f26fce406e0>, 'tmp.97': tmp.97 int <typeChecker.LocalAttributes object at 0x7f26fce40830>, 'tmp.98': tmp.98 int <typeChecker.LocalAttributes object at 0x7f26fce40980>, 'tmp.99': tmp.99 int <typeChecker.LocalAttributes object at 0x7f26fce40b00>, 'tmp.100': tmp.100 int <typeChecker.LocalAttributes object at 0x7f26fce400b0>, 'tmp.101': tmp.101 int <typeChecker.LocalAttributes object at 0x7f26fce40c80>, 'tmp.102': tmp.102 int <typeChecker.LocalAttributes object at 0x7f26fce38830>, 'tmp.104': tmp.104 int <typeChecker.LocalAttributes object at 0x7f26fce410d0>}
OPTIMIZING FUNCTION Function: target ([]) instructions:[tmp.47 = glob_three + 3, CopyToOffset(should_spill.22 + 0) = tmp.47 , tmp.48 = glob_three - 2, CopyToOffset(one.23 + 0) = tmp.48 , tmp.49 = one.23 + one.23, CopyToOffset(two.24 + 0) = tmp.49 , tmp.50 = 2 + one.23, CopyToOffset(three.25 + 0) = tmp.50 , tmp.51 = two.24 * two.24, CopyToOffset(four.26 + 0) = tmp.51 , tmp.52 = 6 - one.23, CopyToOffset(five.27 + 0) = tmp.52 , tmp.53 = two.24 * three.25, CopyToOffset(six.28 + 0) = tmp.53 , tmp.54 = one.23 + 6, CopyToOffset(seven.29 + 0) = tmp.54 , tmp.55 = two.24 * 4, CopyToOffset(eight.30 + 0) = tmp.55 , tmp.56 = three.25 * three.25, CopyToOffset(nine.31 + 0) = tmp.56 , tmp.57 = four.26 + six.28, CopyToOffset(ten.32 + 0) = tmp.57 , tmp.58 = 16 - five.27, CopyToOffset(eleven.33 + 0) = tmp.58 , tmp.59 = six.28 + six.28, CopyToOffset(twelve.34 + 0) = tmp.59 , Copy tmp.60 = one.23, Copy tmp.61 = two.24, Copy tmp.62 = three.25, Copy tmp.63 = four.26, Copy tmp.64 = five.27, Copy tmp.65 = six.28, Copy tmp.66 = seven.29, Copy tmp.67 = eight.30, Copy tmp.68 = nine.31, Copy tmp.69 = ten.32, Copy tmp.70 = eleven.33, Copy tmp.71 = twelve.34, Copy tmp.72 = 1, tmp.73 = check_12_ints([tmp.60, tmp.61, tmp.62, tmp.63, tmp.64, tmp.65, tmp.66, tmp.67, tmp.68, tmp.69, tmp.70, tmp.71, tmp.72]), tmp.74 = 10 + glob_three, CopyToOffset(thirteen.35 + 0) = tmp.74 , tmp.75 = thirteen.35 + 1, CopyToOffset(fourteen.36 + 0) = tmp.75 , tmp.76 = 28 - thirteen.35, CopyToOffset(fifteen.37 + 0) = tmp.76 , tmp.77 = fourteen.36 + 2, CopyToOffset(sixteen.38 + 0) = tmp.77 , tmp.78 = 4 + thirteen.35, CopyToOffset(seventeen.39 + 0) = tmp.78 , tmp.79 = 32 - fourteen.36, CopyToOffset(eighteen.40 + 0) = tmp.79 , tmp.80 = 35 - sixteen.38, CopyToOffset(nineteen.41 + 0) = tmp.80 , tmp.81 = fifteen.37 + 5, CopyToOffset(twenty.42 + 0) = tmp.81 , tmp.82 = thirteen.35 * 2, tmp.83 = tmp.82 - 5, CopyToOffset(twenty_one.43 + 0) = tmp.83 , tmp.84 = fifteen.37 + 7, CopyToOffset(twenty_two.44 + 0) = tmp.84 , tmp.85 = 6 + seventeen.39, CopyToOffset(twenty_three.45 + 0) = tmp.85 , tmp.86 = thirteen.35 + 11, CopyToOffset(twenty_four.46 + 0) = tmp.86 , Copy tmp.87 = thirteen.35, Copy tmp.88 = fourteen.36, Copy tmp.89 = fifteen.37, Copy tmp.90 = sixteen.38, Copy tmp.91 = seventeen.39, Copy tmp.92 = eighteen.40, Copy tmp.93 = nineteen.41, Copy tmp.94 = twenty.42, Copy tmp.95 = twenty_one.43, Copy tmp.96 = twenty_two.44, Copy tmp.97 = twenty_three.45, Copy tmp.98 = twenty_four.46, Copy tmp.99 = 13, tmp.100 = check_12_ints([tmp.87, tmp.88, tmp.89, tmp.90, tmp.91, tmp.92, tmp.93, tmp.94, tmp.95, tmp.96, tmp.97, tmp.98, tmp.99]), tmp.101 = should_spill.22 != 6, Copy tmp.102 = tmp.101, JumpIfZero(tmp.102, tmp.103), tmp.104 = -1, Return tmp.104, Label(tmp.103), Return 0, Return 0]
--------------ADDRESS TAKEN ANALYSIS.------------------
{glob_three}
-------------CONSTANT FOLDING PASS.--------------------
OLD LIST [tmp.47 = glob_three + 3, CopyToOffset(should_spill.22 + 0) = tmp.47 , tmp.48 = glob_three - 2, CopyToOffset(one.23 + 0) = tmp.48 , tmp.49 = one.23 + one.23, CopyToOffset(two.24 + 0) = tmp.49 , tmp.50 = 2 + one.23, CopyToOffset(three.25 + 0) = tmp.50 , tmp.51 = two.24 * two.24, CopyToOffset(four.26 + 0) = tmp.51 , tmp.52 = 6 - one.23, CopyToOffset(five.27 + 0) = tmp.52 , tmp.53 = two.24 * three.25, CopyToOffset(six.28 + 0) = tmp.53 , tmp.54 = one.23 + 6, CopyToOffset(seven.29 + 0) = tmp.54 , tmp.55 = two.24 * 4, CopyToOffset(eight.30 + 0) = tmp.55 , tmp.56 = three.25 * three.25, CopyToOffset(nine.31 + 0) = tmp.56 , tmp.57 = four.26 + six.28, CopyToOffset(ten.32 + 0) = tmp.57 , tmp.58 = 16 - five.27, CopyToOffset(eleven.33 + 0) = tmp.58 , tmp.59 = six.28 + six.28, CopyToOffset(twelve.34 + 0) = tmp.59 , Copy tmp.60 = one.23, Copy tmp.61 = two.24, Copy tmp.62 = three.25, Copy tmp.63 = four.26, Copy tmp.64 = five.27, Copy tmp.65 = six.28, Copy tmp.66 = seven.29, Copy tmp.67 = eight.30, Copy tmp.68 = nine.31, Copy tmp.69 = ten.32, Copy tmp.70 = eleven.33, Copy tmp.71 = twelve.34, Copy tmp.72 = 1, tmp.73 = check_12_ints([tmp.60, tmp.61, tmp.62, tmp.63, tmp.64, tmp.65, tmp.66, tmp.67, tmp.68, tmp.69, tmp.70, tmp.71, tmp.72]), tmp.74 = 10 + glob_three, CopyToOffset(thirteen.35 + 0) = tmp.74 , tmp.75 = thirteen.35 + 1, CopyToOffset(fourteen.36 + 0) = tmp.75 , tmp.76 = 28 - thirteen.35, CopyToOffset(fifteen.37 + 0) = tmp.76 , tmp.77 = fourteen.36 + 2, CopyToOffset(sixteen.38 + 0) = tmp.77 , tmp.78 = 4 + thirteen.35, CopyToOffset(seventeen.39 + 0) = tmp.78 , tmp.79 = 32 - fourteen.36, CopyToOffset(eighteen.40 + 0) = tmp.79 , tmp.80 = 35 - sixteen.38, CopyToOffset(nineteen.41 + 0) = tmp.80 , tmp.81 = fifteen.37 + 5, CopyToOffset(twenty.42 + 0) = tmp.81 , tmp.82 = thirteen.35 * 2, tmp.83 = tmp.82 - 5, CopyToOffset(twenty_one.43 + 0) = tmp.83 , tmp.84 = fifteen.37 + 7, CopyToOffset(twenty_two.44 + 0) = tmp.84 , tmp.85 = 6 + seventeen.39, CopyToOffset(twenty_three.45 + 0) = tmp.85 , tmp.86 = thirteen.35 + 11, CopyToOffset(twenty_four.46 + 0) = tmp.86 , Copy tmp.87 = thirteen.35, Copy tmp.88 = fourteen.36, Copy tmp.89 = fifteen.37, Copy tmp.90 = sixteen.38, Copy tmp.91 = seventeen.39, Copy tmp.92 = eighteen.40, Copy tmp.93 = nineteen.41, Copy tmp.94 = twenty.42, Copy tmp.95 = twenty_one.43, Copy tmp.96 = twenty_two.44, Copy tmp.97 = twenty_three.45, Copy tmp.98 = twenty_four.46, Copy tmp.99 = 13, tmp.100 = check_12_ints([tmp.87, tmp.88, tmp.89, tmp.90, tmp.91, tmp.92, tmp.93, tmp.94, tmp.95, tmp.96, tmp.97, tmp.98, tmp.99]), tmp.101 = should_spill.22 != 6, Copy tmp.102 = tmp.101, JumpIfZero(tmp.102, tmp.103), tmp.104 = -1, Return tmp.104, Label(tmp.103), Return 0, Return 0]
NEW LIST [tmp.47 = glob_three + 3, Copy should_spill.22 = tmp.47, tmp.48 = glob_three - 2, Copy one.23 = tmp.48, tmp.49 = one.23 + one.23, Copy two.24 = tmp.49, tmp.50 = 2 + one.23, Copy three.25 = tmp.50, tmp.51 = two.24 * two.24, Copy four.26 = tmp.51, tmp.52 = 6 - one.23, Copy five.27 = tmp.52, tmp.53 = two.24 * three.25, Copy six.28 = tmp.53, tmp.54 = one.23 + 6, Copy seven.29 = tmp.54, tmp.55 = two.24 * 4, Copy eight.30 = tmp.55, tmp.56 = three.25 * three.25, Copy nine.31 = tmp.56, tmp.57 = four.26 + six.28, Copy ten.32 = tmp.57, tmp.58 = 16 - five.27, Copy eleven.33 = tmp.58, tmp.59 = six.28 + six.28, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy tmp.61 = two.24, Copy tmp.62 = three.25, Copy tmp.63 = four.26, Copy tmp.64 = five.27, Copy tmp.65 = six.28, Copy tmp.66 = seven.29, Copy tmp.67 = eight.30, Copy tmp.68 = nine.31, Copy tmp.69 = ten.32, Copy tmp.70 = eleven.33, Copy tmp.71 = twelve.34, Copy tmp.72 = 1, tmp.73 = check_12_ints([tmp.60, tmp.61, tmp.62, tmp.63, tmp.64, tmp.65, tmp.66, tmp.67, tmp.68, tmp.69, tmp.70, tmp.71, tmp.72]), tmp.74 = 10 + glob_three, Copy thirteen.35 = tmp.74, tmp.75 = thirteen.35 + 1, Copy fourteen.36 = tmp.75, tmp.76 = 28 - thirteen.35, Copy fifteen.37 = tmp.76, tmp.77 = fourteen.36 + 2, Copy sixteen.38 = tmp.77, tmp.78 = 4 + thirteen.35, Copy seventeen.39 = tmp.78, tmp.79 = 32 - fourteen.36, Copy eighteen.40 = tmp.79, tmp.80 = 35 - sixteen.38, Copy nineteen.41 = tmp.80, tmp.81 = fifteen.37 + 5, Copy twenty.42 = tmp.81, tmp.82 = thirteen.35 * 2, tmp.83 = tmp.82 - 5, Copy twenty_one.43 = tmp.83, tmp.84 = fifteen.37 + 7, Copy twenty_two.44 = tmp.84, tmp.85 = 6 + seventeen.39, Copy twenty_three.45 = tmp.85, tmp.86 = thirteen.35 + 11, Copy twenty_four.46 = tmp.86, Copy tmp.87 = thirteen.35, Copy tmp.88 = fourteen.36, Copy tmp.89 = fifteen.37, Copy tmp.90 = sixteen.38, Copy tmp.91 = seventeen.39, Copy tmp.92 = eighteen.40, Copy tmp.93 = nineteen.41, Copy tmp.94 = twenty.42, Copy tmp.95 = twenty_one.43, Copy tmp.96 = twenty_two.44, Copy tmp.97 = twenty_three.45, Copy tmp.98 = twenty_four.46, Copy tmp.99 = 13, tmp.100 = check_12_ints([tmp.87, tmp.88, tmp.89, tmp.90, tmp.91, tmp.92, tmp.93, tmp.94, tmp.95, tmp.96, tmp.97, tmp.98, tmp.99]), tmp.101 = should_spill.22 != 6, Copy tmp.102 = tmp.101, JumpIfZero(tmp.102, tmp.103), tmp.104 = -1, Return tmp.104, Label(tmp.103), Return 0, Return 0]
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_FunCallInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_FunCallInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_JumpIfZeroInst'>
<class 'tacGenerator.TAC_UnaryInstruction'>
<class 'tacGenerator.TAC_returnInstruction'>
<class 'tacGenerator.TAC_LabelInst'>
<class 'tacGenerator.TAC_returnInstruction'>
<class 'tacGenerator.TAC_returnInstruction'>
tmp.47 = glob_three + 3
tmp.104 = -1
Label(tmp.103)
Return 0






ENTRY Entry: ENTRY {0}
0 0: [tmp.47 = glob_three + 3, Copy should_spill.22 = tmp.47, tmp.48 = glob_three - 2, Copy one.23 = tmp.48, tmp.49 = one.23 + one.23, Copy two.24 = tmp.49, tmp.50 = 2 + one.23, Copy three.25 = tmp.50, tmp.51 = two.24 * two.24, Copy four.26 = tmp.51, tmp.52 = 6 - one.23, Copy five.27 = tmp.52, tmp.53 = two.24 * three.25, Copy six.28 = tmp.53, tmp.54 = one.23 + 6, Copy seven.29 = tmp.54, tmp.55 = two.24 * 4, Copy eight.30 = tmp.55, tmp.56 = three.25 * three.25, Copy nine.31 = tmp.56, tmp.57 = four.26 + six.28, Copy ten.32 = tmp.57, tmp.58 = 16 - five.27, Copy eleven.33 = tmp.58, tmp.59 = six.28 + six.28, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy tmp.61 = two.24, Copy tmp.62 = three.25, Copy tmp.63 = four.26, Copy tmp.64 = five.27, Copy tmp.65 = six.28, Copy tmp.66 = seven.29, Copy tmp.67 = eight.30, Copy tmp.68 = nine.31, Copy tmp.69 = ten.32, Copy tmp.70 = eleven.33, Copy tmp.71 = twelve.34, Copy tmp.72 = 1, tmp.73 = check_12_ints([tmp.60, tmp.61, tmp.62, tmp.63, tmp.64, tmp.65, tmp.66, tmp.67, tmp.68, tmp.69, tmp.70, tmp.71, tmp.72]), tmp.74 = 10 + glob_three, Copy thirteen.35 = tmp.74, tmp.75 = thirteen.35 + 1, Copy fourteen.36 = tmp.75, tmp.76 = 28 - thirteen.35, Copy fifteen.37 = tmp.76, tmp.77 = fourteen.36 + 2, Copy sixteen.38 = tmp.77, tmp.78 = 4 + thirteen.35, Copy seventeen.39 = tmp.78, tmp.79 = 32 - fourteen.36, Copy eighteen.40 = tmp.79, tmp.80 = 35 - sixteen.38, Copy nineteen.41 = tmp.80, tmp.81 = fifteen.37 + 5, Copy twenty.42 = tmp.81, tmp.82 = thirteen.35 * 2, tmp.83 = tmp.82 - 5, Copy twenty_one.43 = tmp.83, tmp.84 = fifteen.37 + 7, Copy twenty_two.44 = tmp.84, tmp.85 = 6 + seventeen.39, Copy twenty_three.45 = tmp.85, tmp.86 = thirteen.35 + 11, Copy twenty_four.46 = tmp.86, Copy tmp.87 = thirteen.35, Copy tmp.88 = fourteen.36, Copy tmp.89 = fifteen.37, Copy tmp.90 = sixteen.38, Copy tmp.91 = seventeen.39, Copy tmp.92 = eighteen.40, Copy tmp.93 = nineteen.41, Copy tmp.94 = twenty.42, Copy tmp.95 = twenty_one.43, Copy tmp.96 = twenty_two.44, Copy tmp.97 = twenty_three.45, Copy tmp.98 = twenty_four.46, Copy tmp.99 = 13, tmp.100 = check_12_ints([tmp.87, tmp.88, tmp.89, tmp.90, tmp.91, tmp.92, tmp.93, tmp.94, tmp.95, tmp.96, tmp.97, tmp.98, tmp.99]), tmp.101 = should_spill.22 != 6, Copy tmp.102 = tmp.101, JumpIfZero(tmp.102, tmp.103)] Pred: {ENTRY} Suc: {1, 2} iMap: {tmp.47 = glob_three + 3: set(), Copy should_spill.22 = tmp.47: set(), tmp.48 = glob_three - 2: set(), Copy one.23 = tmp.48: set(), tmp.49 = one.23 + one.23: set(), Copy two.24 = tmp.49: set(), tmp.50 = 2 + one.23: set(), Copy three.25 = tmp.50: set(), tmp.51 = two.24 * two.24: set(), Copy four.26 = tmp.51: set(), tmp.52 = 6 - one.23: set(), Copy five.27 = tmp.52: set(), tmp.53 = two.24 * three.25: set(), Copy six.28 = tmp.53: set(), tmp.54 = one.23 + 6: set(), Copy seven.29 = tmp.54: set(), tmp.55 = two.24 * 4: set(), Copy eight.30 = tmp.55: set(), tmp.56 = three.25 * three.25: set(), Copy nine.31 = tmp.56: set(), tmp.57 = four.26 + six.28: set(), Copy ten.32 = tmp.57: set(), tmp.58 = 16 - five.27: set(), Copy eleven.33 = tmp.58: set(), tmp.59 = six.28 + six.28: set(), Copy twelve.34 = tmp.59: set(), Copy tmp.60 = one.23: set(), Copy tmp.61 = two.24: set(), Copy tmp.62 = three.25: set(), Copy tmp.63 = four.26: set(), Copy tmp.64 = five.27: set(), Copy tmp.65 = six.28: set(), Copy tmp.66 = seven.29: set(), Copy tmp.67 = eight.30: set(), Copy tmp.68 = nine.31: set(), Copy tmp.69 = ten.32: set(), Copy tmp.70 = eleven.33: set(), Copy tmp.71 = twelve.34: set(), Copy tmp.72 = 1: set(), tmp.73 = check_12_ints([tmp.60, tmp.61, tmp.62, tmp.63, tmp.64, tmp.65, tmp.66, tmp.67, tmp.68, tmp.69, tmp.70, tmp.71, tmp.72]): set(), tmp.74 = 10 + glob_three: set(), Copy thirteen.35 = tmp.74: set(), tmp.75 = thirteen.35 + 1: set(), Copy fourteen.36 = tmp.75: set(), tmp.76 = 28 - thirteen.35: set(), Copy fifteen.37 = tmp.76: set(), tmp.77 = fourteen.36 + 2: set(), Copy sixteen.38 = tmp.77: set(), tmp.78 = 4 + thirteen.35: set(), Copy seventeen.39 = tmp.78: set(), tmp.79 = 32 - fourteen.36: set(), Copy eighteen.40 = tmp.79: set(), tmp.80 = 35 - sixteen.38: set(), Copy nineteen.41 = tmp.80: set(), tmp.81 = fifteen.37 + 5: set(), Copy twenty.42 = tmp.81: set(), tmp.82 = thirteen.35 * 2: set(), tmp.83 = tmp.82 - 5: set(), Copy twenty_one.43 = tmp.83: set(), tmp.84 = fifteen.37 + 7: set(), Copy twenty_two.44 = tmp.84: set(), tmp.85 = 6 + seventeen.39: set(), Copy twenty_three.45 = tmp.85: set(), tmp.86 = thirteen.35 + 11: set(), Copy twenty_four.46 = tmp.86: set(), Copy tmp.87 = thirteen.35: set(), Copy tmp.88 = fourteen.36: set(), Copy tmp.89 = fifteen.37: set(), Copy tmp.90 = sixteen.38: set(), Copy tmp.91 = seventeen.39: set(), Copy tmp.92 = eighteen.40: set(), Copy tmp.93 = nineteen.41: set(), Copy tmp.94 = twenty.42: set(), Copy tmp.95 = twenty_one.43: set(), Copy tmp.96 = twenty_two.44: set(), Copy tmp.97 = twenty_three.45: set(), Copy tmp.98 = twenty_four.46: set(), Copy tmp.99 = 13: set(), tmp.100 = check_12_ints([tmp.87, tmp.88, tmp.89, tmp.90, tmp.91, tmp.92, tmp.93, tmp.94, tmp.95, tmp.96, tmp.97, tmp.98, tmp.99]): set(), tmp.101 = should_spill.22 != 6: set(), Copy tmp.102 = tmp.101: set(), JumpIfZero(tmp.102, tmp.103): set()} ReachingCopies: set()
1 1: [tmp.104 = -1, Return tmp.104] Pred: {0} Suc: {EXIT} iMap: {tmp.104 = -1: set(), Return tmp.104: set()} ReachingCopies: set()
2 2: [Label(tmp.103), Return 0] Pred: {0} Suc: {EXIT} iMap: {Label(tmp.103): set(), Return 0: set()} ReachingCopies: set()
3 3: [Return 0] Pred: set() Suc: {EXIT} iMap: {Return 0: set()} ReachingCopies: set()
EXIT Exit: EXIT {1, 2, 3}
ENTRY Entry: ENTRY {0}
0 0: [tmp.47 = glob_three + 3, Copy should_spill.22 = tmp.47, tmp.48 = glob_three - 2, Copy one.23 = tmp.48, tmp.49 = one.23 + one.23, Copy two.24 = tmp.49, tmp.50 = 2 + one.23, Copy three.25 = tmp.50, tmp.51 = two.24 * two.24, Copy four.26 = tmp.51, tmp.52 = 6 - one.23, Copy five.27 = tmp.52, tmp.53 = two.24 * three.25, Copy six.28 = tmp.53, tmp.54 = one.23 + 6, Copy seven.29 = tmp.54, tmp.55 = two.24 * 4, Copy eight.30 = tmp.55, tmp.56 = three.25 * three.25, Copy nine.31 = tmp.56, tmp.57 = four.26 + six.28, Copy ten.32 = tmp.57, tmp.58 = 16 - five.27, Copy eleven.33 = tmp.58, tmp.59 = six.28 + six.28, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy tmp.61 = two.24, Copy tmp.62 = three.25, Copy tmp.63 = four.26, Copy tmp.64 = five.27, Copy tmp.65 = six.28, Copy tmp.66 = seven.29, Copy tmp.67 = eight.30, Copy tmp.68 = nine.31, Copy tmp.69 = ten.32, Copy tmp.70 = eleven.33, Copy tmp.71 = twelve.34, Copy tmp.72 = 1, tmp.73 = check_12_ints([tmp.60, tmp.61, tmp.62, tmp.63, tmp.64, tmp.65, tmp.66, tmp.67, tmp.68, tmp.69, tmp.70, tmp.71, tmp.72]), tmp.74 = 10 + glob_three, Copy thirteen.35 = tmp.74, tmp.75 = thirteen.35 + 1, Copy fourteen.36 = tmp.75, tmp.76 = 28 - thirteen.35, Copy fifteen.37 = tmp.76, tmp.77 = fourteen.36 + 2, Copy sixteen.38 = tmp.77, tmp.78 = 4 + thirteen.35, Copy seventeen.39 = tmp.78, tmp.79 = 32 - fourteen.36, Copy eighteen.40 = tmp.79, tmp.80 = 35 - sixteen.38, Copy nineteen.41 = tmp.80, tmp.81 = fifteen.37 + 5, Copy twenty.42 = tmp.81, tmp.82 = thirteen.35 * 2, tmp.83 = tmp.82 - 5, Copy twenty_one.43 = tmp.83, tmp.84 = fifteen.37 + 7, Copy twenty_two.44 = tmp.84, tmp.85 = 6 + seventeen.39, Copy twenty_three.45 = tmp.85, tmp.86 = thirteen.35 + 11, Copy twenty_four.46 = tmp.86, Copy tmp.87 = thirteen.35, Copy tmp.88 = fourteen.36, Copy tmp.89 = fifteen.37, Copy tmp.90 = sixteen.38, Copy tmp.91 = seventeen.39, Copy tmp.92 = eighteen.40, Copy tmp.93 = nineteen.41, Copy tmp.94 = twenty.42, Copy tmp.95 = twenty_one.43, Copy tmp.96 = twenty_two.44, Copy tmp.97 = twenty_three.45, Copy tmp.98 = twenty_four.46, Copy tmp.99 = 13, tmp.100 = check_12_ints([tmp.87, tmp.88, tmp.89, tmp.90, tmp.91, tmp.92, tmp.93, tmp.94, tmp.95, tmp.96, tmp.97, tmp.98, tmp.99]), tmp.101 = should_spill.22 != 6, Copy tmp.102 = tmp.101, JumpIfZero(tmp.102, tmp.103)] Pred: {ENTRY} Suc: {1, 2} iMap: {tmp.47 = glob_three + 3: set(), Copy should_spill.22 = tmp.47: set(), tmp.48 = glob_three - 2: set(), Copy one.23 = tmp.48: set(), tmp.49 = one.23 + one.23: set(), Copy two.24 = tmp.49: set(), tmp.50 = 2 + one.23: set(), Copy three.25 = tmp.50: set(), tmp.51 = two.24 * two.24: set(), Copy four.26 = tmp.51: set(), tmp.52 = 6 - one.23: set(), Copy five.27 = tmp.52: set(), tmp.53 = two.24 * three.25: set(), Copy six.28 = tmp.53: set(), tmp.54 = one.23 + 6: set(), Copy seven.29 = tmp.54: set(), tmp.55 = two.24 * 4: set(), Copy eight.30 = tmp.55: set(), tmp.56 = three.25 * three.25: set(), Copy nine.31 = tmp.56: set(), tmp.57 = four.26 + six.28: set(), Copy ten.32 = tmp.57: set(), tmp.58 = 16 - five.27: set(), Copy eleven.33 = tmp.58: set(), tmp.59 = six.28 + six.28: set(), Copy twelve.34 = tmp.59: set(), Copy tmp.60 = one.23: set(), Copy tmp.61 = two.24: set(), Copy tmp.62 = three.25: set(), Copy tmp.63 = four.26: set(), Copy tmp.64 = five.27: set(), Copy tmp.65 = six.28: set(), Copy tmp.66 = seven.29: set(), Copy tmp.67 = eight.30: set(), Copy tmp.68 = nine.31: set(), Copy tmp.69 = ten.32: set(), Copy tmp.70 = eleven.33: set(), Copy tmp.71 = twelve.34: set(), Copy tmp.72 = 1: set(), tmp.73 = check_12_ints([tmp.60, tmp.61, tmp.62, tmp.63, tmp.64, tmp.65, tmp.66, tmp.67, tmp.68, tmp.69, tmp.70, tmp.71, tmp.72]): set(), tmp.74 = 10 + glob_three: set(), Copy thirteen.35 = tmp.74: set(), tmp.75 = thirteen.35 + 1: set(), Copy fourteen.36 = tmp.75: set(), tmp.76 = 28 - thirteen.35: set(), Copy fifteen.37 = tmp.76: set(), tmp.77 = fourteen.36 + 2: set(), Copy sixteen.38 = tmp.77: set(), tmp.78 = 4 + thirteen.35: set(), Copy seventeen.39 = tmp.78: set(), tmp.79 = 32 - fourteen.36: set(), Copy eighteen.40 = tmp.79: set(), tmp.80 = 35 - sixteen.38: set(), Copy nineteen.41 = tmp.80: set(), tmp.81 = fifteen.37 + 5: set(), Copy twenty.42 = tmp.81: set(), tmp.82 = thirteen.35 * 2: set(), tmp.83 = tmp.82 - 5: set(), Copy twenty_one.43 = tmp.83: set(), tmp.84 = fifteen.37 + 7: set(), Copy twenty_two.44 = tmp.84: set(), tmp.85 = 6 + seventeen.39: set(), Copy twenty_three.45 = tmp.85: set(), tmp.86 = thirteen.35 + 11: set(), Copy twenty_four.46 = tmp.86: set(), Copy tmp.87 = thirteen.35: set(), Copy tmp.88 = fourteen.36: set(), Copy tmp.89 = fifteen.37: set(), Copy tmp.90 = sixteen.38: set(), Copy tmp.91 = seventeen.39: set(), Copy tmp.92 = eighteen.40: set(), Copy tmp.93 = nineteen.41: set(), Copy tmp.94 = twenty.42: set(), Copy tmp.95 = twenty_one.43: set(), Copy tmp.96 = twenty_two.44: set(), Copy tmp.97 = twenty_three.45: set(), Copy tmp.98 = twenty_four.46: set(), Copy tmp.99 = 13: set(), tmp.100 = check_12_ints([tmp.87, tmp.88, tmp.89, tmp.90, tmp.91, tmp.92, tmp.93, tmp.94, tmp.95, tmp.96, tmp.97, tmp.98, tmp.99]): set(), tmp.101 = should_spill.22 != 6: set(), Copy tmp.102 = tmp.101: set(), JumpIfZero(tmp.102, tmp.103): set()} ReachingCopies: set()
1 1: [tmp.104 = -1, Return tmp.104] Pred: {0} Suc: {EXIT} iMap: {tmp.104 = -1: set(), Return tmp.104: set()} ReachingCopies: set()
2 2: [Label(tmp.103), Return 0] Pred: {0} Suc: {EXIT} iMap: {Label(tmp.103): set(), Return 0: set()} ReachingCopies: set()
EXIT Exit: EXIT {1, 2}
ENTRY Entry: ENTRY {0}
0 0: [tmp.47 = glob_three + 3, Copy should_spill.22 = tmp.47, tmp.48 = glob_three - 2, Copy one.23 = tmp.48, tmp.49 = one.23 + one.23, Copy two.24 = tmp.49, tmp.50 = 2 + one.23, Copy three.25 = tmp.50, tmp.51 = two.24 * two.24, Copy four.26 = tmp.51, tmp.52 = 6 - one.23, Copy five.27 = tmp.52, tmp.53 = two.24 * three.25, Copy six.28 = tmp.53, tmp.54 = one.23 + 6, Copy seven.29 = tmp.54, tmp.55 = two.24 * 4, Copy eight.30 = tmp.55, tmp.56 = three.25 * three.25, Copy nine.31 = tmp.56, tmp.57 = four.26 + six.28, Copy ten.32 = tmp.57, tmp.58 = 16 - five.27, Copy eleven.33 = tmp.58, tmp.59 = six.28 + six.28, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy tmp.61 = two.24, Copy tmp.62 = three.25, Copy tmp.63 = four.26, Copy tmp.64 = five.27, Copy tmp.65 = six.28, Copy tmp.66 = seven.29, Copy tmp.67 = eight.30, Copy tmp.68 = nine.31, Copy tmp.69 = ten.32, Copy tmp.70 = eleven.33, Copy tmp.71 = twelve.34, Copy tmp.72 = 1, tmp.73 = check_12_ints([tmp.60, tmp.61, tmp.62, tmp.63, tmp.64, tmp.65, tmp.66, tmp.67, tmp.68, tmp.69, tmp.70, tmp.71, tmp.72]), tmp.74 = 10 + glob_three, Copy thirteen.35 = tmp.74, tmp.75 = thirteen.35 + 1, Copy fourteen.36 = tmp.75, tmp.76 = 28 - thirteen.35, Copy fifteen.37 = tmp.76, tmp.77 = fourteen.36 + 2, Copy sixteen.38 = tmp.77, tmp.78 = 4 + thirteen.35, Copy seventeen.39 = tmp.78, tmp.79 = 32 - fourteen.36, Copy eighteen.40 = tmp.79, tmp.80 = 35 - sixteen.38, Copy nineteen.41 = tmp.80, tmp.81 = fifteen.37 + 5, Copy twenty.42 = tmp.81, tmp.82 = thirteen.35 * 2, tmp.83 = tmp.82 - 5, Copy twenty_one.43 = tmp.83, tmp.84 = fifteen.37 + 7, Copy twenty_two.44 = tmp.84, tmp.85 = 6 + seventeen.39, Copy twenty_three.45 = tmp.85, tmp.86 = thirteen.35 + 11, Copy twenty_four.46 = tmp.86, Copy tmp.87 = thirteen.35, Copy tmp.88 = fourteen.36, Copy tmp.89 = fifteen.37, Copy tmp.90 = sixteen.38, Copy tmp.91 = seventeen.39, Copy tmp.92 = eighteen.40, Copy tmp.93 = nineteen.41, Copy tmp.94 = twenty.42, Copy tmp.95 = twenty_one.43, Copy tmp.96 = twenty_two.44, Copy tmp.97 = twenty_three.45, Copy tmp.98 = twenty_four.46, Copy tmp.99 = 13, tmp.100 = check_12_ints([tmp.87, tmp.88, tmp.89, tmp.90, tmp.91, tmp.92, tmp.93, tmp.94, tmp.95, tmp.96, tmp.97, tmp.98, tmp.99]), tmp.101 = should_spill.22 != 6, Copy tmp.102 = tmp.101, JumpIfZero(tmp.102, tmp.103)] Pred: {ENTRY} Suc: {1, 2} iMap: {tmp.47 = glob_three + 3: set(), Copy should_spill.22 = tmp.47: set(), tmp.48 = glob_three - 2: set(), Copy one.23 = tmp.48: set(), tmp.49 = one.23 + one.23: set(), Copy two.24 = tmp.49: set(), tmp.50 = 2 + one.23: set(), Copy three.25 = tmp.50: set(), tmp.51 = two.24 * two.24: set(), Copy four.26 = tmp.51: set(), tmp.52 = 6 - one.23: set(), Copy five.27 = tmp.52: set(), tmp.53 = two.24 * three.25: set(), Copy six.28 = tmp.53: set(), tmp.54 = one.23 + 6: set(), Copy seven.29 = tmp.54: set(), tmp.55 = two.24 * 4: set(), Copy eight.30 = tmp.55: set(), tmp.56 = three.25 * three.25: set(), Copy nine.31 = tmp.56: set(), tmp.57 = four.26 + six.28: set(), Copy ten.32 = tmp.57: set(), tmp.58 = 16 - five.27: set(), Copy eleven.33 = tmp.58: set(), tmp.59 = six.28 + six.28: set(), Copy twelve.34 = tmp.59: set(), Copy tmp.60 = one.23: set(), Copy tmp.61 = two.24: set(), Copy tmp.62 = three.25: set(), Copy tmp.63 = four.26: set(), Copy tmp.64 = five.27: set(), Copy tmp.65 = six.28: set(), Copy tmp.66 = seven.29: set(), Copy tmp.67 = eight.30: set(), Copy tmp.68 = nine.31: set(), Copy tmp.69 = ten.32: set(), Copy tmp.70 = eleven.33: set(), Copy tmp.71 = twelve.34: set(), Copy tmp.72 = 1: set(), tmp.73 = check_12_ints([tmp.60, tmp.61, tmp.62, tmp.63, tmp.64, tmp.65, tmp.66, tmp.67, tmp.68, tmp.69, tmp.70, tmp.71, tmp.72]): set(), tmp.74 = 10 + glob_three: set(), Copy thirteen.35 = tmp.74: set(), tmp.75 = thirteen.35 + 1: set(), Copy fourteen.36 = tmp.75: set(), tmp.76 = 28 - thirteen.35: set(), Copy fifteen.37 = tmp.76: set(), tmp.77 = fourteen.36 + 2: set(), Copy sixteen.38 = tmp.77: set(), tmp.78 = 4 + thirteen.35: set(), Copy seventeen.39 = tmp.78: set(), tmp.79 = 32 - fourteen.36: set(), Copy eighteen.40 = tmp.79: set(), tmp.80 = 35 - sixteen.38: set(), Copy nineteen.41 = tmp.80: set(), tmp.81 = fifteen.37 + 5: set(), Copy twenty.42 = tmp.81: set(), tmp.82 = thirteen.35 * 2: set(), tmp.83 = tmp.82 - 5: set(), Copy twenty_one.43 = tmp.83: set(), tmp.84 = fifteen.37 + 7: set(), Copy twenty_two.44 = tmp.84: set(), tmp.85 = 6 + seventeen.39: set(), Copy twenty_three.45 = tmp.85: set(), tmp.86 = thirteen.35 + 11: set(), Copy twenty_four.46 = tmp.86: set(), Copy tmp.87 = thirteen.35: set(), Copy tmp.88 = fourteen.36: set(), Copy tmp.89 = fifteen.37: set(), Copy tmp.90 = sixteen.38: set(), Copy tmp.91 = seventeen.39: set(), Copy tmp.92 = eighteen.40: set(), Copy tmp.93 = nineteen.41: set(), Copy tmp.94 = twenty.42: set(), Copy tmp.95 = twenty_one.43: set(), Copy tmp.96 = twenty_two.44: set(), Copy tmp.97 = twenty_three.45: set(), Copy tmp.98 = twenty_four.46: set(), Copy tmp.99 = 13: set(), tmp.100 = check_12_ints([tmp.87, tmp.88, tmp.89, tmp.90, tmp.91, tmp.92, tmp.93, tmp.94, tmp.95, tmp.96, tmp.97, tmp.98, tmp.99]): set(), tmp.101 = should_spill.22 != 6: set(), Copy tmp.102 = tmp.101: set(), JumpIfZero(tmp.102, tmp.103): set()} ReachingCopies: set()
1 1: [tmp.104 = -1, Return tmp.104] Pred: {0} Suc: {EXIT} iMap: {tmp.104 = -1: set(), Return tmp.104: set()} ReachingCopies: set()
2 2: [Label(tmp.103), Return 0] Pred: {0} Suc: {EXIT} iMap: {Label(tmp.103): set(), Return 0: set()} ReachingCopies: set()
EXIT Exit: EXIT {1, 2}
ENTRY Entry: ENTRY {0}
0 0: [tmp.47 = glob_three + 3, Copy should_spill.22 = tmp.47, tmp.48 = glob_three - 2, Copy one.23 = tmp.48, tmp.49 = one.23 + one.23, Copy two.24 = tmp.49, tmp.50 = 2 + one.23, Copy three.25 = tmp.50, tmp.51 = two.24 * two.24, Copy four.26 = tmp.51, tmp.52 = 6 - one.23, Copy five.27 = tmp.52, tmp.53 = two.24 * three.25, Copy six.28 = tmp.53, tmp.54 = one.23 + 6, Copy seven.29 = tmp.54, tmp.55 = two.24 * 4, Copy eight.30 = tmp.55, tmp.56 = three.25 * three.25, Copy nine.31 = tmp.56, tmp.57 = four.26 + six.28, Copy ten.32 = tmp.57, tmp.58 = 16 - five.27, Copy eleven.33 = tmp.58, tmp.59 = six.28 + six.28, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy tmp.61 = two.24, Copy tmp.62 = three.25, Copy tmp.63 = four.26, Copy tmp.64 = five.27, Copy tmp.65 = six.28, Copy tmp.66 = seven.29, Copy tmp.67 = eight.30, Copy tmp.68 = nine.31, Copy tmp.69 = ten.32, Copy tmp.70 = eleven.33, Copy tmp.71 = twelve.34, Copy tmp.72 = 1, tmp.73 = check_12_ints([tmp.60, tmp.61, tmp.62, tmp.63, tmp.64, tmp.65, tmp.66, tmp.67, tmp.68, tmp.69, tmp.70, tmp.71, tmp.72]), tmp.74 = 10 + glob_three, Copy thirteen.35 = tmp.74, tmp.75 = thirteen.35 + 1, Copy fourteen.36 = tmp.75, tmp.76 = 28 - thirteen.35, Copy fifteen.37 = tmp.76, tmp.77 = fourteen.36 + 2, Copy sixteen.38 = tmp.77, tmp.78 = 4 + thirteen.35, Copy seventeen.39 = tmp.78, tmp.79 = 32 - fourteen.36, Copy eighteen.40 = tmp.79, tmp.80 = 35 - sixteen.38, Copy nineteen.41 = tmp.80, tmp.81 = fifteen.37 + 5, Copy twenty.42 = tmp.81, tmp.82 = thirteen.35 * 2, tmp.83 = tmp.82 - 5, Copy twenty_one.43 = tmp.83, tmp.84 = fifteen.37 + 7, Copy twenty_two.44 = tmp.84, tmp.85 = 6 + seventeen.39, Copy twenty_three.45 = tmp.85, tmp.86 = thirteen.35 + 11, Copy twenty_four.46 = tmp.86, Copy tmp.87 = thirteen.35, Copy tmp.88 = fourteen.36, Copy tmp.89 = fifteen.37, Copy tmp.90 = sixteen.38, Copy tmp.91 = seventeen.39, Copy tmp.92 = eighteen.40, Copy tmp.93 = nineteen.41, Copy tmp.94 = twenty.42, Copy tmp.95 = twenty_one.43, Copy tmp.96 = twenty_two.44, Copy tmp.97 = twenty_three.45, Copy tmp.98 = twenty_four.46, Copy tmp.99 = 13, tmp.100 = check_12_ints([tmp.87, tmp.88, tmp.89, tmp.90, tmp.91, tmp.92, tmp.93, tmp.94, tmp.95, tmp.96, tmp.97, tmp.98, tmp.99]), tmp.101 = should_spill.22 != 6, Copy tmp.102 = tmp.101, JumpIfZero(tmp.102, tmp.103)] Pred: {ENTRY} Suc: {1, 2} iMap: {tmp.47 = glob_three + 3: set(), Copy should_spill.22 = tmp.47: set(), tmp.48 = glob_three - 2: set(), Copy one.23 = tmp.48: set(), tmp.49 = one.23 + one.23: set(), Copy two.24 = tmp.49: set(), tmp.50 = 2 + one.23: set(), Copy three.25 = tmp.50: set(), tmp.51 = two.24 * two.24: set(), Copy four.26 = tmp.51: set(), tmp.52 = 6 - one.23: set(), Copy five.27 = tmp.52: set(), tmp.53 = two.24 * three.25: set(), Copy six.28 = tmp.53: set(), tmp.54 = one.23 + 6: set(), Copy seven.29 = tmp.54: set(), tmp.55 = two.24 * 4: set(), Copy eight.30 = tmp.55: set(), tmp.56 = three.25 * three.25: set(), Copy nine.31 = tmp.56: set(), tmp.57 = four.26 + six.28: set(), Copy ten.32 = tmp.57: set(), tmp.58 = 16 - five.27: set(), Copy eleven.33 = tmp.58: set(), tmp.59 = six.28 + six.28: set(), Copy twelve.34 = tmp.59: set(), Copy tmp.60 = one.23: set(), Copy tmp.61 = two.24: set(), Copy tmp.62 = three.25: set(), Copy tmp.63 = four.26: set(), Copy tmp.64 = five.27: set(), Copy tmp.65 = six.28: set(), Copy tmp.66 = seven.29: set(), Copy tmp.67 = eight.30: set(), Copy tmp.68 = nine.31: set(), Copy tmp.69 = ten.32: set(), Copy tmp.70 = eleven.33: set(), Copy tmp.71 = twelve.34: set(), Copy tmp.72 = 1: set(), tmp.73 = check_12_ints([tmp.60, tmp.61, tmp.62, tmp.63, tmp.64, tmp.65, tmp.66, tmp.67, tmp.68, tmp.69, tmp.70, tmp.71, tmp.72]): set(), tmp.74 = 10 + glob_three: set(), Copy thirteen.35 = tmp.74: set(), tmp.75 = thirteen.35 + 1: set(), Copy fourteen.36 = tmp.75: set(), tmp.76 = 28 - thirteen.35: set(), Copy fifteen.37 = tmp.76: set(), tmp.77 = fourteen.36 + 2: set(), Copy sixteen.38 = tmp.77: set(), tmp.78 = 4 + thirteen.35: set(), Copy seventeen.39 = tmp.78: set(), tmp.79 = 32 - fourteen.36: set(), Copy eighteen.40 = tmp.79: set(), tmp.80 = 35 - sixteen.38: set(), Copy nineteen.41 = tmp.80: set(), tmp.81 = fifteen.37 + 5: set(), Copy twenty.42 = tmp.81: set(), tmp.82 = thirteen.35 * 2: set(), tmp.83 = tmp.82 - 5: set(), Copy twenty_one.43 = tmp.83: set(), tmp.84 = fifteen.37 + 7: set(), Copy twenty_two.44 = tmp.84: set(), tmp.85 = 6 + seventeen.39: set(), Copy twenty_three.45 = tmp.85: set(), tmp.86 = thirteen.35 + 11: set(), Copy twenty_four.46 = tmp.86: set(), Copy tmp.87 = thirteen.35: set(), Copy tmp.88 = fourteen.36: set(), Copy tmp.89 = fifteen.37: set(), Copy tmp.90 = sixteen.38: set(), Copy tmp.91 = seventeen.39: set(), Copy tmp.92 = eighteen.40: set(), Copy tmp.93 = nineteen.41: set(), Copy tmp.94 = twenty.42: set(), Copy tmp.95 = twenty_one.43: set(), Copy tmp.96 = twenty_two.44: set(), Copy tmp.97 = twenty_three.45: set(), Copy tmp.98 = twenty_four.46: set(), Copy tmp.99 = 13: set(), tmp.100 = check_12_ints([tmp.87, tmp.88, tmp.89, tmp.90, tmp.91, tmp.92, tmp.93, tmp.94, tmp.95, tmp.96, tmp.97, tmp.98, tmp.99]): set(), tmp.101 = should_spill.22 != 6: set(), Copy tmp.102 = tmp.101: set(), JumpIfZero(tmp.102, tmp.103): set()} ReachingCopies: set()
1 1: [tmp.104 = -1, Return tmp.104] Pred: {0} Suc: {EXIT} iMap: {tmp.104 = -1: set(), Return tmp.104: set()} ReachingCopies: set()
2 2: [Label(tmp.103), Return 0] Pred: {0} Suc: {EXIT} iMap: {Label(tmp.103): set(), Return 0: set()} ReachingCopies: set()
EXIT Exit: EXIT {1, 2}
--------------IMAP for block 0-------------------
tmp.47 = glob_three + 3 set()
Copy should_spill.22 = tmp.47 set()
tmp.48 = glob_three - 2 {Copy should_spill.22 = tmp.47}
Copy one.23 = tmp.48 {Copy should_spill.22 = tmp.47}
tmp.49 = one.23 + one.23 {Copy one.23 = tmp.48, Copy should_spill.22 = tmp.47}
Copy two.24 = tmp.49 {Copy one.23 = tmp.48, Copy should_spill.22 = tmp.47}
tmp.50 = 2 + one.23 {Copy one.23 = tmp.48, Copy two.24 = tmp.49, Copy should_spill.22 = tmp.47}
Copy three.25 = tmp.50 {Copy one.23 = tmp.48, Copy two.24 = tmp.49, Copy should_spill.22 = tmp.47}
tmp.51 = two.24 * two.24 {Copy one.23 = tmp.48, Copy two.24 = tmp.49, Copy three.25 = tmp.50, Copy should_spill.22 = tmp.47}
Copy four.26 = tmp.51 {Copy one.23 = tmp.48, Copy two.24 = tmp.49, Copy three.25 = tmp.50, Copy should_spill.22 = tmp.47}
tmp.52 = 6 - one.23 {Copy three.25 = tmp.50, Copy should_spill.22 = tmp.47, Copy one.23 = tmp.48, Copy two.24 = tmp.49, Copy four.26 = tmp.51}
Copy five.27 = tmp.52 {Copy three.25 = tmp.50, Copy should_spill.22 = tmp.47, Copy one.23 = tmp.48, Copy two.24 = tmp.49, Copy four.26 = tmp.51}
tmp.53 = two.24 * three.25 {Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy should_spill.22 = tmp.47, Copy one.23 = tmp.48, Copy two.24 = tmp.49, Copy four.26 = tmp.51}
Copy six.28 = tmp.53 {Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy should_spill.22 = tmp.47, Copy one.23 = tmp.48, Copy two.24 = tmp.49, Copy four.26 = tmp.51}
tmp.54 = one.23 + 6 {Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy should_spill.22 = tmp.47, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy two.24 = tmp.49, Copy four.26 = tmp.51}
Copy seven.29 = tmp.54 {Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy should_spill.22 = tmp.47, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy two.24 = tmp.49, Copy four.26 = tmp.51}
tmp.55 = two.24 * 4 {Copy seven.29 = tmp.54, Copy should_spill.22 = tmp.47, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy two.24 = tmp.49}
Copy eight.30 = tmp.55 {Copy seven.29 = tmp.54, Copy should_spill.22 = tmp.47, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy two.24 = tmp.49}
tmp.56 = three.25 * three.25 {Copy seven.29 = tmp.54, Copy should_spill.22 = tmp.47, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy two.24 = tmp.49}
Copy nine.31 = tmp.56 {Copy seven.29 = tmp.54, Copy should_spill.22 = tmp.47, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy two.24 = tmp.49}
tmp.57 = four.26 + six.28 {Copy seven.29 = tmp.54, Copy nine.31 = tmp.56, Copy should_spill.22 = tmp.47, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy two.24 = tmp.49}
Copy ten.32 = tmp.57 {Copy seven.29 = tmp.54, Copy nine.31 = tmp.56, Copy should_spill.22 = tmp.47, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy two.24 = tmp.49}
tmp.58 = 16 - five.27 {Copy seven.29 = tmp.54, Copy nine.31 = tmp.56, Copy should_spill.22 = tmp.47, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy two.24 = tmp.49}
Copy eleven.33 = tmp.58 {Copy seven.29 = tmp.54, Copy nine.31 = tmp.56, Copy should_spill.22 = tmp.47, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy two.24 = tmp.49}
tmp.59 = six.28 + six.28 {Copy seven.29 = tmp.54, Copy nine.31 = tmp.56, Copy should_spill.22 = tmp.47, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy two.24 = tmp.49}
Copy twelve.34 = tmp.59 {Copy seven.29 = tmp.54, Copy nine.31 = tmp.56, Copy should_spill.22 = tmp.47, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy two.24 = tmp.49}
Copy tmp.60 = one.23 {Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy should_spill.22 = tmp.47, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy two.24 = tmp.49}
Copy tmp.61 = two.24 {Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy should_spill.22 = tmp.47, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy two.24 = tmp.49}
Copy tmp.62 = three.25 {Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy should_spill.22 = tmp.47, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy two.24 = tmp.49}
Copy tmp.63 = four.26 {Copy should_spill.22 = tmp.47, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy five.27 = tmp.52}
Copy tmp.64 = five.27 {Copy should_spill.22 = tmp.47, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy tmp.63 = four.26}
Copy tmp.65 = six.28 {Copy should_spill.22 = tmp.47, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.64 = five.27, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy tmp.63 = four.26}
Copy tmp.66 = seven.29 {Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.64 = five.27, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy tmp.63 = four.26, Copy five.27 = tmp.52}
Copy tmp.67 = eight.30 {Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy tmp.63 = four.26, Copy five.27 = tmp.52}
Copy tmp.68 = nine.31 {Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy tmp.63 = four.26, Copy five.27 = tmp.52}
Copy tmp.69 = ten.32 {Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy tmp.63 = four.26, Copy five.27 = tmp.52}
Copy tmp.70 = eleven.33 {Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.64 = five.27, Copy tmp.69 = ten.32, Copy tmp.66 = seven.29, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy tmp.63 = four.26, Copy five.27 = tmp.52}
Copy tmp.71 = twelve.34 {Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.64 = five.27, Copy tmp.69 = ten.32, Copy tmp.66 = seven.29, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy tmp.63 = four.26, Copy five.27 = tmp.52, Copy tmp.70 = eleven.33}
Copy tmp.72 = 1 {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.64 = five.27, Copy tmp.69 = ten.32, Copy tmp.66 = seven.29, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy tmp.63 = four.26, Copy five.27 = tmp.52, Copy tmp.70 = eleven.33}
<class 'parser.ConstInt'>
tmp.73 = check_12_ints([tmp.60, tmp.61, tmp.62, tmp.63, tmp.64, tmp.65, tmp.66, tmp.67, tmp.68, tmp.69, tmp.70, tmp.71, tmp.72]) {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.64 = five.27, Copy tmp.69 = ten.32, Copy tmp.66 = seven.29, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy tmp.63 = four.26, Copy five.27 = tmp.52, Copy tmp.70 = eleven.33}
tmp.74 = 10 + glob_three {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.64 = five.27, Copy tmp.69 = ten.32, Copy tmp.66 = seven.29, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy tmp.63 = four.26, Copy five.27 = tmp.52, Copy tmp.70 = eleven.33}
Copy thirteen.35 = tmp.74 {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.64 = five.27, Copy tmp.69 = ten.32, Copy tmp.66 = seven.29, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy tmp.63 = four.26, Copy five.27 = tmp.52, Copy tmp.70 = eleven.33}
tmp.75 = thirteen.35 + 1 {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.64 = five.27, Copy tmp.69 = ten.32, Copy tmp.66 = seven.29, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy tmp.63 = four.26, Copy five.27 = tmp.52, Copy tmp.70 = eleven.33}
Copy fourteen.36 = tmp.75 {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.64 = five.27, Copy tmp.69 = ten.32, Copy tmp.66 = seven.29, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy tmp.63 = four.26, Copy five.27 = tmp.52, Copy tmp.70 = eleven.33}
tmp.76 = 28 - thirteen.35 {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy fourteen.36 = tmp.75, Copy tmp.65 = six.28, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.64 = five.27, Copy tmp.69 = ten.32, Copy tmp.66 = seven.29, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy tmp.63 = four.26, Copy five.27 = tmp.52, Copy tmp.70 = eleven.33}
Copy fifteen.37 = tmp.76 {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy fourteen.36 = tmp.75, Copy tmp.65 = six.28, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.64 = five.27, Copy tmp.69 = ten.32, Copy tmp.66 = seven.29, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy tmp.63 = four.26, Copy five.27 = tmp.52, Copy tmp.70 = eleven.33}
tmp.77 = fourteen.36 + 2 {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy fourteen.36 = tmp.75, Copy tmp.65 = six.28, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.64 = five.27, Copy tmp.69 = ten.32, Copy tmp.66 = seven.29, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy tmp.63 = four.26, Copy five.27 = tmp.52, Copy tmp.70 = eleven.33, Copy fifteen.37 = tmp.76}
Copy sixteen.38 = tmp.77 {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy fourteen.36 = tmp.75, Copy tmp.65 = six.28, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.64 = five.27, Copy tmp.69 = ten.32, Copy tmp.66 = seven.29, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy tmp.63 = four.26, Copy five.27 = tmp.52, Copy tmp.70 = eleven.33, Copy fifteen.37 = tmp.76}
tmp.78 = 4 + thirteen.35 {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy fourteen.36 = tmp.75, Copy tmp.65 = six.28, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.64 = five.27, Copy tmp.69 = ten.32, Copy tmp.66 = seven.29, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy tmp.63 = four.26, Copy five.27 = tmp.52, Copy tmp.70 = eleven.33, Copy fifteen.37 = tmp.76}
Copy seventeen.39 = tmp.78 {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy fourteen.36 = tmp.75, Copy tmp.65 = six.28, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.64 = five.27, Copy tmp.69 = ten.32, Copy tmp.66 = seven.29, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy tmp.63 = four.26, Copy five.27 = tmp.52, Copy tmp.70 = eleven.33, Copy fifteen.37 = tmp.76}
tmp.79 = 32 - fourteen.36 {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy fourteen.36 = tmp.75, Copy tmp.65 = six.28, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.64 = five.27, Copy tmp.69 = ten.32, Copy tmp.66 = seven.29, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy six.28 = tmp.53, Copy tmp.63 = four.26, Copy five.27 = tmp.52, Copy tmp.70 = eleven.33, Copy fifteen.37 = tmp.76}
Copy eighteen.40 = tmp.79 {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy fourteen.36 = tmp.75, Copy tmp.65 = six.28, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.64 = five.27, Copy tmp.69 = ten.32, Copy tmp.66 = seven.29, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy six.28 = tmp.53, Copy tmp.63 = four.26, Copy five.27 = tmp.52, Copy tmp.70 = eleven.33, Copy fifteen.37 = tmp.76}
tmp.80 = 35 - sixteen.38 {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy tmp.70 = eleven.33}
Copy nineteen.41 = tmp.80 {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy tmp.70 = eleven.33}
tmp.81 = fifteen.37 + 5 {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy tmp.70 = eleven.33}
Copy twenty.42 = tmp.81 {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy tmp.70 = eleven.33}
tmp.82 = thirteen.35 * 2 {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33}
tmp.83 = tmp.82 - 5 {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33}
Copy twenty_one.43 = tmp.83 {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33}
tmp.84 = fifteen.37 + 7 {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33}
Copy twenty_two.44 = tmp.84 {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33}
tmp.85 = 6 + seventeen.39 {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33}
Copy twenty_three.45 = tmp.85 {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33}
tmp.86 = thirteen.35 + 11 {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33}
Copy twenty_four.46 = tmp.86 {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33}
Copy tmp.87 = thirteen.35 {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33}
Copy tmp.88 = fourteen.36 {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33}
Copy tmp.89 = fifteen.37 {Copy tmp.88 = fourteen.36, Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33}
Copy tmp.90 = sixteen.38 {Copy tmp.88 = fourteen.36, Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}
Copy tmp.91 = seventeen.39 {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}
Copy tmp.92 = eighteen.40 {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.91 = seventeen.39, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}
Copy tmp.93 = nineteen.41 {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy tmp.92 = eighteen.40, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.91 = seventeen.39, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}
Copy tmp.94 = twenty.42 {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.93 = nineteen.41, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy tmp.92 = eighteen.40, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.91 = seventeen.39, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}
Copy tmp.95 = twenty_one.43 {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.93 = nineteen.41, Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy tmp.94 = twenty.42, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy tmp.92 = eighteen.40, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.91 = seventeen.39, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}
Copy tmp.96 = twenty_two.44 {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.71 = twelve.34, Copy tmp.93 = nineteen.41, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.95 = twenty_one.43, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy tmp.94 = twenty.42, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy tmp.92 = eighteen.40, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.91 = seventeen.39, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}
Copy tmp.97 = twenty_three.45 {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.93 = nineteen.41, Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.95 = twenty_one.43, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy tmp.96 = twenty_two.44, Copy fifteen.37 = tmp.76, Copy tmp.94 = twenty.42, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy tmp.92 = eighteen.40, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.91 = seventeen.39, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}
Copy tmp.98 = twenty_four.46 {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.71 = twelve.34, Copy tmp.93 = nineteen.41, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.95 = twenty_one.43, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy tmp.96 = twenty_two.44, Copy fifteen.37 = tmp.76, Copy tmp.94 = twenty.42, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.97 = twenty_three.45, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy tmp.92 = eighteen.40, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.91 = seventeen.39, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}
Copy tmp.99 = 13 {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.93 = nineteen.41, Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.95 = twenty_one.43, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy tmp.96 = twenty_two.44, Copy fifteen.37 = tmp.76, Copy tmp.94 = twenty.42, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.98 = twenty_four.46, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.97 = twenty_three.45, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy tmp.92 = eighteen.40, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.91 = seventeen.39, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}
<class 'parser.ConstInt'>
tmp.100 = check_12_ints([tmp.87, tmp.88, tmp.89, tmp.90, tmp.91, tmp.92, tmp.93, tmp.94, tmp.95, tmp.96, tmp.97, tmp.98, tmp.99]) {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.71 = twelve.34, Copy tmp.93 = nineteen.41, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.95 = twenty_one.43, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy tmp.96 = twenty_two.44, Copy tmp.99 = 13, Copy fifteen.37 = tmp.76, Copy tmp.94 = twenty.42, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.98 = twenty_four.46, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.97 = twenty_three.45, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy tmp.92 = eighteen.40, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.91 = seventeen.39, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}
tmp.101 = should_spill.22 != 6 {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.93 = nineteen.41, Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.95 = twenty_one.43, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy tmp.96 = twenty_two.44, Copy tmp.99 = 13, Copy fifteen.37 = tmp.76, Copy tmp.94 = twenty.42, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.98 = twenty_four.46, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.97 = twenty_three.45, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy tmp.92 = eighteen.40, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.91 = seventeen.39, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}
Copy tmp.102 = tmp.101 {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.71 = twelve.34, Copy tmp.93 = nineteen.41, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.95 = twenty_one.43, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy tmp.96 = twenty_two.44, Copy tmp.99 = 13, Copy fifteen.37 = tmp.76, Copy tmp.94 = twenty.42, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.98 = twenty_four.46, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.97 = twenty_three.45, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy tmp.92 = eighteen.40, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.91 = seventeen.39, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}
JumpIfZero(tmp.102, tmp.103) {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.93 = nineteen.41, Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.95 = twenty_one.43, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy tmp.102 = tmp.101, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy tmp.96 = twenty_two.44, Copy tmp.99 = 13, Copy fifteen.37 = tmp.76, Copy tmp.94 = twenty.42, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.98 = twenty_four.46, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.97 = twenty_three.45, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy tmp.92 = eighteen.40, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.91 = seventeen.39, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}
OLD ANNOT: {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.93 = nineteen.41, Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.95 = twenty_one.43, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy tmp.102 = tmp.101, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy tmp.96 = twenty_two.44, Copy tmp.99 = 13, Copy fifteen.37 = tmp.76, Copy tmp.94 = twenty.42, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.98 = twenty_four.46, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.97 = twenty_three.45, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy tmp.92 = eighteen.40, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.91 = seventeen.39, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}
NEW ANNOT: {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.93 = nineteen.41, Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.95 = twenty_one.43, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy tmp.102 = tmp.101, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy tmp.96 = twenty_two.44, Copy tmp.99 = 13, Copy fifteen.37 = tmp.76, Copy tmp.94 = twenty.42, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.98 = twenty_four.46, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.97 = twenty_three.45, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy tmp.92 = eighteen.40, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.91 = seventeen.39, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}
--------------IMAP for block 1-------------------
tmp.104 = -1 {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.71 = twelve.34, Copy tmp.93 = nineteen.41, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.95 = twenty_one.43, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy tmp.102 = tmp.101, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy tmp.96 = twenty_two.44, Copy tmp.99 = 13, Copy fifteen.37 = tmp.76, Copy tmp.94 = twenty.42, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.98 = twenty_four.46, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.97 = twenty_three.45, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy tmp.92 = eighteen.40, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.91 = seventeen.39, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}
Return tmp.104 {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.93 = nineteen.41, Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.95 = twenty_one.43, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy tmp.102 = tmp.101, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy tmp.96 = twenty_two.44, Copy tmp.99 = 13, Copy fifteen.37 = tmp.76, Copy tmp.94 = twenty.42, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.98 = twenty_four.46, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.97 = twenty_three.45, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy tmp.92 = eighteen.40, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.91 = seventeen.39, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}
OLD ANNOT: {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.93 = nineteen.41, Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.95 = twenty_one.43, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy tmp.102 = tmp.101, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy tmp.96 = twenty_two.44, Copy tmp.99 = 13, Copy fifteen.37 = tmp.76, Copy tmp.94 = twenty.42, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.98 = twenty_four.46, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.97 = twenty_three.45, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy tmp.92 = eighteen.40, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.91 = seventeen.39, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}
NEW ANNOT: {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.93 = nineteen.41, Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.95 = twenty_one.43, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy tmp.102 = tmp.101, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy tmp.96 = twenty_two.44, Copy tmp.99 = 13, Copy fifteen.37 = tmp.76, Copy tmp.94 = twenty.42, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.98 = twenty_four.46, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.97 = twenty_three.45, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy tmp.92 = eighteen.40, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.91 = seventeen.39, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}
--------------IMAP for block 2-------------------
Label(tmp.103) {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.71 = twelve.34, Copy tmp.93 = nineteen.41, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.95 = twenty_one.43, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy tmp.102 = tmp.101, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy tmp.96 = twenty_two.44, Copy tmp.99 = 13, Copy fifteen.37 = tmp.76, Copy tmp.94 = twenty.42, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.98 = twenty_four.46, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.97 = twenty_three.45, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy tmp.92 = eighteen.40, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.91 = seventeen.39, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}
Return 0 {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.71 = twelve.34, Copy tmp.93 = nineteen.41, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.95 = twenty_one.43, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy tmp.102 = tmp.101, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy tmp.96 = twenty_two.44, Copy tmp.99 = 13, Copy fifteen.37 = tmp.76, Copy tmp.94 = twenty.42, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.98 = twenty_four.46, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.97 = twenty_three.45, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy tmp.92 = eighteen.40, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.91 = seventeen.39, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}
OLD ANNOT: {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.93 = nineteen.41, Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.95 = twenty_one.43, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy tmp.102 = tmp.101, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy tmp.96 = twenty_two.44, Copy tmp.99 = 13, Copy fifteen.37 = tmp.76, Copy tmp.94 = twenty.42, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.98 = twenty_four.46, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.97 = twenty_three.45, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy tmp.92 = eighteen.40, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.91 = seventeen.39, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}
NEW ANNOT: {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.71 = twelve.34, Copy tmp.93 = nineteen.41, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.95 = twenty_one.43, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy tmp.102 = tmp.101, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy tmp.96 = twenty_two.44, Copy tmp.99 = 13, Copy fifteen.37 = tmp.76, Copy tmp.94 = twenty.42, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.98 = twenty_four.46, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.97 = twenty_three.45, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy tmp.92 = eighteen.40, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.91 = seventeen.39, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}
------------REPLACE INSTRUCTIONS WITH REACHING COPIES.-------------
ENTRY Entry: ENTRY {0}
0 0: [tmp.47 = glob_three + 3, Copy should_spill.22 = tmp.47, tmp.48 = glob_three - 2, Copy one.23 = tmp.48, tmp.49 = tmp.48 + tmp.48, Copy two.24 = tmp.49, tmp.50 = 2 + tmp.48, Copy three.25 = tmp.50, tmp.51 = tmp.49 * tmp.49, Copy four.26 = tmp.51, tmp.52 = 6 - tmp.48, Copy five.27 = tmp.52, tmp.53 = tmp.49 * tmp.50, Copy six.28 = tmp.53, tmp.54 = tmp.48 + 6, Copy seven.29 = tmp.54, tmp.55 = tmp.49 * 4, Copy eight.30 = tmp.55, tmp.56 = tmp.50 * tmp.50, Copy nine.31 = tmp.56, tmp.57 = tmp.51 + tmp.53, Copy ten.32 = tmp.57, tmp.58 = 16 - tmp.52, Copy eleven.33 = tmp.58, tmp.59 = tmp.53 + tmp.53, Copy twelve.34 = tmp.59, Copy tmp.60 = tmp.48, Copy tmp.61 = tmp.49, Copy tmp.62 = tmp.50, Copy tmp.63 = tmp.51, Copy tmp.64 = tmp.52, Copy tmp.65 = tmp.53, Copy tmp.66 = tmp.54, Copy tmp.67 = tmp.55, Copy tmp.68 = tmp.56, Copy tmp.69 = tmp.57, Copy tmp.70 = tmp.58, Copy tmp.71 = tmp.59, Copy tmp.72 = 1, tmp.73 = check_12_ints([one.23, two.24, three.25, four.26, five.27, six.28, seven.29, eight.30, nine.31, ten.32, eleven.33, twelve.34, 1]), tmp.74 = 10 + glob_three, Copy thirteen.35 = tmp.74, tmp.75 = tmp.74 + 1, Copy fourteen.36 = tmp.75, tmp.76 = 28 - tmp.74, Copy fifteen.37 = tmp.76, tmp.77 = tmp.75 + 2, Copy sixteen.38 = tmp.77, tmp.78 = 4 + tmp.74, Copy seventeen.39 = tmp.78, tmp.79 = 32 - tmp.75, Copy eighteen.40 = tmp.79, tmp.80 = 35 - tmp.77, Copy nineteen.41 = tmp.80, tmp.81 = tmp.76 + 5, Copy twenty.42 = tmp.81, tmp.82 = tmp.74 * 2, tmp.83 = tmp.82 - 5, Copy twenty_one.43 = tmp.83, tmp.84 = tmp.76 + 7, Copy twenty_two.44 = tmp.84, tmp.85 = 6 + tmp.78, Copy twenty_three.45 = tmp.85, tmp.86 = tmp.74 + 11, Copy twenty_four.46 = tmp.86, Copy tmp.87 = tmp.74, Copy tmp.88 = tmp.75, Copy tmp.89 = tmp.76, Copy tmp.90 = tmp.77, Copy tmp.91 = tmp.78, Copy tmp.92 = tmp.79, Copy tmp.93 = tmp.80, Copy tmp.94 = tmp.81, Copy tmp.95 = tmp.83, Copy tmp.96 = tmp.84, Copy tmp.97 = tmp.85, Copy tmp.98 = tmp.86, Copy tmp.99 = 13, tmp.100 = check_12_ints([thirteen.35, fourteen.36, fifteen.37, sixteen.38, seventeen.39, eighteen.40, nineteen.41, twenty.42, twenty_one.43, twenty_two.44, twenty_three.45, twenty_four.46, 13]), tmp.101 = tmp.47 != 6, Copy tmp.102 = tmp.101, JumpIfZero(tmp.101, tmp.103)] Pred: {ENTRY} Suc: {1, 2} iMap: {tmp.47 = glob_three + 3: set(), Copy should_spill.22 = tmp.47: set(), tmp.48 = glob_three - 2: {Copy should_spill.22 = tmp.47}, Copy one.23 = tmp.48: {Copy should_spill.22 = tmp.47}, tmp.49 = one.23 + one.23: {Copy one.23 = tmp.48, Copy should_spill.22 = tmp.47}, Copy two.24 = tmp.49: {Copy one.23 = tmp.48, Copy should_spill.22 = tmp.47}, tmp.50 = 2 + one.23: {Copy one.23 = tmp.48, Copy two.24 = tmp.49, Copy should_spill.22 = tmp.47}, Copy three.25 = tmp.50: {Copy one.23 = tmp.48, Copy two.24 = tmp.49, Copy should_spill.22 = tmp.47}, tmp.51 = two.24 * two.24: {Copy one.23 = tmp.48, Copy two.24 = tmp.49, Copy three.25 = tmp.50, Copy should_spill.22 = tmp.47}, Copy four.26 = tmp.51: {Copy one.23 = tmp.48, Copy two.24 = tmp.49, Copy three.25 = tmp.50, Copy should_spill.22 = tmp.47}, tmp.52 = 6 - one.23: {Copy three.25 = tmp.50, Copy should_spill.22 = tmp.47, Copy one.23 = tmp.48, Copy two.24 = tmp.49, Copy four.26 = tmp.51}, Copy five.27 = tmp.52: {Copy three.25 = tmp.50, Copy should_spill.22 = tmp.47, Copy one.23 = tmp.48, Copy two.24 = tmp.49, Copy four.26 = tmp.51}, tmp.53 = two.24 * three.25: {Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy should_spill.22 = tmp.47, Copy one.23 = tmp.48, Copy two.24 = tmp.49, Copy four.26 = tmp.51}, Copy six.28 = tmp.53: {Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy should_spill.22 = tmp.47, Copy one.23 = tmp.48, Copy two.24 = tmp.49, Copy four.26 = tmp.51}, tmp.54 = one.23 + 6: {Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy should_spill.22 = tmp.47, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy two.24 = tmp.49, Copy four.26 = tmp.51}, Copy seven.29 = tmp.54: {Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy should_spill.22 = tmp.47, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy two.24 = tmp.49, Copy four.26 = tmp.51}, tmp.55 = two.24 * 4: {Copy seven.29 = tmp.54, Copy should_spill.22 = tmp.47, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy two.24 = tmp.49}, Copy eight.30 = tmp.55: {Copy seven.29 = tmp.54, Copy should_spill.22 = tmp.47, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy two.24 = tmp.49}, tmp.56 = three.25 * three.25: {Copy seven.29 = tmp.54, Copy should_spill.22 = tmp.47, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy two.24 = tmp.49}, Copy nine.31 = tmp.56: {Copy seven.29 = tmp.54, Copy should_spill.22 = tmp.47, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy two.24 = tmp.49}, tmp.57 = four.26 + six.28: {Copy seven.29 = tmp.54, Copy nine.31 = tmp.56, Copy should_spill.22 = tmp.47, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy two.24 = tmp.49}, Copy ten.32 = tmp.57: {Copy seven.29 = tmp.54, Copy nine.31 = tmp.56, Copy should_spill.22 = tmp.47, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy two.24 = tmp.49}, tmp.58 = 16 - five.27: {Copy seven.29 = tmp.54, Copy nine.31 = tmp.56, Copy should_spill.22 = tmp.47, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy two.24 = tmp.49}, Copy eleven.33 = tmp.58: {Copy seven.29 = tmp.54, Copy nine.31 = tmp.56, Copy should_spill.22 = tmp.47, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy two.24 = tmp.49}, tmp.59 = six.28 + six.28: {Copy seven.29 = tmp.54, Copy nine.31 = tmp.56, Copy should_spill.22 = tmp.47, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy two.24 = tmp.49}, Copy twelve.34 = tmp.59: {Copy seven.29 = tmp.54, Copy nine.31 = tmp.56, Copy should_spill.22 = tmp.47, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy two.24 = tmp.49}, Copy tmp.60 = one.23: {Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy should_spill.22 = tmp.47, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy two.24 = tmp.49}, Copy tmp.61 = two.24: {Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy should_spill.22 = tmp.47, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy two.24 = tmp.49}, Copy tmp.62 = three.25: {Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy should_spill.22 = tmp.47, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy two.24 = tmp.49}, Copy tmp.63 = four.26: {Copy should_spill.22 = tmp.47, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy five.27 = tmp.52}, Copy tmp.64 = five.27: {Copy should_spill.22 = tmp.47, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy tmp.63 = four.26}, Copy tmp.65 = six.28: {Copy should_spill.22 = tmp.47, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.64 = five.27, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy tmp.63 = four.26}, Copy tmp.66 = seven.29: {Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.64 = five.27, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy tmp.63 = four.26, Copy five.27 = tmp.52}, Copy tmp.67 = eight.30: {Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy tmp.63 = four.26, Copy five.27 = tmp.52}, Copy tmp.68 = nine.31: {Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy tmp.63 = four.26, Copy five.27 = tmp.52}, Copy tmp.69 = ten.32: {Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy tmp.63 = four.26, Copy five.27 = tmp.52}, Copy tmp.70 = eleven.33: {Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.64 = five.27, Copy tmp.69 = ten.32, Copy tmp.66 = seven.29, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy tmp.63 = four.26, Copy five.27 = tmp.52}, Copy tmp.71 = twelve.34: {Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.64 = five.27, Copy tmp.69 = ten.32, Copy tmp.66 = seven.29, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy tmp.63 = four.26, Copy five.27 = tmp.52, Copy tmp.70 = eleven.33}, Copy tmp.72 = 1: {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.64 = five.27, Copy tmp.69 = ten.32, Copy tmp.66 = seven.29, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy tmp.63 = four.26, Copy five.27 = tmp.52, Copy tmp.70 = eleven.33}, tmp.73 = check_12_ints([tmp.60, tmp.61, tmp.62, tmp.63, tmp.64, tmp.65, tmp.66, tmp.67, tmp.68, tmp.69, tmp.70, tmp.71, tmp.72]): {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.64 = five.27, Copy tmp.69 = ten.32, Copy tmp.66 = seven.29, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy tmp.63 = four.26, Copy five.27 = tmp.52, Copy tmp.70 = eleven.33}, tmp.74 = 10 + glob_three: {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.64 = five.27, Copy tmp.69 = ten.32, Copy tmp.66 = seven.29, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy tmp.63 = four.26, Copy five.27 = tmp.52, Copy tmp.70 = eleven.33}, Copy thirteen.35 = tmp.74: {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.64 = five.27, Copy tmp.69 = ten.32, Copy tmp.66 = seven.29, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy tmp.63 = four.26, Copy five.27 = tmp.52, Copy tmp.70 = eleven.33}, tmp.75 = thirteen.35 + 1: {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.64 = five.27, Copy tmp.69 = ten.32, Copy tmp.66 = seven.29, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy tmp.63 = four.26, Copy five.27 = tmp.52, Copy tmp.70 = eleven.33}, Copy fourteen.36 = tmp.75: {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.64 = five.27, Copy tmp.69 = ten.32, Copy tmp.66 = seven.29, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy tmp.63 = four.26, Copy five.27 = tmp.52, Copy tmp.70 = eleven.33}, tmp.76 = 28 - thirteen.35: {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy fourteen.36 = tmp.75, Copy tmp.65 = six.28, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.64 = five.27, Copy tmp.69 = ten.32, Copy tmp.66 = seven.29, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy tmp.63 = four.26, Copy five.27 = tmp.52, Copy tmp.70 = eleven.33}, Copy fifteen.37 = tmp.76: {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy fourteen.36 = tmp.75, Copy tmp.65 = six.28, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.64 = five.27, Copy tmp.69 = ten.32, Copy tmp.66 = seven.29, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy tmp.63 = four.26, Copy five.27 = tmp.52, Copy tmp.70 = eleven.33}, tmp.77 = fourteen.36 + 2: {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy fourteen.36 = tmp.75, Copy tmp.65 = six.28, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.64 = five.27, Copy tmp.69 = ten.32, Copy tmp.66 = seven.29, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy tmp.63 = four.26, Copy five.27 = tmp.52, Copy tmp.70 = eleven.33, Copy fifteen.37 = tmp.76}, Copy sixteen.38 = tmp.77: {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy fourteen.36 = tmp.75, Copy tmp.65 = six.28, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.64 = five.27, Copy tmp.69 = ten.32, Copy tmp.66 = seven.29, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy tmp.63 = four.26, Copy five.27 = tmp.52, Copy tmp.70 = eleven.33, Copy fifteen.37 = tmp.76}, tmp.78 = 4 + thirteen.35: {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy fourteen.36 = tmp.75, Copy tmp.65 = six.28, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.64 = five.27, Copy tmp.69 = ten.32, Copy tmp.66 = seven.29, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy tmp.63 = four.26, Copy five.27 = tmp.52, Copy tmp.70 = eleven.33, Copy fifteen.37 = tmp.76}, Copy seventeen.39 = tmp.78: {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy fourteen.36 = tmp.75, Copy tmp.65 = six.28, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.64 = five.27, Copy tmp.69 = ten.32, Copy tmp.66 = seven.29, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy tmp.63 = four.26, Copy five.27 = tmp.52, Copy tmp.70 = eleven.33, Copy fifteen.37 = tmp.76}, tmp.79 = 32 - fourteen.36: {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy fourteen.36 = tmp.75, Copy tmp.65 = six.28, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.64 = five.27, Copy tmp.69 = ten.32, Copy tmp.66 = seven.29, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy six.28 = tmp.53, Copy tmp.63 = four.26, Copy five.27 = tmp.52, Copy tmp.70 = eleven.33, Copy fifteen.37 = tmp.76}, Copy eighteen.40 = tmp.79: {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy fourteen.36 = tmp.75, Copy tmp.65 = six.28, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.64 = five.27, Copy tmp.69 = ten.32, Copy tmp.66 = seven.29, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy tmp.61 = two.24, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy tmp.60 = one.23, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy six.28 = tmp.53, Copy tmp.63 = four.26, Copy five.27 = tmp.52, Copy tmp.70 = eleven.33, Copy fifteen.37 = tmp.76}, tmp.80 = 35 - sixteen.38: {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy tmp.70 = eleven.33}, Copy nineteen.41 = tmp.80: {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy tmp.70 = eleven.33}, tmp.81 = fifteen.37 + 5: {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy tmp.70 = eleven.33}, Copy twenty.42 = tmp.81: {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy tmp.70 = eleven.33}, tmp.82 = thirteen.35 * 2: {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33}, tmp.83 = tmp.82 - 5: {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33}, Copy twenty_one.43 = tmp.83: {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33}, tmp.84 = fifteen.37 + 7: {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33}, Copy twenty_two.44 = tmp.84: {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33}, tmp.85 = 6 + seventeen.39: {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33}, Copy twenty_three.45 = tmp.85: {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33}, tmp.86 = thirteen.35 + 11: {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33}, Copy twenty_four.46 = tmp.86: {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33}, Copy tmp.87 = thirteen.35: {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33}, Copy tmp.88 = fourteen.36: {Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33}, Copy tmp.89 = fifteen.37: {Copy tmp.88 = fourteen.36, Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33}, Copy tmp.90 = sixteen.38: {Copy tmp.88 = fourteen.36, Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}, Copy tmp.91 = seventeen.39: {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}, Copy tmp.92 = eighteen.40: {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.91 = seventeen.39, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}, Copy tmp.93 = nineteen.41: {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy tmp.92 = eighteen.40, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.91 = seventeen.39, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}, Copy tmp.94 = twenty.42: {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.93 = nineteen.41, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy tmp.92 = eighteen.40, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.91 = seventeen.39, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}, Copy tmp.95 = twenty_one.43: {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.93 = nineteen.41, Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy tmp.94 = twenty.42, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy tmp.92 = eighteen.40, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.91 = seventeen.39, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}, Copy tmp.96 = twenty_two.44: {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.71 = twelve.34, Copy tmp.93 = nineteen.41, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.95 = twenty_one.43, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy tmp.94 = twenty.42, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy tmp.92 = eighteen.40, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.91 = seventeen.39, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}, Copy tmp.97 = twenty_three.45: {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.93 = nineteen.41, Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.95 = twenty_one.43, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy tmp.96 = twenty_two.44, Copy fifteen.37 = tmp.76, Copy tmp.94 = twenty.42, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy tmp.92 = eighteen.40, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.91 = seventeen.39, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}, Copy tmp.98 = twenty_four.46: {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.71 = twelve.34, Copy tmp.93 = nineteen.41, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.95 = twenty_one.43, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy tmp.96 = twenty_two.44, Copy fifteen.37 = tmp.76, Copy tmp.94 = twenty.42, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.97 = twenty_three.45, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy tmp.92 = eighteen.40, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.91 = seventeen.39, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}, Copy tmp.99 = 13: {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.93 = nineteen.41, Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.95 = twenty_one.43, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy tmp.96 = twenty_two.44, Copy fifteen.37 = tmp.76, Copy tmp.94 = twenty.42, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.98 = twenty_four.46, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.97 = twenty_three.45, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy tmp.92 = eighteen.40, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.91 = seventeen.39, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}, tmp.100 = check_12_ints([tmp.87, tmp.88, tmp.89, tmp.90, tmp.91, tmp.92, tmp.93, tmp.94, tmp.95, tmp.96, tmp.97, tmp.98, tmp.99]): {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.71 = twelve.34, Copy tmp.93 = nineteen.41, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.95 = twenty_one.43, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy tmp.96 = twenty_two.44, Copy tmp.99 = 13, Copy fifteen.37 = tmp.76, Copy tmp.94 = twenty.42, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.98 = twenty_four.46, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.97 = twenty_three.45, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy tmp.92 = eighteen.40, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.91 = seventeen.39, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}, tmp.101 = should_spill.22 != 6: {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.93 = nineteen.41, Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.95 = twenty_one.43, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy tmp.96 = twenty_two.44, Copy tmp.99 = 13, Copy fifteen.37 = tmp.76, Copy tmp.94 = twenty.42, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.98 = twenty_four.46, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.97 = twenty_three.45, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy tmp.92 = eighteen.40, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.91 = seventeen.39, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}, Copy tmp.102 = tmp.101: {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.71 = twelve.34, Copy tmp.93 = nineteen.41, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.95 = twenty_one.43, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy tmp.96 = twenty_two.44, Copy tmp.99 = 13, Copy fifteen.37 = tmp.76, Copy tmp.94 = twenty.42, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.98 = twenty_four.46, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.97 = twenty_three.45, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy tmp.92 = eighteen.40, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.91 = seventeen.39, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}, JumpIfZero(tmp.102, tmp.103): {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.93 = nineteen.41, Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.95 = twenty_one.43, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy tmp.102 = tmp.101, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy tmp.96 = twenty_two.44, Copy tmp.99 = 13, Copy fifteen.37 = tmp.76, Copy tmp.94 = twenty.42, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.98 = twenty_four.46, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.97 = twenty_three.45, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy tmp.92 = eighteen.40, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.91 = seventeen.39, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}} ReachingCopies: {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.93 = nineteen.41, Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.95 = twenty_one.43, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy tmp.102 = tmp.101, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy tmp.96 = twenty_two.44, Copy tmp.99 = 13, Copy fifteen.37 = tmp.76, Copy tmp.94 = twenty.42, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.98 = twenty_four.46, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.97 = twenty_three.45, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy tmp.92 = eighteen.40, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.91 = seventeen.39, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}
1 1: [tmp.104 = -1, Return tmp.104] Pred: {0} Suc: {EXIT} iMap: {tmp.104 = -1: {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.71 = twelve.34, Copy tmp.93 = nineteen.41, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.95 = twenty_one.43, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy tmp.102 = tmp.101, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy tmp.96 = twenty_two.44, Copy tmp.99 = 13, Copy fifteen.37 = tmp.76, Copy tmp.94 = twenty.42, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.98 = twenty_four.46, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.97 = twenty_three.45, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy tmp.92 = eighteen.40, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.91 = seventeen.39, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}, Return tmp.104: {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.93 = nineteen.41, Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.95 = twenty_one.43, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy tmp.102 = tmp.101, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy tmp.96 = twenty_two.44, Copy tmp.99 = 13, Copy fifteen.37 = tmp.76, Copy tmp.94 = twenty.42, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.98 = twenty_four.46, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.97 = twenty_three.45, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy tmp.92 = eighteen.40, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.91 = seventeen.39, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}} ReachingCopies: {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.93 = nineteen.41, Copy tmp.71 = twelve.34, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.95 = twenty_one.43, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy tmp.102 = tmp.101, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy tmp.96 = twenty_two.44, Copy tmp.99 = 13, Copy fifteen.37 = tmp.76, Copy tmp.94 = twenty.42, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.98 = twenty_four.46, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.97 = twenty_three.45, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy tmp.92 = eighteen.40, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.91 = seventeen.39, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}
2 2: [Label(tmp.103), Return 0] Pred: {0} Suc: {EXIT} iMap: {Label(tmp.103): {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.71 = twelve.34, Copy tmp.93 = nineteen.41, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.95 = twenty_one.43, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy tmp.102 = tmp.101, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy tmp.96 = twenty_two.44, Copy tmp.99 = 13, Copy fifteen.37 = tmp.76, Copy tmp.94 = twenty.42, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.98 = twenty_four.46, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.97 = twenty_three.45, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy tmp.92 = eighteen.40, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.91 = seventeen.39, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}, Return 0: {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.71 = twelve.34, Copy tmp.93 = nineteen.41, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.95 = twenty_one.43, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy tmp.102 = tmp.101, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy tmp.96 = twenty_two.44, Copy tmp.99 = 13, Copy fifteen.37 = tmp.76, Copy tmp.94 = twenty.42, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.98 = twenty_four.46, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.97 = twenty_three.45, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy tmp.92 = eighteen.40, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.91 = seventeen.39, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}} ReachingCopies: {Copy tmp.88 = fourteen.36, Copy tmp.90 = sixteen.38, Copy tmp.71 = twelve.34, Copy tmp.93 = nineteen.41, Copy should_spill.22 = tmp.47, Copy tmp.65 = six.28, Copy twenty_four.46 = tmp.86, Copy tmp.64 = five.27, Copy tmp.95 = twenty_one.43, Copy tmp.66 = seven.29, Copy eight.30 = tmp.55, Copy tmp.61 = two.24, Copy tmp.102 = tmp.101, Copy seven.29 = tmp.54, Copy tmp.87 = thirteen.35, Copy tmp.60 = one.23, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy tmp.63 = four.26, Copy nineteen.41 = tmp.80, Copy tmp.96 = twenty_two.44, Copy tmp.99 = 13, Copy fifteen.37 = tmp.76, Copy tmp.94 = twenty.42, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy tmp.98 = twenty_four.46, Copy tmp.67 = eight.30, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy tmp.69 = ten.32, Copy three.25 = tmp.50, Copy tmp.97 = twenty_three.45, Copy tmp.62 = three.25, Copy tmp.72 = 1, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy sixteen.38 = tmp.77, Copy two.24 = tmp.49, Copy tmp.92 = eighteen.40, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy tmp.91 = seventeen.39, Copy tmp.68 = nine.31, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy tmp.70 = eleven.33, Copy tmp.89 = fifteen.37}
EXIT Exit: EXIT {1, 2}
--------------ADDING ALL STATIC VARIABLES.------------------
check_one_int check_one_int FunType: ParamTypes: [int, int] Return Type: int Defined: False Global: True
check_5_ints check_5_ints FunType: ParamTypes: [int, int, int, int, int, int] Return Type: int Defined: False Global: True
check_12_ints check_12_ints FunType: ParamTypes: [int, int, int, int, int, int, int, int, int, int, int, int, int] Return Type: int Defined: False Global: True
id id FunType: ParamTypes: [int] Return Type: int Defined: False Global: True
glob_three glob_three int InitialVal: InitialList: [c_int(3)] Global: True
target target FunType: ParamTypes: [] Return Type: int Defined: True Global: True
should_spill.22 should_spill.22 int <typeChecker.LocalAttributes object at 0x7f26fce31370>
one.23 one.23 int <typeChecker.LocalAttributes object at 0x7f26fce315b0>
two.24 two.24 int <typeChecker.LocalAttributes object at 0x7f26fce317f0>
three.25 three.25 int <typeChecker.LocalAttributes object at 0x7f26fce31a00>
four.26 four.26 int <typeChecker.LocalAttributes object at 0x7f26fce31c40>
five.27 five.27 int <typeChecker.LocalAttributes object at 0x7f26fce31e50>
six.28 six.28 int <typeChecker.LocalAttributes object at 0x7f26fce32090>
seven.29 seven.29 int <typeChecker.LocalAttributes object at 0x7f26fce322a0>
eight.30 eight.30 int <typeChecker.LocalAttributes object at 0x7f26fce324e0>
nine.31 nine.31 int <typeChecker.LocalAttributes object at 0x7f26fce32720>
ten.32 ten.32 int <typeChecker.LocalAttributes object at 0x7f26fce32930>
eleven.33 eleven.33 int <typeChecker.LocalAttributes object at 0x7f26fce32b40>
twelve.34 twelve.34 int <typeChecker.LocalAttributes object at 0x7f26fce32d80>
thirteen.35 thirteen.35 int <typeChecker.LocalAttributes object at 0x7f26fce33560>
fourteen.36 fourteen.36 int <typeChecker.LocalAttributes object at 0x7f26fce337a0>
fifteen.37 fifteen.37 int <typeChecker.LocalAttributes object at 0x7f26fce339e0>
sixteen.38 sixteen.38 int <typeChecker.LocalAttributes object at 0x7f26fce33c20>
seventeen.39 seventeen.39 int <typeChecker.LocalAttributes object at 0x7f26fce33e60>
eighteen.40 eighteen.40 int <typeChecker.LocalAttributes object at 0x7f26fce340e0>
nineteen.41 nineteen.41 int <typeChecker.LocalAttributes object at 0x7f26fce34350>
twenty.42 twenty.42 int <typeChecker.LocalAttributes object at 0x7f26fce345c0>
twenty_one.43 twenty_one.43 int <typeChecker.LocalAttributes object at 0x7f26fce34830>
twenty_two.44 twenty_two.44 int <typeChecker.LocalAttributes object at 0x7f26fce34b60>
twenty_three.45 twenty_three.45 int <typeChecker.LocalAttributes object at 0x7f26fce34dd0>
twenty_four.46 twenty_four.46 int <typeChecker.LocalAttributes object at 0x7f26fce35040>
tmp.47 tmp.47 int <typeChecker.LocalAttributes object at 0x7f26fce375c0>
tmp.48 tmp.48 int <typeChecker.LocalAttributes object at 0x7f26fce377a0>
tmp.49 tmp.49 int <typeChecker.LocalAttributes object at 0x7f26fce37980>
tmp.50 tmp.50 int <typeChecker.LocalAttributes object at 0x7f26fce37b60>
tmp.51 tmp.51 int <typeChecker.LocalAttributes object at 0x7f26fce37d40>
tmp.52 tmp.52 int <typeChecker.LocalAttributes object at 0x7f26fce37f20>
tmp.53 tmp.53 int <typeChecker.LocalAttributes object at 0x7f26fce38140>
tmp.54 tmp.54 int <typeChecker.LocalAttributes object at 0x7f26fce38320>
tmp.55 tmp.55 int <typeChecker.LocalAttributes object at 0x7f26fce386b0>
tmp.56 tmp.56 int <typeChecker.LocalAttributes object at 0x7f26fce386e0>
tmp.57 tmp.57 int <typeChecker.LocalAttributes object at 0x7f26fce388c0>
tmp.58 tmp.58 int <typeChecker.LocalAttributes object at 0x7f26fce38b00>
tmp.59 tmp.59 int <typeChecker.LocalAttributes object at 0x7f26fce38ce0>
tmp.60 tmp.60 int <typeChecker.LocalAttributes object at 0x7f26fce38fe0>
tmp.61 tmp.61 int <typeChecker.LocalAttributes object at 0x7f26fce39130>
tmp.62 tmp.62 int <typeChecker.LocalAttributes object at 0x7f26fce39280>
tmp.63 tmp.63 int <typeChecker.LocalAttributes object at 0x7f26fce393d0>
tmp.64 tmp.64 int <typeChecker.LocalAttributes object at 0x7f26fce39520>
tmp.65 tmp.65 int <typeChecker.LocalAttributes object at 0x7f26fce39670>
tmp.66 tmp.66 int <typeChecker.LocalAttributes object at 0x7f26fce397c0>
tmp.67 tmp.67 int <typeChecker.LocalAttributes object at 0x7f26fce39910>
tmp.68 tmp.68 int <typeChecker.LocalAttributes object at 0x7f26fce39a60>
tmp.69 tmp.69 int <typeChecker.LocalAttributes object at 0x7f26fce39bb0>
tmp.70 tmp.70 int <typeChecker.LocalAttributes object at 0x7f26fce39d00>
tmp.71 tmp.71 int <typeChecker.LocalAttributes object at 0x7f26fce39e50>
tmp.72 tmp.72 int <typeChecker.LocalAttributes object at 0x7f26fce39fa0>
tmp.73 tmp.73 int <typeChecker.LocalAttributes object at 0x7f26fce38ef0>
tmp.74 tmp.74 int <typeChecker.LocalAttributes object at 0x7f26fce3a0c0>
tmp.75 tmp.75 int <typeChecker.LocalAttributes object at 0x7f26fce3a2a0>
tmp.76 tmp.76 int <typeChecker.LocalAttributes object at 0x7f26fce3a480>
tmp.77 tmp.77 int <typeChecker.LocalAttributes object at 0x7f26fce3a660>
tmp.78 tmp.78 int <typeChecker.LocalAttributes object at 0x7f26fce3a840>
tmp.79 tmp.79 int <typeChecker.LocalAttributes object at 0x7f26fce3aa20>
tmp.80 tmp.80 int <typeChecker.LocalAttributes object at 0x7f26fce3ac00>
tmp.81 tmp.81 int <typeChecker.LocalAttributes object at 0x7f26fce3ade0>
tmp.82 tmp.82 int <typeChecker.LocalAttributes object at 0x7f26fce3b110>
tmp.83 tmp.83 int <typeChecker.LocalAttributes object at 0x7f26fce3aff0>
tmp.84 tmp.84 int <typeChecker.LocalAttributes object at 0x7f26fce3b320>
tmp.85 tmp.85 int <typeChecker.LocalAttributes object at 0x7f26fce3b500>
tmp.86 tmp.86 int <typeChecker.LocalAttributes object at 0x7f26fce3b740>
tmp.87 tmp.87 int <typeChecker.LocalAttributes object at 0x7f26fce3bad0>
tmp.88 tmp.88 int <typeChecker.LocalAttributes object at 0x7f26fce3bc20>
tmp.89 tmp.89 int <typeChecker.LocalAttributes object at 0x7f26fce3bd70>
tmp.90 tmp.90 int <typeChecker.LocalAttributes object at 0x7f26fce3bec0>
tmp.91 tmp.91 int <typeChecker.LocalAttributes object at 0x7f26fce3bfb0>
tmp.92 tmp.92 int <typeChecker.LocalAttributes object at 0x7f26fce401a0>
tmp.93 tmp.93 int <typeChecker.LocalAttributes object at 0x7f26fce402f0>
tmp.94 tmp.94 int <typeChecker.LocalAttributes object at 0x7f26fce40440>
tmp.95 tmp.95 int <typeChecker.LocalAttributes object at 0x7f26fce40590>
tmp.96 tmp.96 int <typeChecker.LocalAttributes object at 0x7f26fce406e0>
tmp.97 tmp.97 int <typeChecker.LocalAttributes object at 0x7f26fce40830>
tmp.98 tmp.98 int <typeChecker.LocalAttributes object at 0x7f26fce40980>
tmp.99 tmp.99 int <typeChecker.LocalAttributes object at 0x7f26fce40b00>
tmp.100 tmp.100 int <typeChecker.LocalAttributes object at 0x7f26fce400b0>
tmp.101 tmp.101 int <typeChecker.LocalAttributes object at 0x7f26fce40c80>
tmp.102 tmp.102 int <typeChecker.LocalAttributes object at 0x7f26fce38830>
tmp.104 tmp.104 int <typeChecker.LocalAttributes object at 0x7f26fce410d0>
--------------LIVE for block 2-------------------
Return 0 {glob_three}
Label(tmp.103) {glob_three}
OLD ANNOT: set()
NEW ANNOT: {glob_three}
--------------LIVE for block 1-------------------
Return tmp.104 {glob_three}
tmp.104 = -1 {tmp.104, glob_three}
OLD ANNOT: set()
NEW ANNOT: {glob_three}
--------------LIVE for block 0-------------------
JumpIfZero(tmp.101, tmp.103) {glob_three}
Copy tmp.102 = tmp.101 {tmp.101, glob_three}
tmp.101 = tmp.47 != 6 {tmp.101, glob_three}
tmp.100 = check_12_ints([thirteen.35, fourteen.36, fifteen.37, sixteen.38, seventeen.39, eighteen.40, nineteen.41, twenty.42, twenty_one.43, twenty_two.44, twenty_three.45, twenty_four.46, 13]) {glob_three, tmp.47}
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_ConstantValue'>
Copy tmp.99 = 13 {twenty_four.46, twenty_two.44, fifteen.37, eighteen.40, fourteen.36, twenty_one.43, twenty_three.45, thirteen.35, glob_three, tmp.47, nineteen.41, seventeen.39, sixteen.38, twenty.42}
Copy tmp.98 = tmp.86 {twenty_four.46, twenty_two.44, fifteen.37, eighteen.40, fourteen.36, twenty_one.43, twenty_three.45, thirteen.35, glob_three, tmp.47, nineteen.41, seventeen.39, sixteen.38, twenty.42}
Copy tmp.97 = tmp.85 {tmp.86, twenty_four.46, twenty_two.44, fifteen.37, eighteen.40, fourteen.36, twenty_one.43, twenty_three.45, thirteen.35, glob_three, tmp.47, nineteen.41, seventeen.39, sixteen.38, twenty.42}
Copy tmp.96 = tmp.84 {twenty_two.44, fifteen.37, eighteen.40, twenty_one.43, thirteen.35, sixteen.38, twenty.42, tmp.86, twenty_four.46, tmp.85, fourteen.36, twenty_three.45, glob_three, tmp.47, nineteen.41, seventeen.39}
Copy tmp.95 = tmp.83 {twenty_two.44, fifteen.37, eighteen.40, twenty_one.43, tmp.84, thirteen.35, sixteen.38, twenty.42, tmp.86, twenty_four.46, tmp.85, fourteen.36, twenty_three.45, glob_three, tmp.47, nineteen.41, seventeen.39}
Copy tmp.94 = tmp.81 {tmp.83, twenty_two.44, fifteen.37, eighteen.40, twenty_one.43, tmp.84, thirteen.35, sixteen.38, twenty.42, tmp.86, twenty_four.46, tmp.85, fourteen.36, twenty_three.45, glob_three, tmp.47, nineteen.41, seventeen.39}
Copy tmp.93 = tmp.80 {tmp.83, twenty_two.44, tmp.81, fifteen.37, eighteen.40, twenty_one.43, tmp.84, thirteen.35, sixteen.38, twenty.42, tmp.86, twenty_four.46, tmp.85, fourteen.36, twenty_three.45, glob_three, tmp.47, nineteen.41, seventeen.39}
Copy tmp.92 = tmp.79 {tmp.83, twenty_two.44, tmp.81, fifteen.37, eighteen.40, twenty_one.43, tmp.84, thirteen.35, sixteen.38, twenty.42, tmp.80, tmp.86, twenty_four.46, tmp.85, fourteen.36, twenty_three.45, glob_three, tmp.47, nineteen.41, seventeen.39}
Copy tmp.91 = tmp.78 {tmp.83, twenty_two.44, tmp.81, fifteen.37, eighteen.40, twenty_one.43, tmp.84, tmp.79, thirteen.35, sixteen.38, twenty.42, tmp.80, tmp.86, twenty_four.46, tmp.85, fourteen.36, twenty_three.45, glob_three, tmp.47, nineteen.41, seventeen.39}
Copy tmp.90 = tmp.77 {tmp.83, twenty_two.44, tmp.81, fifteen.37, eighteen.40, twenty_one.43, tmp.84, tmp.79, thirteen.35, tmp.78, sixteen.38, twenty.42, tmp.80, tmp.86, twenty_four.46, tmp.85, fourteen.36, twenty_three.45, glob_three, tmp.47, nineteen.41, seventeen.39}
Copy tmp.89 = tmp.76 {tmp.83, twenty_two.44, tmp.81, fifteen.37, eighteen.40, twenty_one.43, tmp.84, tmp.79, thirteen.35, tmp.78, sixteen.38, twenty.42, tmp.80, tmp.86, twenty_four.46, tmp.85, tmp.77, fourteen.36, twenty_three.45, glob_three, tmp.47, nineteen.41, seventeen.39}
Copy tmp.88 = tmp.75 {tmp.83, twenty_two.44, tmp.81, fifteen.37, eighteen.40, twenty_one.43, tmp.84, tmp.76, tmp.79, thirteen.35, tmp.78, sixteen.38, twenty.42, tmp.80, tmp.86, twenty_four.46, tmp.85, tmp.77, fourteen.36, twenty_three.45, glob_three, tmp.47, nineteen.41, seventeen.39}
Copy tmp.87 = tmp.74 {tmp.83, twenty_two.44, tmp.81, fifteen.37, eighteen.40, twenty_one.43, tmp.84, tmp.76, tmp.79, thirteen.35, tmp.78, sixteen.38, twenty.42, tmp.80, tmp.86, twenty_four.46, tmp.85, tmp.77, fourteen.36, twenty_three.45, tmp.75, glob_three, tmp.47, nineteen.41, seventeen.39}
Copy twenty_four.46 = tmp.86 {tmp.83, twenty_two.44, tmp.81, fifteen.37, eighteen.40, twenty_one.43, tmp.84, tmp.76, tmp.79, thirteen.35, tmp.78, tmp.74, sixteen.38, twenty.42, tmp.80, tmp.86, twenty_four.46, tmp.85, tmp.77, fourteen.36, twenty_three.45, tmp.75, glob_three, tmp.47, nineteen.41, seventeen.39}
tmp.86 = tmp.74 + 11 {tmp.83, twenty_two.44, tmp.81, fifteen.37, eighteen.40, twenty_one.43, tmp.84, tmp.76, tmp.79, thirteen.35, tmp.78, tmp.74, sixteen.38, twenty.42, tmp.80, tmp.86, tmp.85, tmp.77, fourteen.36, twenty_three.45, tmp.75, glob_three, tmp.47, nineteen.41, seventeen.39}
Copy twenty_three.45 = tmp.85 {tmp.83, twenty_two.44, tmp.81, fifteen.37, eighteen.40, twenty_one.43, tmp.84, tmp.76, tmp.79, thirteen.35, tmp.78, tmp.74, sixteen.38, twenty.42, tmp.80, tmp.85, tmp.77, fourteen.36, twenty_three.45, tmp.75, glob_three, tmp.47, nineteen.41, seventeen.39}
tmp.85 = 6 + tmp.78 {tmp.83, twenty_two.44, tmp.81, fifteen.37, eighteen.40, twenty_one.43, tmp.84, tmp.76, tmp.79, thirteen.35, tmp.78, tmp.74, sixteen.38, twenty.42, tmp.80, tmp.85, tmp.77, fourteen.36, tmp.75, glob_three, tmp.47, nineteen.41, seventeen.39}
Copy twenty_two.44 = tmp.84 {tmp.83, twenty_two.44, tmp.81, fifteen.37, eighteen.40, twenty_one.43, tmp.84, tmp.76, tmp.79, thirteen.35, tmp.78, tmp.74, sixteen.38, twenty.42, tmp.80, tmp.77, fourteen.36, tmp.75, glob_three, tmp.47, nineteen.41, seventeen.39}
tmp.84 = tmp.76 + 7 {tmp.83, tmp.81, fifteen.37, eighteen.40, twenty_one.43, tmp.84, tmp.76, tmp.79, thirteen.35, tmp.78, tmp.74, sixteen.38, twenty.42, tmp.80, tmp.77, fourteen.36, tmp.75, glob_three, tmp.47, nineteen.41, seventeen.39}
Copy twenty_one.43 = tmp.83 {tmp.83, tmp.81, fifteen.37, eighteen.40, twenty_one.43, tmp.79, tmp.76, thirteen.35, tmp.78, tmp.74, sixteen.38, twenty.42, tmp.80, tmp.77, fourteen.36, tmp.75, glob_three, tmp.47, nineteen.41, seventeen.39}
tmp.83 = tmp.82 - 5 {tmp.83, tmp.81, fifteen.37, eighteen.40, tmp.79, tmp.76, thirteen.35, tmp.78, tmp.74, sixteen.38, twenty.42, tmp.80, tmp.77, fourteen.36, tmp.75, glob_three, tmp.47, nineteen.41, seventeen.39}
tmp.82 = tmp.74 * 2 {tmp.81, fifteen.37, eighteen.40, tmp.79, tmp.76, thirteen.35, tmp.78, tmp.74, sixteen.38, twenty.42, tmp.80, tmp.77, fourteen.36, tmp.82, tmp.75, glob_three, tmp.47, nineteen.41, seventeen.39}
Copy twenty.42 = tmp.81 {tmp.81, fifteen.37, eighteen.40, tmp.79, tmp.76, thirteen.35, tmp.78, tmp.74, sixteen.38, twenty.42, tmp.80, tmp.77, fourteen.36, tmp.75, glob_three, tmp.47, nineteen.41, seventeen.39}
tmp.81 = tmp.76 + 5 {tmp.81, fifteen.37, eighteen.40, tmp.79, tmp.76, thirteen.35, tmp.78, tmp.74, sixteen.38, tmp.80, tmp.77, fourteen.36, tmp.75, glob_three, tmp.47, nineteen.41, seventeen.39}
Copy nineteen.41 = tmp.80 {fifteen.37, eighteen.40, tmp.79, tmp.76, thirteen.35, tmp.78, tmp.74, sixteen.38, tmp.80, tmp.77, fourteen.36, tmp.75, glob_three, tmp.47, nineteen.41, seventeen.39}
tmp.80 = 35 - tmp.77 {seventeen.39, fifteen.37, tmp.77, fourteen.36, eighteen.40, tmp.80, tmp.79, tmp.76, tmp.47, thirteen.35, glob_three, tmp.78, tmp.75, tmp.74, sixteen.38}
Copy eighteen.40 = tmp.79 {seventeen.39, fifteen.37, tmp.77, fourteen.36, eighteen.40, tmp.47, tmp.79, tmp.76, thirteen.35, glob_three, tmp.78, tmp.75, tmp.74, sixteen.38}
tmp.79 = 32 - tmp.75 {seventeen.39, fifteen.37, tmp.77, fourteen.36, tmp.47, tmp.79, tmp.76, thirteen.35, glob_three, tmp.78, tmp.75, tmp.74, sixteen.38}
Copy seventeen.39 = tmp.78 {seventeen.39, fifteen.37, tmp.77, fourteen.36, tmp.47, tmp.76, thirteen.35, glob_three, tmp.78, tmp.75, tmp.74, sixteen.38}
tmp.78 = 4 + tmp.74 {fifteen.37, tmp.77, fourteen.36, tmp.47, tmp.76, thirteen.35, glob_three, tmp.78, tmp.75, tmp.74, sixteen.38}
Copy sixteen.38 = tmp.77 {fifteen.37, tmp.77, fourteen.36, tmp.47, tmp.76, thirteen.35, glob_three, tmp.75, tmp.74, sixteen.38}
tmp.77 = tmp.75 + 2 {fifteen.37, tmp.77, fourteen.36, tmp.47, tmp.76, thirteen.35, glob_three, tmp.75, tmp.74}
Copy fifteen.37 = tmp.76 {fifteen.37, fourteen.36, tmp.47, tmp.76, thirteen.35, glob_three, tmp.75, tmp.74}
tmp.76 = 28 - tmp.74 {tmp.76, thirteen.35, glob_three, tmp.75, tmp.74, fourteen.36, tmp.47}
Copy fourteen.36 = tmp.75 {thirteen.35, glob_three, tmp.75, tmp.74, fourteen.36, tmp.47}
tmp.75 = tmp.74 + 1 {thirteen.35, glob_three, tmp.75, tmp.74, tmp.47}
Copy thirteen.35 = tmp.74 {glob_three, thirteen.35, tmp.74, tmp.47}
tmp.74 = 10 + glob_three {tmp.74, glob_three, tmp.47}
tmp.73 = check_12_ints([one.23, two.24, three.25, four.26, five.27, six.28, seven.29, eight.30, nine.31, ten.32, eleven.33, twelve.34, 1]) {glob_three, tmp.47}
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_ConstantValue'>
Copy tmp.72 = 1 {seven.29, nine.31, eight.30, five.27, one.23, two.24, eleven.33, ten.32, tmp.47, six.28, glob_three, four.26, twelve.34, three.25}
Copy tmp.71 = tmp.59 {seven.29, nine.31, eight.30, five.27, one.23, two.24, eleven.33, ten.32, tmp.47, six.28, glob_three, four.26, twelve.34, three.25}
Copy tmp.70 = tmp.58 {seven.29, nine.31, eight.30, five.27, one.23, two.24, eleven.33, tmp.59, ten.32, tmp.47, six.28, glob_three, four.26, twelve.34, three.25}
Copy tmp.69 = tmp.57 {nine.31, five.27, ten.32, six.28, four.26, twelve.34, three.25, tmp.58, seven.29, two.24, eleven.33, tmp.59, tmp.47, glob_three, one.23, eight.30}
Copy tmp.68 = tmp.56 {nine.31, five.27, ten.32, six.28, four.26, twelve.34, three.25, tmp.58, seven.29, two.24, tmp.57, eleven.33, tmp.59, tmp.47, glob_three, one.23, eight.30}
Copy tmp.67 = tmp.55 {nine.31, five.27, ten.32, six.28, four.26, twelve.34, three.25, tmp.58, seven.29, tmp.56, two.24, tmp.57, eleven.33, tmp.59, tmp.47, glob_three, one.23, eight.30}
Copy tmp.66 = tmp.54 {nine.31, five.27, ten.32, six.28, four.26, twelve.34, three.25, tmp.58, seven.29, tmp.56, two.24, tmp.55, tmp.57, eleven.33, tmp.59, tmp.47, glob_three, one.23, eight.30}
Copy tmp.65 = tmp.53 {nine.31, five.27, ten.32, six.28, four.26, twelve.34, three.25, tmp.58, seven.29, tmp.56, two.24, tmp.55, tmp.57, eleven.33, tmp.59, tmp.47, glob_three, one.23, tmp.54, eight.30}
Copy tmp.64 = tmp.52 {nine.31, five.27, ten.32, six.28, four.26, twelve.34, three.25, tmp.58, seven.29, tmp.56, two.24, tmp.55, tmp.57, eleven.33, tmp.59, tmp.47, glob_three, one.23, tmp.54, tmp.53, eight.30}
Copy tmp.63 = tmp.51 {nine.31, five.27, ten.32, six.28, tmp.52, four.26, twelve.34, three.25, tmp.58, seven.29, tmp.56, two.24, tmp.55, tmp.57, eleven.33, tmp.59, tmp.47, glob_three, one.23, tmp.54, tmp.53, eight.30}
Copy tmp.62 = tmp.50 {nine.31, five.27, tmp.51, ten.32, six.28, tmp.52, four.26, twelve.34, three.25, tmp.58, seven.29, tmp.56, two.24, tmp.55, tmp.57, eleven.33, tmp.59, tmp.47, glob_three, one.23, tmp.54, tmp.53, eight.30}
Copy tmp.61 = tmp.49 {nine.31, tmp.50, five.27, tmp.51, ten.32, six.28, tmp.52, four.26, twelve.34, three.25, tmp.58, seven.29, tmp.56, two.24, tmp.55, tmp.57, eleven.33, tmp.59, tmp.47, glob_three, one.23, tmp.54, tmp.53, eight.30}
Copy tmp.60 = tmp.48 {nine.31, tmp.50, five.27, tmp.51, ten.32, six.28, tmp.52, four.26, twelve.34, three.25, tmp.58, seven.29, tmp.56, two.24, tmp.55, tmp.57, eleven.33, tmp.59, tmp.47, tmp.49, glob_three, one.23, tmp.54, tmp.53, eight.30}
Copy twelve.34 = tmp.59 {nine.31, tmp.50, five.27, tmp.51, ten.32, six.28, tmp.52, four.26, twelve.34, tmp.48, three.25, tmp.58, seven.29, tmp.56, two.24, tmp.55, tmp.57, eleven.33, tmp.59, tmp.47, tmp.49, glob_three, one.23, tmp.54, tmp.53, eight.30}
tmp.59 = tmp.53 + tmp.53 {nine.31, tmp.50, five.27, tmp.51, ten.32, six.28, tmp.52, four.26, tmp.48, three.25, tmp.58, seven.29, tmp.56, two.24, tmp.55, tmp.57, eleven.33, tmp.59, tmp.47, tmp.49, glob_three, one.23, tmp.54, tmp.53, eight.30}
Copy eleven.33 = tmp.58 {nine.31, tmp.50, five.27, tmp.51, ten.32, six.28, tmp.52, four.26, tmp.48, three.25, tmp.58, seven.29, tmp.56, two.24, tmp.55, tmp.57, eleven.33, tmp.47, tmp.49, glob_three, one.23, tmp.54, tmp.53, eight.30}
tmp.58 = 16 - tmp.52 {nine.31, tmp.50, five.27, tmp.51, ten.32, six.28, tmp.52, four.26, tmp.48, three.25, tmp.58, seven.29, tmp.56, two.24, tmp.55, tmp.57, tmp.47, tmp.49, glob_three, one.23, tmp.54, tmp.53, eight.30}
Copy ten.32 = tmp.57 {nine.31, tmp.50, five.27, tmp.51, ten.32, six.28, tmp.52, four.26, tmp.48, three.25, seven.29, tmp.56, two.24, tmp.55, tmp.57, tmp.47, tmp.49, glob_three, one.23, tmp.54, tmp.53, eight.30}
tmp.57 = tmp.51 + tmp.53 {nine.31, tmp.50, five.27, tmp.51, six.28, tmp.52, four.26, tmp.48, three.25, seven.29, tmp.56, two.24, tmp.55, tmp.57, tmp.47, tmp.49, glob_three, one.23, tmp.54, tmp.53, eight.30}
Copy nine.31 = tmp.56 {nine.31, tmp.50, five.27, tmp.51, six.28, tmp.52, four.26, tmp.48, three.25, seven.29, tmp.56, two.24, tmp.55, tmp.47, tmp.49, glob_three, one.23, tmp.54, tmp.53, eight.30}
tmp.56 = tmp.50 * tmp.50 {tmp.50, five.27, tmp.51, six.28, tmp.52, four.26, tmp.48, three.25, seven.29, tmp.56, two.24, tmp.55, tmp.47, tmp.49, glob_three, one.23, tmp.54, tmp.53, eight.30}
Copy eight.30 = tmp.55 {tmp.50, five.27, tmp.51, six.28, tmp.52, four.26, tmp.48, three.25, seven.29, two.24, tmp.55, tmp.47, tmp.49, glob_three, one.23, tmp.54, tmp.53, eight.30}
tmp.55 = tmp.49 * 4 {tmp.50, five.27, tmp.51, six.28, tmp.52, four.26, tmp.48, three.25, seven.29, two.24, tmp.55, tmp.47, tmp.49, glob_three, one.23, tmp.54, tmp.53}
Copy seven.29 = tmp.54 {tmp.50, five.27, tmp.51, six.28, tmp.52, four.26, tmp.48, three.25, seven.29, two.24, tmp.47, tmp.49, glob_three, one.23, tmp.54, tmp.53}
tmp.54 = tmp.48 + 6 {tmp.50, five.27, one.23, tmp.51, two.24, tmp.47, tmp.49, tmp.52, glob_three, four.26, six.28, tmp.54, tmp.48, tmp.53, three.25}
Copy six.28 = tmp.53 {tmp.50, five.27, one.23, tmp.51, two.24, tmp.47, tmp.49, tmp.52, glob_three, four.26, six.28, tmp.48, tmp.53, three.25}
tmp.53 = tmp.49 * tmp.50 {tmp.50, five.27, one.23, tmp.51, two.24, tmp.47, tmp.49, tmp.52, glob_three, four.26, tmp.48, tmp.53, three.25}
Copy five.27 = tmp.52 {tmp.50, five.27, one.23, tmp.51, two.24, tmp.47, tmp.49, tmp.52, glob_three, four.26, tmp.48, three.25}
tmp.52 = 6 - tmp.48 {tmp.50, one.23, two.24, tmp.51, tmp.47, tmp.49, tmp.52, glob_three, four.26, tmp.48, three.25}
Copy four.26 = tmp.51 {tmp.50, one.23, two.24, tmp.51, tmp.47, tmp.49, glob_three, four.26, tmp.48, three.25}
tmp.51 = tmp.49 * tmp.49 {tmp.50, two.24, tmp.51, tmp.47, tmp.49, glob_three, one.23, tmp.48, three.25}
Copy three.25 = tmp.50 {tmp.50, two.24, tmp.47, tmp.49, glob_three, one.23, tmp.48, three.25}
tmp.50 = 2 + tmp.48 {tmp.49, glob_three, one.23, tmp.50, two.24, tmp.48, tmp.47}
Copy two.24 = tmp.49 {tmp.49, glob_three, one.23, two.24, tmp.48, tmp.47}
tmp.49 = tmp.48 + tmp.48 {tmp.49, glob_three, one.23, tmp.48, tmp.47}
Copy one.23 = tmp.48 {tmp.48, tmp.47, glob_three, one.23}
tmp.48 = glob_three - 2 {tmp.48, glob_three, tmp.47}
Copy should_spill.22 = tmp.47 {glob_three, tmp.47}
tmp.47 = glob_three + 3 {glob_three, tmp.47}
OLD ANNOT: set()
NEW ANNOT: {glob_three}
------------REMOVE DEAD STORE INSTRUCTIONS.-------------
Copy should_spill.22 = tmp.47 {glob_three, tmp.47} for node 0
Copy tmp.60 = tmp.48 {nine.31, tmp.50, five.27, tmp.51, ten.32, six.28, tmp.52, four.26, twelve.34, three.25, tmp.58, seven.29, tmp.56, two.24, tmp.55, tmp.57, eleven.33, tmp.59, tmp.47, tmp.49, glob_three, one.23, tmp.54, tmp.53, eight.30} for node 0
Copy tmp.61 = tmp.49 {nine.31, tmp.50, five.27, tmp.51, ten.32, six.28, tmp.52, four.26, twelve.34, three.25, tmp.58, seven.29, tmp.56, two.24, tmp.55, tmp.57, eleven.33, tmp.59, tmp.47, glob_three, one.23, tmp.54, tmp.53, eight.30} for node 0
Copy tmp.62 = tmp.50 {nine.31, five.27, tmp.51, ten.32, six.28, tmp.52, four.26, twelve.34, three.25, tmp.58, seven.29, tmp.56, two.24, tmp.55, tmp.57, eleven.33, tmp.59, tmp.47, glob_three, one.23, tmp.54, tmp.53, eight.30} for node 0
Copy tmp.63 = tmp.51 {nine.31, five.27, ten.32, six.28, tmp.52, four.26, twelve.34, three.25, tmp.58, seven.29, tmp.56, two.24, tmp.55, tmp.57, eleven.33, tmp.59, tmp.47, glob_three, one.23, tmp.54, tmp.53, eight.30} for node 0
Copy tmp.64 = tmp.52 {nine.31, five.27, ten.32, six.28, four.26, twelve.34, three.25, tmp.58, seven.29, tmp.56, two.24, tmp.55, tmp.57, eleven.33, tmp.59, tmp.47, glob_three, one.23, tmp.54, tmp.53, eight.30} for node 0
Copy tmp.65 = tmp.53 {nine.31, five.27, ten.32, six.28, four.26, twelve.34, three.25, tmp.58, seven.29, tmp.56, two.24, tmp.55, tmp.57, eleven.33, tmp.59, tmp.47, glob_three, one.23, tmp.54, eight.30} for node 0
Copy tmp.66 = tmp.54 {nine.31, five.27, ten.32, six.28, four.26, twelve.34, three.25, tmp.58, seven.29, tmp.56, two.24, tmp.55, tmp.57, eleven.33, tmp.59, tmp.47, glob_three, one.23, eight.30} for node 0
Copy tmp.67 = tmp.55 {nine.31, five.27, ten.32, six.28, four.26, twelve.34, three.25, tmp.58, seven.29, tmp.56, two.24, tmp.57, eleven.33, tmp.59, tmp.47, glob_three, one.23, eight.30} for node 0
Copy tmp.68 = tmp.56 {nine.31, five.27, ten.32, six.28, four.26, twelve.34, three.25, tmp.58, seven.29, two.24, tmp.57, eleven.33, tmp.59, tmp.47, glob_three, one.23, eight.30} for node 0
Copy tmp.69 = tmp.57 {nine.31, five.27, ten.32, six.28, four.26, twelve.34, three.25, tmp.58, seven.29, two.24, eleven.33, tmp.59, tmp.47, glob_three, one.23, eight.30} for node 0
Copy tmp.70 = tmp.58 {seven.29, nine.31, eight.30, five.27, one.23, two.24, eleven.33, tmp.59, ten.32, tmp.47, six.28, glob_three, four.26, twelve.34, three.25} for node 0
Copy tmp.71 = tmp.59 {seven.29, nine.31, eight.30, five.27, one.23, two.24, eleven.33, ten.32, tmp.47, six.28, glob_three, four.26, twelve.34, three.25} for node 0
Copy tmp.72 = 1 {seven.29, nine.31, eight.30, five.27, one.23, two.24, eleven.33, ten.32, tmp.47, six.28, glob_three, four.26, twelve.34, three.25} for node 0
Copy tmp.87 = tmp.74 {tmp.83, twenty_two.44, tmp.81, fifteen.37, eighteen.40, twenty_one.43, tmp.84, tmp.76, tmp.79, thirteen.35, tmp.78, sixteen.38, twenty.42, tmp.80, tmp.86, twenty_four.46, tmp.85, tmp.77, fourteen.36, twenty_three.45, tmp.75, glob_three, tmp.47, nineteen.41, seventeen.39} for node 0
Copy tmp.88 = tmp.75 {tmp.83, twenty_two.44, tmp.81, fifteen.37, eighteen.40, twenty_one.43, tmp.84, tmp.76, tmp.79, thirteen.35, tmp.78, sixteen.38, twenty.42, tmp.80, tmp.86, twenty_four.46, tmp.85, tmp.77, fourteen.36, twenty_three.45, glob_three, tmp.47, nineteen.41, seventeen.39} for node 0
Copy tmp.89 = tmp.76 {tmp.83, twenty_two.44, tmp.81, fifteen.37, eighteen.40, twenty_one.43, tmp.84, tmp.79, thirteen.35, tmp.78, sixteen.38, twenty.42, tmp.80, tmp.86, twenty_four.46, tmp.85, tmp.77, fourteen.36, twenty_three.45, glob_three, tmp.47, nineteen.41, seventeen.39} for node 0
Copy tmp.90 = tmp.77 {tmp.83, twenty_two.44, tmp.81, fifteen.37, eighteen.40, twenty_one.43, tmp.84, tmp.79, thirteen.35, tmp.78, sixteen.38, twenty.42, tmp.80, tmp.86, twenty_four.46, tmp.85, fourteen.36, twenty_three.45, glob_three, tmp.47, nineteen.41, seventeen.39} for node 0
Copy tmp.91 = tmp.78 {tmp.83, twenty_two.44, tmp.81, fifteen.37, eighteen.40, twenty_one.43, tmp.84, tmp.79, thirteen.35, sixteen.38, twenty.42, tmp.80, tmp.86, twenty_four.46, tmp.85, fourteen.36, twenty_three.45, glob_three, tmp.47, nineteen.41, seventeen.39} for node 0
Copy tmp.92 = tmp.79 {tmp.83, twenty_two.44, tmp.81, fifteen.37, eighteen.40, twenty_one.43, tmp.84, thirteen.35, sixteen.38, twenty.42, tmp.80, tmp.86, twenty_four.46, tmp.85, fourteen.36, twenty_three.45, glob_three, tmp.47, nineteen.41, seventeen.39} for node 0
Copy tmp.93 = tmp.80 {tmp.83, twenty_two.44, tmp.81, fifteen.37, eighteen.40, twenty_one.43, tmp.84, thirteen.35, sixteen.38, twenty.42, tmp.86, twenty_four.46, tmp.85, fourteen.36, twenty_three.45, glob_three, tmp.47, nineteen.41, seventeen.39} for node 0
Copy tmp.94 = tmp.81 {tmp.83, twenty_two.44, fifteen.37, eighteen.40, twenty_one.43, tmp.84, thirteen.35, sixteen.38, twenty.42, tmp.86, twenty_four.46, tmp.85, fourteen.36, twenty_three.45, glob_three, tmp.47, nineteen.41, seventeen.39} for node 0
Copy tmp.95 = tmp.83 {twenty_two.44, fifteen.37, eighteen.40, twenty_one.43, tmp.84, thirteen.35, sixteen.38, twenty.42, tmp.86, twenty_four.46, tmp.85, fourteen.36, twenty_three.45, glob_three, tmp.47, nineteen.41, seventeen.39} for node 0
Copy tmp.96 = tmp.84 {twenty_two.44, fifteen.37, eighteen.40, twenty_one.43, thirteen.35, sixteen.38, twenty.42, tmp.86, twenty_four.46, tmp.85, fourteen.36, twenty_three.45, glob_three, tmp.47, nineteen.41, seventeen.39} for node 0
Copy tmp.97 = tmp.85 {tmp.86, twenty_four.46, twenty_two.44, fifteen.37, eighteen.40, fourteen.36, twenty_one.43, twenty_three.45, thirteen.35, glob_three, tmp.47, nineteen.41, seventeen.39, sixteen.38, twenty.42} for node 0
Copy tmp.98 = tmp.86 {twenty_four.46, twenty_two.44, fifteen.37, eighteen.40, fourteen.36, twenty_one.43, twenty_three.45, thirteen.35, glob_three, tmp.47, nineteen.41, seventeen.39, sixteen.38, twenty.42} for node 0
Copy tmp.99 = 13 {twenty_four.46, twenty_two.44, fifteen.37, eighteen.40, fourteen.36, twenty_one.43, twenty_three.45, thirteen.35, glob_three, tmp.47, nineteen.41, seventeen.39, sixteen.38, twenty.42} for node 0
Copy tmp.102 = tmp.101 {tmp.101, glob_three} for node 0
------------AFTER DEAD STORE REMOVAL.-------------
ENTRY Entry: ENTRY {0}
0 0: [tmp.47 = glob_three + 3, tmp.48 = glob_three - 2, Copy one.23 = tmp.48, tmp.49 = tmp.48 + tmp.48, Copy two.24 = tmp.49, tmp.50 = 2 + tmp.48, Copy three.25 = tmp.50, tmp.51 = tmp.49 * tmp.49, Copy four.26 = tmp.51, tmp.52 = 6 - tmp.48, Copy five.27 = tmp.52, tmp.53 = tmp.49 * tmp.50, Copy six.28 = tmp.53, tmp.54 = tmp.48 + 6, Copy seven.29 = tmp.54, tmp.55 = tmp.49 * 4, Copy eight.30 = tmp.55, tmp.56 = tmp.50 * tmp.50, Copy nine.31 = tmp.56, tmp.57 = tmp.51 + tmp.53, Copy ten.32 = tmp.57, tmp.58 = 16 - tmp.52, Copy eleven.33 = tmp.58, tmp.59 = tmp.53 + tmp.53, Copy twelve.34 = tmp.59, tmp.73 = check_12_ints([one.23, two.24, three.25, four.26, five.27, six.28, seven.29, eight.30, nine.31, ten.32, eleven.33, twelve.34, 1]), tmp.74 = 10 + glob_three, Copy thirteen.35 = tmp.74, tmp.75 = tmp.74 + 1, Copy fourteen.36 = tmp.75, tmp.76 = 28 - tmp.74, Copy fifteen.37 = tmp.76, tmp.77 = tmp.75 + 2, Copy sixteen.38 = tmp.77, tmp.78 = 4 + tmp.74, Copy seventeen.39 = tmp.78, tmp.79 = 32 - tmp.75, Copy eighteen.40 = tmp.79, tmp.80 = 35 - tmp.77, Copy nineteen.41 = tmp.80, tmp.81 = tmp.76 + 5, Copy twenty.42 = tmp.81, tmp.82 = tmp.74 * 2, tmp.83 = tmp.82 - 5, Copy twenty_one.43 = tmp.83, tmp.84 = tmp.76 + 7, Copy twenty_two.44 = tmp.84, tmp.85 = 6 + tmp.78, Copy twenty_three.45 = tmp.85, tmp.86 = tmp.74 + 11, Copy twenty_four.46 = tmp.86, tmp.100 = check_12_ints([thirteen.35, fourteen.36, fifteen.37, sixteen.38, seventeen.39, eighteen.40, nineteen.41, twenty.42, twenty_one.43, twenty_two.44, twenty_three.45, twenty_four.46, 13]), tmp.101 = tmp.47 != 6, JumpIfZero(tmp.101, tmp.103)] Pred: {ENTRY} Suc: {1, 2} iMap: {tmp.47 = glob_three + 3: {glob_three, tmp.47}, Copy should_spill.22 = tmp.47: {glob_three, tmp.47}, tmp.48 = glob_three - 2: {tmp.48, glob_three, tmp.47}, Copy one.23 = tmp.48: {tmp.48, tmp.47, glob_three, one.23}, tmp.49 = tmp.48 + tmp.48: {tmp.49, glob_three, one.23, tmp.48, tmp.47}, Copy two.24 = tmp.49: {tmp.49, glob_three, one.23, two.24, tmp.48, tmp.47}, tmp.50 = 2 + tmp.48: {tmp.49, glob_three, one.23, tmp.50, two.24, tmp.48, tmp.47}, Copy three.25 = tmp.50: {tmp.50, two.24, tmp.47, tmp.49, glob_three, one.23, tmp.48, three.25}, tmp.51 = tmp.49 * tmp.49: {tmp.50, two.24, tmp.51, tmp.47, tmp.49, glob_three, one.23, tmp.48, three.25}, Copy four.26 = tmp.51: {tmp.50, one.23, two.24, tmp.51, tmp.47, tmp.49, glob_three, four.26, tmp.48, three.25}, tmp.52 = 6 - tmp.48: {tmp.50, one.23, two.24, tmp.51, tmp.47, tmp.49, tmp.52, glob_three, four.26, tmp.48, three.25}, Copy five.27 = tmp.52: {tmp.50, five.27, one.23, tmp.51, two.24, tmp.47, tmp.49, tmp.52, glob_three, four.26, tmp.48, three.25}, tmp.53 = tmp.49 * tmp.50: {tmp.50, five.27, one.23, tmp.51, two.24, tmp.47, tmp.49, tmp.52, glob_three, four.26, tmp.48, tmp.53, three.25}, Copy six.28 = tmp.53: {tmp.50, five.27, one.23, tmp.51, two.24, tmp.47, tmp.49, tmp.52, glob_three, four.26, six.28, tmp.48, tmp.53, three.25}, tmp.54 = tmp.48 + 6: {tmp.50, five.27, one.23, tmp.51, two.24, tmp.47, tmp.49, tmp.52, glob_three, four.26, six.28, tmp.54, tmp.48, tmp.53, three.25}, Copy seven.29 = tmp.54: {tmp.50, five.27, tmp.51, six.28, tmp.52, four.26, tmp.48, three.25, seven.29, two.24, tmp.47, tmp.49, glob_three, one.23, tmp.54, tmp.53}, tmp.55 = tmp.49 * 4: {tmp.50, five.27, tmp.51, six.28, tmp.52, four.26, tmp.48, three.25, seven.29, two.24, tmp.55, tmp.47, tmp.49, glob_three, one.23, tmp.54, tmp.53}, Copy eight.30 = tmp.55: {tmp.50, five.27, tmp.51, six.28, tmp.52, four.26, tmp.48, three.25, seven.29, two.24, tmp.55, tmp.47, tmp.49, glob_three, one.23, tmp.54, tmp.53, eight.30}, tmp.56 = tmp.50 * tmp.50: {tmp.50, five.27, tmp.51, six.28, tmp.52, four.26, tmp.48, three.25, seven.29, tmp.56, two.24, tmp.55, tmp.47, tmp.49, glob_three, one.23, tmp.54, tmp.53, eight.30}, Copy nine.31 = tmp.56: {nine.31, tmp.50, five.27, tmp.51, six.28, tmp.52, four.26, tmp.48, three.25, seven.29, tmp.56, two.24, tmp.55, tmp.47, tmp.49, glob_three, one.23, tmp.54, tmp.53, eight.30}, tmp.57 = tmp.51 + tmp.53: {nine.31, tmp.50, five.27, tmp.51, six.28, tmp.52, four.26, tmp.48, three.25, seven.29, tmp.56, two.24, tmp.55, tmp.57, tmp.47, tmp.49, glob_three, one.23, tmp.54, tmp.53, eight.30}, Copy ten.32 = tmp.57: {nine.31, tmp.50, five.27, tmp.51, ten.32, six.28, tmp.52, four.26, tmp.48, three.25, seven.29, tmp.56, two.24, tmp.55, tmp.57, tmp.47, tmp.49, glob_three, one.23, tmp.54, tmp.53, eight.30}, tmp.58 = 16 - tmp.52: {nine.31, tmp.50, five.27, tmp.51, ten.32, six.28, tmp.52, four.26, tmp.48, three.25, tmp.58, seven.29, tmp.56, two.24, tmp.55, tmp.57, tmp.47, tmp.49, glob_three, one.23, tmp.54, tmp.53, eight.30}, Copy eleven.33 = tmp.58: {nine.31, tmp.50, five.27, tmp.51, ten.32, six.28, tmp.52, four.26, tmp.48, three.25, tmp.58, seven.29, tmp.56, two.24, tmp.55, tmp.57, eleven.33, tmp.47, tmp.49, glob_three, one.23, tmp.54, tmp.53, eight.30}, tmp.59 = tmp.53 + tmp.53: {nine.31, tmp.50, five.27, tmp.51, ten.32, six.28, tmp.52, four.26, tmp.48, three.25, tmp.58, seven.29, tmp.56, two.24, tmp.55, tmp.57, eleven.33, tmp.59, tmp.47, tmp.49, glob_three, one.23, tmp.54, tmp.53, eight.30}, Copy twelve.34 = tmp.59: {nine.31, tmp.50, five.27, tmp.51, ten.32, six.28, tmp.52, four.26, twelve.34, tmp.48, three.25, tmp.58, seven.29, tmp.56, two.24, tmp.55, tmp.57, eleven.33, tmp.59, tmp.47, tmp.49, glob_three, one.23, tmp.54, tmp.53, eight.30}, Copy tmp.60 = tmp.48: {nine.31, tmp.50, five.27, tmp.51, ten.32, six.28, tmp.52, four.26, twelve.34, three.25, tmp.58, seven.29, tmp.56, two.24, tmp.55, tmp.57, eleven.33, tmp.59, tmp.47, tmp.49, glob_three, one.23, tmp.54, tmp.53, eight.30}, Copy tmp.61 = tmp.49: {nine.31, tmp.50, five.27, tmp.51, ten.32, six.28, tmp.52, four.26, twelve.34, three.25, tmp.58, seven.29, tmp.56, two.24, tmp.55, tmp.57, eleven.33, tmp.59, tmp.47, glob_three, one.23, tmp.54, tmp.53, eight.30}, Copy tmp.62 = tmp.50: {nine.31, five.27, tmp.51, ten.32, six.28, tmp.52, four.26, twelve.34, three.25, tmp.58, seven.29, tmp.56, two.24, tmp.55, tmp.57, eleven.33, tmp.59, tmp.47, glob_three, one.23, tmp.54, tmp.53, eight.30}, Copy tmp.63 = tmp.51: {nine.31, five.27, ten.32, six.28, tmp.52, four.26, twelve.34, three.25, tmp.58, seven.29, tmp.56, two.24, tmp.55, tmp.57, eleven.33, tmp.59, tmp.47, glob_three, one.23, tmp.54, tmp.53, eight.30}, Copy tmp.64 = tmp.52: {nine.31, five.27, ten.32, six.28, four.26, twelve.34, three.25, tmp.58, seven.29, tmp.56, two.24, tmp.55, tmp.57, eleven.33, tmp.59, tmp.47, glob_three, one.23, tmp.54, tmp.53, eight.30}, Copy tmp.65 = tmp.53: {nine.31, five.27, ten.32, six.28, four.26, twelve.34, three.25, tmp.58, seven.29, tmp.56, two.24, tmp.55, tmp.57, eleven.33, tmp.59, tmp.47, glob_three, one.23, tmp.54, eight.30}, Copy tmp.66 = tmp.54: {nine.31, five.27, ten.32, six.28, four.26, twelve.34, three.25, tmp.58, seven.29, tmp.56, two.24, tmp.55, tmp.57, eleven.33, tmp.59, tmp.47, glob_three, one.23, eight.30}, Copy tmp.67 = tmp.55: {nine.31, five.27, ten.32, six.28, four.26, twelve.34, three.25, tmp.58, seven.29, tmp.56, two.24, tmp.57, eleven.33, tmp.59, tmp.47, glob_three, one.23, eight.30}, Copy tmp.68 = tmp.56: {nine.31, five.27, ten.32, six.28, four.26, twelve.34, three.25, tmp.58, seven.29, two.24, tmp.57, eleven.33, tmp.59, tmp.47, glob_three, one.23, eight.30}, Copy tmp.69 = tmp.57: {nine.31, five.27, ten.32, six.28, four.26, twelve.34, three.25, tmp.58, seven.29, two.24, eleven.33, tmp.59, tmp.47, glob_three, one.23, eight.30}, Copy tmp.70 = tmp.58: {seven.29, nine.31, eight.30, five.27, one.23, two.24, eleven.33, tmp.59, ten.32, tmp.47, six.28, glob_three, four.26, twelve.34, three.25}, Copy tmp.71 = tmp.59: {seven.29, nine.31, eight.30, five.27, one.23, two.24, eleven.33, ten.32, tmp.47, six.28, glob_three, four.26, twelve.34, three.25}, Copy tmp.72 = 1: {seven.29, nine.31, eight.30, five.27, one.23, two.24, eleven.33, ten.32, tmp.47, six.28, glob_three, four.26, twelve.34, three.25}, tmp.73 = check_12_ints([one.23, two.24, three.25, four.26, five.27, six.28, seven.29, eight.30, nine.31, ten.32, eleven.33, twelve.34, 1]): {glob_three, tmp.47}, tmp.74 = 10 + glob_three: {tmp.74, glob_three, tmp.47}, Copy thirteen.35 = tmp.74: {glob_three, thirteen.35, tmp.74, tmp.47}, tmp.75 = tmp.74 + 1: {thirteen.35, glob_three, tmp.75, tmp.74, tmp.47}, Copy fourteen.36 = tmp.75: {thirteen.35, glob_three, tmp.75, tmp.74, fourteen.36, tmp.47}, tmp.76 = 28 - tmp.74: {tmp.76, thirteen.35, glob_three, tmp.75, tmp.74, fourteen.36, tmp.47}, Copy fifteen.37 = tmp.76: {fifteen.37, fourteen.36, tmp.47, tmp.76, thirteen.35, glob_three, tmp.75, tmp.74}, tmp.77 = tmp.75 + 2: {fifteen.37, tmp.77, fourteen.36, tmp.47, tmp.76, thirteen.35, glob_three, tmp.75, tmp.74}, Copy sixteen.38 = tmp.77: {fifteen.37, tmp.77, fourteen.36, tmp.47, tmp.76, thirteen.35, glob_three, tmp.75, tmp.74, sixteen.38}, tmp.78 = 4 + tmp.74: {fifteen.37, tmp.77, fourteen.36, tmp.47, tmp.76, thirteen.35, glob_three, tmp.78, tmp.75, tmp.74, sixteen.38}, Copy seventeen.39 = tmp.78: {seventeen.39, fifteen.37, tmp.77, fourteen.36, tmp.47, tmp.76, thirteen.35, glob_three, tmp.78, tmp.75, tmp.74, sixteen.38}, tmp.79 = 32 - tmp.75: {seventeen.39, fifteen.37, tmp.77, fourteen.36, tmp.47, tmp.79, tmp.76, thirteen.35, glob_three, tmp.78, tmp.75, tmp.74, sixteen.38}, Copy eighteen.40 = tmp.79: {seventeen.39, fifteen.37, tmp.77, fourteen.36, eighteen.40, tmp.47, tmp.79, tmp.76, thirteen.35, glob_three, tmp.78, tmp.75, tmp.74, sixteen.38}, tmp.80 = 35 - tmp.77: {seventeen.39, fifteen.37, tmp.77, fourteen.36, eighteen.40, tmp.80, tmp.79, tmp.76, tmp.47, thirteen.35, glob_three, tmp.78, tmp.75, tmp.74, sixteen.38}, Copy nineteen.41 = tmp.80: {fifteen.37, eighteen.40, tmp.79, tmp.76, thirteen.35, tmp.78, tmp.74, sixteen.38, tmp.80, tmp.77, fourteen.36, tmp.75, glob_three, tmp.47, nineteen.41, seventeen.39}, tmp.81 = tmp.76 + 5: {tmp.81, fifteen.37, eighteen.40, tmp.79, tmp.76, thirteen.35, tmp.78, tmp.74, sixteen.38, tmp.80, tmp.77, fourteen.36, tmp.75, glob_three, tmp.47, nineteen.41, seventeen.39}, Copy twenty.42 = tmp.81: {tmp.81, fifteen.37, eighteen.40, tmp.79, tmp.76, thirteen.35, tmp.78, tmp.74, sixteen.38, twenty.42, tmp.80, tmp.77, fourteen.36, tmp.75, glob_three, tmp.47, nineteen.41, seventeen.39}, tmp.82 = tmp.74 * 2: {tmp.81, fifteen.37, eighteen.40, tmp.79, tmp.76, thirteen.35, tmp.78, tmp.74, sixteen.38, twenty.42, tmp.80, tmp.77, fourteen.36, tmp.82, tmp.75, glob_three, tmp.47, nineteen.41, seventeen.39}, tmp.83 = tmp.82 - 5: {tmp.83, tmp.81, fifteen.37, eighteen.40, tmp.79, tmp.76, thirteen.35, tmp.78, tmp.74, sixteen.38, twenty.42, tmp.80, tmp.77, fourteen.36, tmp.75, glob_three, tmp.47, nineteen.41, seventeen.39}, Copy twenty_one.43 = tmp.83: {tmp.83, tmp.81, fifteen.37, eighteen.40, twenty_one.43, tmp.79, tmp.76, thirteen.35, tmp.78, tmp.74, sixteen.38, twenty.42, tmp.80, tmp.77, fourteen.36, tmp.75, glob_three, tmp.47, nineteen.41, seventeen.39}, tmp.84 = tmp.76 + 7: {tmp.83, tmp.81, fifteen.37, eighteen.40, twenty_one.43, tmp.84, tmp.76, tmp.79, thirteen.35, tmp.78, tmp.74, sixteen.38, twenty.42, tmp.80, tmp.77, fourteen.36, tmp.75, glob_three, tmp.47, nineteen.41, seventeen.39}, Copy twenty_two.44 = tmp.84: {tmp.83, twenty_two.44, tmp.81, fifteen.37, eighteen.40, twenty_one.43, tmp.84, tmp.76, tmp.79, thirteen.35, tmp.78, tmp.74, sixteen.38, twenty.42, tmp.80, tmp.77, fourteen.36, tmp.75, glob_three, tmp.47, nineteen.41, seventeen.39}, tmp.85 = 6 + tmp.78: {tmp.83, twenty_two.44, tmp.81, fifteen.37, eighteen.40, twenty_one.43, tmp.84, tmp.76, tmp.79, thirteen.35, tmp.78, tmp.74, sixteen.38, twenty.42, tmp.80, tmp.85, tmp.77, fourteen.36, tmp.75, glob_three, tmp.47, nineteen.41, seventeen.39}, Copy twenty_three.45 = tmp.85: {tmp.83, twenty_two.44, tmp.81, fifteen.37, eighteen.40, twenty_one.43, tmp.84, tmp.76, tmp.79, thirteen.35, tmp.78, tmp.74, sixteen.38, twenty.42, tmp.80, tmp.85, tmp.77, fourteen.36, twenty_three.45, tmp.75, glob_three, tmp.47, nineteen.41, seventeen.39}, tmp.86 = tmp.74 + 11: {tmp.83, twenty_two.44, tmp.81, fifteen.37, eighteen.40, twenty_one.43, tmp.84, tmp.76, tmp.79, thirteen.35, tmp.78, tmp.74, sixteen.38, twenty.42, tmp.80, tmp.86, tmp.85, tmp.77, fourteen.36, twenty_three.45, tmp.75, glob_three, tmp.47, nineteen.41, seventeen.39}, Copy twenty_four.46 = tmp.86: {tmp.83, twenty_two.44, tmp.81, fifteen.37, eighteen.40, twenty_one.43, tmp.84, tmp.76, tmp.79, thirteen.35, tmp.78, tmp.74, sixteen.38, twenty.42, tmp.80, tmp.86, twenty_four.46, tmp.85, tmp.77, fourteen.36, twenty_three.45, tmp.75, glob_three, tmp.47, nineteen.41, seventeen.39}, Copy tmp.87 = tmp.74: {tmp.83, twenty_two.44, tmp.81, fifteen.37, eighteen.40, twenty_one.43, tmp.84, tmp.76, tmp.79, thirteen.35, tmp.78, sixteen.38, twenty.42, tmp.80, tmp.86, twenty_four.46, tmp.85, tmp.77, fourteen.36, twenty_three.45, tmp.75, glob_three, tmp.47, nineteen.41, seventeen.39}, Copy tmp.88 = tmp.75: {tmp.83, twenty_two.44, tmp.81, fifteen.37, eighteen.40, twenty_one.43, tmp.84, tmp.76, tmp.79, thirteen.35, tmp.78, sixteen.38, twenty.42, tmp.80, tmp.86, twenty_four.46, tmp.85, tmp.77, fourteen.36, twenty_three.45, glob_three, tmp.47, nineteen.41, seventeen.39}, Copy tmp.89 = tmp.76: {tmp.83, twenty_two.44, tmp.81, fifteen.37, eighteen.40, twenty_one.43, tmp.84, tmp.79, thirteen.35, tmp.78, sixteen.38, twenty.42, tmp.80, tmp.86, twenty_four.46, tmp.85, tmp.77, fourteen.36, twenty_three.45, glob_three, tmp.47, nineteen.41, seventeen.39}, Copy tmp.90 = tmp.77: {tmp.83, twenty_two.44, tmp.81, fifteen.37, eighteen.40, twenty_one.43, tmp.84, tmp.79, thirteen.35, tmp.78, sixteen.38, twenty.42, tmp.80, tmp.86, twenty_four.46, tmp.85, fourteen.36, twenty_three.45, glob_three, tmp.47, nineteen.41, seventeen.39}, Copy tmp.91 = tmp.78: {tmp.83, twenty_two.44, tmp.81, fifteen.37, eighteen.40, twenty_one.43, tmp.84, tmp.79, thirteen.35, sixteen.38, twenty.42, tmp.80, tmp.86, twenty_four.46, tmp.85, fourteen.36, twenty_three.45, glob_three, tmp.47, nineteen.41, seventeen.39}, Copy tmp.92 = tmp.79: {tmp.83, twenty_two.44, tmp.81, fifteen.37, eighteen.40, twenty_one.43, tmp.84, thirteen.35, sixteen.38, twenty.42, tmp.80, tmp.86, twenty_four.46, tmp.85, fourteen.36, twenty_three.45, glob_three, tmp.47, nineteen.41, seventeen.39}, Copy tmp.93 = tmp.80: {tmp.83, twenty_two.44, tmp.81, fifteen.37, eighteen.40, twenty_one.43, tmp.84, thirteen.35, sixteen.38, twenty.42, tmp.86, twenty_four.46, tmp.85, fourteen.36, twenty_three.45, glob_three, tmp.47, nineteen.41, seventeen.39}, Copy tmp.94 = tmp.81: {tmp.83, twenty_two.44, fifteen.37, eighteen.40, twenty_one.43, tmp.84, thirteen.35, sixteen.38, twenty.42, tmp.86, twenty_four.46, tmp.85, fourteen.36, twenty_three.45, glob_three, tmp.47, nineteen.41, seventeen.39}, Copy tmp.95 = tmp.83: {twenty_two.44, fifteen.37, eighteen.40, twenty_one.43, tmp.84, thirteen.35, sixteen.38, twenty.42, tmp.86, twenty_four.46, tmp.85, fourteen.36, twenty_three.45, glob_three, tmp.47, nineteen.41, seventeen.39}, Copy tmp.96 = tmp.84: {twenty_two.44, fifteen.37, eighteen.40, twenty_one.43, thirteen.35, sixteen.38, twenty.42, tmp.86, twenty_four.46, tmp.85, fourteen.36, twenty_three.45, glob_three, tmp.47, nineteen.41, seventeen.39}, Copy tmp.97 = tmp.85: {tmp.86, twenty_four.46, twenty_two.44, fifteen.37, eighteen.40, fourteen.36, twenty_one.43, twenty_three.45, thirteen.35, glob_three, tmp.47, nineteen.41, seventeen.39, sixteen.38, twenty.42}, Copy tmp.98 = tmp.86: {twenty_four.46, twenty_two.44, fifteen.37, eighteen.40, fourteen.36, twenty_one.43, twenty_three.45, thirteen.35, glob_three, tmp.47, nineteen.41, seventeen.39, sixteen.38, twenty.42}, Copy tmp.99 = 13: {twenty_four.46, twenty_two.44, fifteen.37, eighteen.40, fourteen.36, twenty_one.43, twenty_three.45, thirteen.35, glob_three, tmp.47, nineteen.41, seventeen.39, sixteen.38, twenty.42}, tmp.100 = check_12_ints([thirteen.35, fourteen.36, fifteen.37, sixteen.38, seventeen.39, eighteen.40, nineteen.41, twenty.42, twenty_one.43, twenty_two.44, twenty_three.45, twenty_four.46, 13]): {glob_three, tmp.47}, tmp.101 = tmp.47 != 6: {tmp.101, glob_three}, Copy tmp.102 = tmp.101: {tmp.101, glob_three}, JumpIfZero(tmp.101, tmp.103): {glob_three}} ReachingCopies: {glob_three}
1 1: [tmp.104 = -1, Return tmp.104] Pred: {0} Suc: {EXIT} iMap: {tmp.104 = -1: {tmp.104, glob_three}, Return tmp.104: {glob_three}} ReachingCopies: {glob_three}
2 2: [Label(tmp.103), Return 0] Pred: {0} Suc: {EXIT} iMap: {Label(tmp.103): {glob_three}, Return 0: {glob_three}} ReachingCopies: {glob_three}
EXIT Exit: EXIT {1, 2}
--------------ADDRESS TAKEN ANALYSIS.------------------
{glob_three}
-------------CONSTANT FOLDING PASS.--------------------
OLD LIST [tmp.47 = glob_three + 3, tmp.48 = glob_three - 2, Copy one.23 = tmp.48, tmp.49 = tmp.48 + tmp.48, Copy two.24 = tmp.49, tmp.50 = 2 + tmp.48, Copy three.25 = tmp.50, tmp.51 = tmp.49 * tmp.49, Copy four.26 = tmp.51, tmp.52 = 6 - tmp.48, Copy five.27 = tmp.52, tmp.53 = tmp.49 * tmp.50, Copy six.28 = tmp.53, tmp.54 = tmp.48 + 6, Copy seven.29 = tmp.54, tmp.55 = tmp.49 * 4, Copy eight.30 = tmp.55, tmp.56 = tmp.50 * tmp.50, Copy nine.31 = tmp.56, tmp.57 = tmp.51 + tmp.53, Copy ten.32 = tmp.57, tmp.58 = 16 - tmp.52, Copy eleven.33 = tmp.58, tmp.59 = tmp.53 + tmp.53, Copy twelve.34 = tmp.59, tmp.73 = check_12_ints([one.23, two.24, three.25, four.26, five.27, six.28, seven.29, eight.30, nine.31, ten.32, eleven.33, twelve.34, 1]), tmp.74 = 10 + glob_three, Copy thirteen.35 = tmp.74, tmp.75 = tmp.74 + 1, Copy fourteen.36 = tmp.75, tmp.76 = 28 - tmp.74, Copy fifteen.37 = tmp.76, tmp.77 = tmp.75 + 2, Copy sixteen.38 = tmp.77, tmp.78 = 4 + tmp.74, Copy seventeen.39 = tmp.78, tmp.79 = 32 - tmp.75, Copy eighteen.40 = tmp.79, tmp.80 = 35 - tmp.77, Copy nineteen.41 = tmp.80, tmp.81 = tmp.76 + 5, Copy twenty.42 = tmp.81, tmp.82 = tmp.74 * 2, tmp.83 = tmp.82 - 5, Copy twenty_one.43 = tmp.83, tmp.84 = tmp.76 + 7, Copy twenty_two.44 = tmp.84, tmp.85 = 6 + tmp.78, Copy twenty_three.45 = tmp.85, tmp.86 = tmp.74 + 11, Copy twenty_four.46 = tmp.86, tmp.100 = check_12_ints([thirteen.35, fourteen.36, fifteen.37, sixteen.38, seventeen.39, eighteen.40, nineteen.41, twenty.42, twenty_one.43, twenty_two.44, twenty_three.45, twenty_four.46, 13]), tmp.101 = tmp.47 != 6, JumpIfZero(tmp.101, tmp.103), tmp.104 = -1, Return tmp.104, Label(tmp.103), Return 0]
NEW LIST [tmp.47 = glob_three + 3, tmp.48 = glob_three - 2, Copy one.23 = tmp.48, tmp.49 = tmp.48 + tmp.48, Copy two.24 = tmp.49, tmp.50 = 2 + tmp.48, Copy three.25 = tmp.50, tmp.51 = tmp.49 * tmp.49, Copy four.26 = tmp.51, tmp.52 = 6 - tmp.48, Copy five.27 = tmp.52, tmp.53 = tmp.49 * tmp.50, Copy six.28 = tmp.53, tmp.54 = tmp.48 + 6, Copy seven.29 = tmp.54, tmp.55 = tmp.49 * 4, Copy eight.30 = tmp.55, tmp.56 = tmp.50 * tmp.50, Copy nine.31 = tmp.56, tmp.57 = tmp.51 + tmp.53, Copy ten.32 = tmp.57, tmp.58 = 16 - tmp.52, Copy eleven.33 = tmp.58, tmp.59 = tmp.53 + tmp.53, Copy twelve.34 = tmp.59, tmp.73 = check_12_ints([one.23, two.24, three.25, four.26, five.27, six.28, seven.29, eight.30, nine.31, ten.32, eleven.33, twelve.34, 1]), tmp.74 = 10 + glob_three, Copy thirteen.35 = tmp.74, tmp.75 = tmp.74 + 1, Copy fourteen.36 = tmp.75, tmp.76 = 28 - tmp.74, Copy fifteen.37 = tmp.76, tmp.77 = tmp.75 + 2, Copy sixteen.38 = tmp.77, tmp.78 = 4 + tmp.74, Copy seventeen.39 = tmp.78, tmp.79 = 32 - tmp.75, Copy eighteen.40 = tmp.79, tmp.80 = 35 - tmp.77, Copy nineteen.41 = tmp.80, tmp.81 = tmp.76 + 5, Copy twenty.42 = tmp.81, tmp.82 = tmp.74 * 2, tmp.83 = tmp.82 - 5, Copy twenty_one.43 = tmp.83, tmp.84 = tmp.76 + 7, Copy twenty_two.44 = tmp.84, tmp.85 = 6 + tmp.78, Copy twenty_three.45 = tmp.85, tmp.86 = tmp.74 + 11, Copy twenty_four.46 = tmp.86, tmp.100 = check_12_ints([thirteen.35, fourteen.36, fifteen.37, sixteen.38, seventeen.39, eighteen.40, nineteen.41, twenty.42, twenty_one.43, twenty_two.44, twenty_three.45, twenty_four.46, 13]), tmp.101 = tmp.47 != 6, JumpIfZero(tmp.101, tmp.103), tmp.104 = -1, Return tmp.104, Label(tmp.103), Return 0]
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_FunCallInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_CopyInstruction'>
<class 'tacGenerator.TAC_FunCallInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_JumpIfZeroInst'>
<class 'tacGenerator.TAC_UnaryInstruction'>
<class 'tacGenerator.TAC_returnInstruction'>
<class 'tacGenerator.TAC_LabelInst'>
<class 'tacGenerator.TAC_returnInstruction'>
tmp.47 = glob_three + 3
tmp.104 = -1
Label(tmp.103)





ENTRY Entry: ENTRY {0}
0 0: [tmp.47 = glob_three + 3, tmp.48 = glob_three - 2, Copy one.23 = tmp.48, tmp.49 = tmp.48 + tmp.48, Copy two.24 = tmp.49, tmp.50 = 2 + tmp.48, Copy three.25 = tmp.50, tmp.51 = tmp.49 * tmp.49, Copy four.26 = tmp.51, tmp.52 = 6 - tmp.48, Copy five.27 = tmp.52, tmp.53 = tmp.49 * tmp.50, Copy six.28 = tmp.53, tmp.54 = tmp.48 + 6, Copy seven.29 = tmp.54, tmp.55 = tmp.49 * 4, Copy eight.30 = tmp.55, tmp.56 = tmp.50 * tmp.50, Copy nine.31 = tmp.56, tmp.57 = tmp.51 + tmp.53, Copy ten.32 = tmp.57, tmp.58 = 16 - tmp.52, Copy eleven.33 = tmp.58, tmp.59 = tmp.53 + tmp.53, Copy twelve.34 = tmp.59, tmp.73 = check_12_ints([one.23, two.24, three.25, four.26, five.27, six.28, seven.29, eight.30, nine.31, ten.32, eleven.33, twelve.34, 1]), tmp.74 = 10 + glob_three, Copy thirteen.35 = tmp.74, tmp.75 = tmp.74 + 1, Copy fourteen.36 = tmp.75, tmp.76 = 28 - tmp.74, Copy fifteen.37 = tmp.76, tmp.77 = tmp.75 + 2, Copy sixteen.38 = tmp.77, tmp.78 = 4 + tmp.74, Copy seventeen.39 = tmp.78, tmp.79 = 32 - tmp.75, Copy eighteen.40 = tmp.79, tmp.80 = 35 - tmp.77, Copy nineteen.41 = tmp.80, tmp.81 = tmp.76 + 5, Copy twenty.42 = tmp.81, tmp.82 = tmp.74 * 2, tmp.83 = tmp.82 - 5, Copy twenty_one.43 = tmp.83, tmp.84 = tmp.76 + 7, Copy twenty_two.44 = tmp.84, tmp.85 = 6 + tmp.78, Copy twenty_three.45 = tmp.85, tmp.86 = tmp.74 + 11, Copy twenty_four.46 = tmp.86, tmp.100 = check_12_ints([thirteen.35, fourteen.36, fifteen.37, sixteen.38, seventeen.39, eighteen.40, nineteen.41, twenty.42, twenty_one.43, twenty_two.44, twenty_three.45, twenty_four.46, 13]), tmp.101 = tmp.47 != 6, JumpIfZero(tmp.101, tmp.103)] Pred: {ENTRY} Suc: {1, 2} iMap: {tmp.47 = glob_three + 3: set(), tmp.48 = glob_three - 2: set(), Copy one.23 = tmp.48: set(), tmp.49 = tmp.48 + tmp.48: set(), Copy two.24 = tmp.49: set(), tmp.50 = 2 + tmp.48: set(), Copy three.25 = tmp.50: set(), tmp.51 = tmp.49 * tmp.49: set(), Copy four.26 = tmp.51: set(), tmp.52 = 6 - tmp.48: set(), Copy five.27 = tmp.52: set(), tmp.53 = tmp.49 * tmp.50: set(), Copy six.28 = tmp.53: set(), tmp.54 = tmp.48 + 6: set(), Copy seven.29 = tmp.54: set(), tmp.55 = tmp.49 * 4: set(), Copy eight.30 = tmp.55: set(), tmp.56 = tmp.50 * tmp.50: set(), Copy nine.31 = tmp.56: set(), tmp.57 = tmp.51 + tmp.53: set(), Copy ten.32 = tmp.57: set(), tmp.58 = 16 - tmp.52: set(), Copy eleven.33 = tmp.58: set(), tmp.59 = tmp.53 + tmp.53: set(), Copy twelve.34 = tmp.59: set(), tmp.73 = check_12_ints([one.23, two.24, three.25, four.26, five.27, six.28, seven.29, eight.30, nine.31, ten.32, eleven.33, twelve.34, 1]): set(), tmp.74 = 10 + glob_three: set(), Copy thirteen.35 = tmp.74: set(), tmp.75 = tmp.74 + 1: set(), Copy fourteen.36 = tmp.75: set(), tmp.76 = 28 - tmp.74: set(), Copy fifteen.37 = tmp.76: set(), tmp.77 = tmp.75 + 2: set(), Copy sixteen.38 = tmp.77: set(), tmp.78 = 4 + tmp.74: set(), Copy seventeen.39 = tmp.78: set(), tmp.79 = 32 - tmp.75: set(), Copy eighteen.40 = tmp.79: set(), tmp.80 = 35 - tmp.77: set(), Copy nineteen.41 = tmp.80: set(), tmp.81 = tmp.76 + 5: set(), Copy twenty.42 = tmp.81: set(), tmp.82 = tmp.74 * 2: set(), tmp.83 = tmp.82 - 5: set(), Copy twenty_one.43 = tmp.83: set(), tmp.84 = tmp.76 + 7: set(), Copy twenty_two.44 = tmp.84: set(), tmp.85 = 6 + tmp.78: set(), Copy twenty_three.45 = tmp.85: set(), tmp.86 = tmp.74 + 11: set(), Copy twenty_four.46 = tmp.86: set(), tmp.100 = check_12_ints([thirteen.35, fourteen.36, fifteen.37, sixteen.38, seventeen.39, eighteen.40, nineteen.41, twenty.42, twenty_one.43, twenty_two.44, twenty_three.45, twenty_four.46, 13]): set(), tmp.101 = tmp.47 != 6: set(), JumpIfZero(tmp.101, tmp.103): set()} ReachingCopies: set()
1 1: [tmp.104 = -1, Return tmp.104] Pred: {0} Suc: {EXIT} iMap: {tmp.104 = -1: set(), Return tmp.104: set()} ReachingCopies: set()
2 2: [Label(tmp.103), Return 0] Pred: {0} Suc: {EXIT} iMap: {Label(tmp.103): set(), Return 0: set()} ReachingCopies: set()
EXIT Exit: EXIT {1, 2}
ENTRY Entry: ENTRY {0}
0 0: [tmp.47 = glob_three + 3, tmp.48 = glob_three - 2, Copy one.23 = tmp.48, tmp.49 = tmp.48 + tmp.48, Copy two.24 = tmp.49, tmp.50 = 2 + tmp.48, Copy three.25 = tmp.50, tmp.51 = tmp.49 * tmp.49, Copy four.26 = tmp.51, tmp.52 = 6 - tmp.48, Copy five.27 = tmp.52, tmp.53 = tmp.49 * tmp.50, Copy six.28 = tmp.53, tmp.54 = tmp.48 + 6, Copy seven.29 = tmp.54, tmp.55 = tmp.49 * 4, Copy eight.30 = tmp.55, tmp.56 = tmp.50 * tmp.50, Copy nine.31 = tmp.56, tmp.57 = tmp.51 + tmp.53, Copy ten.32 = tmp.57, tmp.58 = 16 - tmp.52, Copy eleven.33 = tmp.58, tmp.59 = tmp.53 + tmp.53, Copy twelve.34 = tmp.59, tmp.73 = check_12_ints([one.23, two.24, three.25, four.26, five.27, six.28, seven.29, eight.30, nine.31, ten.32, eleven.33, twelve.34, 1]), tmp.74 = 10 + glob_three, Copy thirteen.35 = tmp.74, tmp.75 = tmp.74 + 1, Copy fourteen.36 = tmp.75, tmp.76 = 28 - tmp.74, Copy fifteen.37 = tmp.76, tmp.77 = tmp.75 + 2, Copy sixteen.38 = tmp.77, tmp.78 = 4 + tmp.74, Copy seventeen.39 = tmp.78, tmp.79 = 32 - tmp.75, Copy eighteen.40 = tmp.79, tmp.80 = 35 - tmp.77, Copy nineteen.41 = tmp.80, tmp.81 = tmp.76 + 5, Copy twenty.42 = tmp.81, tmp.82 = tmp.74 * 2, tmp.83 = tmp.82 - 5, Copy twenty_one.43 = tmp.83, tmp.84 = tmp.76 + 7, Copy twenty_two.44 = tmp.84, tmp.85 = 6 + tmp.78, Copy twenty_three.45 = tmp.85, tmp.86 = tmp.74 + 11, Copy twenty_four.46 = tmp.86, tmp.100 = check_12_ints([thirteen.35, fourteen.36, fifteen.37, sixteen.38, seventeen.39, eighteen.40, nineteen.41, twenty.42, twenty_one.43, twenty_two.44, twenty_three.45, twenty_four.46, 13]), tmp.101 = tmp.47 != 6, JumpIfZero(tmp.101, tmp.103)] Pred: {ENTRY} Suc: {1, 2} iMap: {tmp.47 = glob_three + 3: set(), tmp.48 = glob_three - 2: set(), Copy one.23 = tmp.48: set(), tmp.49 = tmp.48 + tmp.48: set(), Copy two.24 = tmp.49: set(), tmp.50 = 2 + tmp.48: set(), Copy three.25 = tmp.50: set(), tmp.51 = tmp.49 * tmp.49: set(), Copy four.26 = tmp.51: set(), tmp.52 = 6 - tmp.48: set(), Copy five.27 = tmp.52: set(), tmp.53 = tmp.49 * tmp.50: set(), Copy six.28 = tmp.53: set(), tmp.54 = tmp.48 + 6: set(), Copy seven.29 = tmp.54: set(), tmp.55 = tmp.49 * 4: set(), Copy eight.30 = tmp.55: set(), tmp.56 = tmp.50 * tmp.50: set(), Copy nine.31 = tmp.56: set(), tmp.57 = tmp.51 + tmp.53: set(), Copy ten.32 = tmp.57: set(), tmp.58 = 16 - tmp.52: set(), Copy eleven.33 = tmp.58: set(), tmp.59 = tmp.53 + tmp.53: set(), Copy twelve.34 = tmp.59: set(), tmp.73 = check_12_ints([one.23, two.24, three.25, four.26, five.27, six.28, seven.29, eight.30, nine.31, ten.32, eleven.33, twelve.34, 1]): set(), tmp.74 = 10 + glob_three: set(), Copy thirteen.35 = tmp.74: set(), tmp.75 = tmp.74 + 1: set(), Copy fourteen.36 = tmp.75: set(), tmp.76 = 28 - tmp.74: set(), Copy fifteen.37 = tmp.76: set(), tmp.77 = tmp.75 + 2: set(), Copy sixteen.38 = tmp.77: set(), tmp.78 = 4 + tmp.74: set(), Copy seventeen.39 = tmp.78: set(), tmp.79 = 32 - tmp.75: set(), Copy eighteen.40 = tmp.79: set(), tmp.80 = 35 - tmp.77: set(), Copy nineteen.41 = tmp.80: set(), tmp.81 = tmp.76 + 5: set(), Copy twenty.42 = tmp.81: set(), tmp.82 = tmp.74 * 2: set(), tmp.83 = tmp.82 - 5: set(), Copy twenty_one.43 = tmp.83: set(), tmp.84 = tmp.76 + 7: set(), Copy twenty_two.44 = tmp.84: set(), tmp.85 = 6 + tmp.78: set(), Copy twenty_three.45 = tmp.85: set(), tmp.86 = tmp.74 + 11: set(), Copy twenty_four.46 = tmp.86: set(), tmp.100 = check_12_ints([thirteen.35, fourteen.36, fifteen.37, sixteen.38, seventeen.39, eighteen.40, nineteen.41, twenty.42, twenty_one.43, twenty_two.44, twenty_three.45, twenty_four.46, 13]): set(), tmp.101 = tmp.47 != 6: set(), JumpIfZero(tmp.101, tmp.103): set()} ReachingCopies: set()
1 1: [tmp.104 = -1, Return tmp.104] Pred: {0} Suc: {EXIT} iMap: {tmp.104 = -1: set(), Return tmp.104: set()} ReachingCopies: set()
2 2: [Label(tmp.103), Return 0] Pred: {0} Suc: {EXIT} iMap: {Label(tmp.103): set(), Return 0: set()} ReachingCopies: set()
EXIT Exit: EXIT {1, 2}
ENTRY Entry: ENTRY {0}
0 0: [tmp.47 = glob_three + 3, tmp.48 = glob_three - 2, Copy one.23 = tmp.48, tmp.49 = tmp.48 + tmp.48, Copy two.24 = tmp.49, tmp.50 = 2 + tmp.48, Copy three.25 = tmp.50, tmp.51 = tmp.49 * tmp.49, Copy four.26 = tmp.51, tmp.52 = 6 - tmp.48, Copy five.27 = tmp.52, tmp.53 = tmp.49 * tmp.50, Copy six.28 = tmp.53, tmp.54 = tmp.48 + 6, Copy seven.29 = tmp.54, tmp.55 = tmp.49 * 4, Copy eight.30 = tmp.55, tmp.56 = tmp.50 * tmp.50, Copy nine.31 = tmp.56, tmp.57 = tmp.51 + tmp.53, Copy ten.32 = tmp.57, tmp.58 = 16 - tmp.52, Copy eleven.33 = tmp.58, tmp.59 = tmp.53 + tmp.53, Copy twelve.34 = tmp.59, tmp.73 = check_12_ints([one.23, two.24, three.25, four.26, five.27, six.28, seven.29, eight.30, nine.31, ten.32, eleven.33, twelve.34, 1]), tmp.74 = 10 + glob_three, Copy thirteen.35 = tmp.74, tmp.75 = tmp.74 + 1, Copy fourteen.36 = tmp.75, tmp.76 = 28 - tmp.74, Copy fifteen.37 = tmp.76, tmp.77 = tmp.75 + 2, Copy sixteen.38 = tmp.77, tmp.78 = 4 + tmp.74, Copy seventeen.39 = tmp.78, tmp.79 = 32 - tmp.75, Copy eighteen.40 = tmp.79, tmp.80 = 35 - tmp.77, Copy nineteen.41 = tmp.80, tmp.81 = tmp.76 + 5, Copy twenty.42 = tmp.81, tmp.82 = tmp.74 * 2, tmp.83 = tmp.82 - 5, Copy twenty_one.43 = tmp.83, tmp.84 = tmp.76 + 7, Copy twenty_two.44 = tmp.84, tmp.85 = 6 + tmp.78, Copy twenty_three.45 = tmp.85, tmp.86 = tmp.74 + 11, Copy twenty_four.46 = tmp.86, tmp.100 = check_12_ints([thirteen.35, fourteen.36, fifteen.37, sixteen.38, seventeen.39, eighteen.40, nineteen.41, twenty.42, twenty_one.43, twenty_two.44, twenty_three.45, twenty_four.46, 13]), tmp.101 = tmp.47 != 6, JumpIfZero(tmp.101, tmp.103)] Pred: {ENTRY} Suc: {1, 2} iMap: {tmp.47 = glob_three + 3: set(), tmp.48 = glob_three - 2: set(), Copy one.23 = tmp.48: set(), tmp.49 = tmp.48 + tmp.48: set(), Copy two.24 = tmp.49: set(), tmp.50 = 2 + tmp.48: set(), Copy three.25 = tmp.50: set(), tmp.51 = tmp.49 * tmp.49: set(), Copy four.26 = tmp.51: set(), tmp.52 = 6 - tmp.48: set(), Copy five.27 = tmp.52: set(), tmp.53 = tmp.49 * tmp.50: set(), Copy six.28 = tmp.53: set(), tmp.54 = tmp.48 + 6: set(), Copy seven.29 = tmp.54: set(), tmp.55 = tmp.49 * 4: set(), Copy eight.30 = tmp.55: set(), tmp.56 = tmp.50 * tmp.50: set(), Copy nine.31 = tmp.56: set(), tmp.57 = tmp.51 + tmp.53: set(), Copy ten.32 = tmp.57: set(), tmp.58 = 16 - tmp.52: set(), Copy eleven.33 = tmp.58: set(), tmp.59 = tmp.53 + tmp.53: set(), Copy twelve.34 = tmp.59: set(), tmp.73 = check_12_ints([one.23, two.24, three.25, four.26, five.27, six.28, seven.29, eight.30, nine.31, ten.32, eleven.33, twelve.34, 1]): set(), tmp.74 = 10 + glob_three: set(), Copy thirteen.35 = tmp.74: set(), tmp.75 = tmp.74 + 1: set(), Copy fourteen.36 = tmp.75: set(), tmp.76 = 28 - tmp.74: set(), Copy fifteen.37 = tmp.76: set(), tmp.77 = tmp.75 + 2: set(), Copy sixteen.38 = tmp.77: set(), tmp.78 = 4 + tmp.74: set(), Copy seventeen.39 = tmp.78: set(), tmp.79 = 32 - tmp.75: set(), Copy eighteen.40 = tmp.79: set(), tmp.80 = 35 - tmp.77: set(), Copy nineteen.41 = tmp.80: set(), tmp.81 = tmp.76 + 5: set(), Copy twenty.42 = tmp.81: set(), tmp.82 = tmp.74 * 2: set(), tmp.83 = tmp.82 - 5: set(), Copy twenty_one.43 = tmp.83: set(), tmp.84 = tmp.76 + 7: set(), Copy twenty_two.44 = tmp.84: set(), tmp.85 = 6 + tmp.78: set(), Copy twenty_three.45 = tmp.85: set(), tmp.86 = tmp.74 + 11: set(), Copy twenty_four.46 = tmp.86: set(), tmp.100 = check_12_ints([thirteen.35, fourteen.36, fifteen.37, sixteen.38, seventeen.39, eighteen.40, nineteen.41, twenty.42, twenty_one.43, twenty_two.44, twenty_three.45, twenty_four.46, 13]): set(), tmp.101 = tmp.47 != 6: set(), JumpIfZero(tmp.101, tmp.103): set()} ReachingCopies: set()
1 1: [tmp.104 = -1, Return tmp.104] Pred: {0} Suc: {EXIT} iMap: {tmp.104 = -1: set(), Return tmp.104: set()} ReachingCopies: set()
2 2: [Label(tmp.103), Return 0] Pred: {0} Suc: {EXIT} iMap: {Label(tmp.103): set(), Return 0: set()} ReachingCopies: set()
EXIT Exit: EXIT {1, 2}
ENTRY Entry: ENTRY {0}
0 0: [tmp.47 = glob_three + 3, tmp.48 = glob_three - 2, Copy one.23 = tmp.48, tmp.49 = tmp.48 + tmp.48, Copy two.24 = tmp.49, tmp.50 = 2 + tmp.48, Copy three.25 = tmp.50, tmp.51 = tmp.49 * tmp.49, Copy four.26 = tmp.51, tmp.52 = 6 - tmp.48, Copy five.27 = tmp.52, tmp.53 = tmp.49 * tmp.50, Copy six.28 = tmp.53, tmp.54 = tmp.48 + 6, Copy seven.29 = tmp.54, tmp.55 = tmp.49 * 4, Copy eight.30 = tmp.55, tmp.56 = tmp.50 * tmp.50, Copy nine.31 = tmp.56, tmp.57 = tmp.51 + tmp.53, Copy ten.32 = tmp.57, tmp.58 = 16 - tmp.52, Copy eleven.33 = tmp.58, tmp.59 = tmp.53 + tmp.53, Copy twelve.34 = tmp.59, tmp.73 = check_12_ints([one.23, two.24, three.25, four.26, five.27, six.28, seven.29, eight.30, nine.31, ten.32, eleven.33, twelve.34, 1]), tmp.74 = 10 + glob_three, Copy thirteen.35 = tmp.74, tmp.75 = tmp.74 + 1, Copy fourteen.36 = tmp.75, tmp.76 = 28 - tmp.74, Copy fifteen.37 = tmp.76, tmp.77 = tmp.75 + 2, Copy sixteen.38 = tmp.77, tmp.78 = 4 + tmp.74, Copy seventeen.39 = tmp.78, tmp.79 = 32 - tmp.75, Copy eighteen.40 = tmp.79, tmp.80 = 35 - tmp.77, Copy nineteen.41 = tmp.80, tmp.81 = tmp.76 + 5, Copy twenty.42 = tmp.81, tmp.82 = tmp.74 * 2, tmp.83 = tmp.82 - 5, Copy twenty_one.43 = tmp.83, tmp.84 = tmp.76 + 7, Copy twenty_two.44 = tmp.84, tmp.85 = 6 + tmp.78, Copy twenty_three.45 = tmp.85, tmp.86 = tmp.74 + 11, Copy twenty_four.46 = tmp.86, tmp.100 = check_12_ints([thirteen.35, fourteen.36, fifteen.37, sixteen.38, seventeen.39, eighteen.40, nineteen.41, twenty.42, twenty_one.43, twenty_two.44, twenty_three.45, twenty_four.46, 13]), tmp.101 = tmp.47 != 6, JumpIfZero(tmp.101, tmp.103)] Pred: {ENTRY} Suc: {1, 2} iMap: {tmp.47 = glob_three + 3: set(), tmp.48 = glob_three - 2: set(), Copy one.23 = tmp.48: set(), tmp.49 = tmp.48 + tmp.48: set(), Copy two.24 = tmp.49: set(), tmp.50 = 2 + tmp.48: set(), Copy three.25 = tmp.50: set(), tmp.51 = tmp.49 * tmp.49: set(), Copy four.26 = tmp.51: set(), tmp.52 = 6 - tmp.48: set(), Copy five.27 = tmp.52: set(), tmp.53 = tmp.49 * tmp.50: set(), Copy six.28 = tmp.53: set(), tmp.54 = tmp.48 + 6: set(), Copy seven.29 = tmp.54: set(), tmp.55 = tmp.49 * 4: set(), Copy eight.30 = tmp.55: set(), tmp.56 = tmp.50 * tmp.50: set(), Copy nine.31 = tmp.56: set(), tmp.57 = tmp.51 + tmp.53: set(), Copy ten.32 = tmp.57: set(), tmp.58 = 16 - tmp.52: set(), Copy eleven.33 = tmp.58: set(), tmp.59 = tmp.53 + tmp.53: set(), Copy twelve.34 = tmp.59: set(), tmp.73 = check_12_ints([one.23, two.24, three.25, four.26, five.27, six.28, seven.29, eight.30, nine.31, ten.32, eleven.33, twelve.34, 1]): set(), tmp.74 = 10 + glob_three: set(), Copy thirteen.35 = tmp.74: set(), tmp.75 = tmp.74 + 1: set(), Copy fourteen.36 = tmp.75: set(), tmp.76 = 28 - tmp.74: set(), Copy fifteen.37 = tmp.76: set(), tmp.77 = tmp.75 + 2: set(), Copy sixteen.38 = tmp.77: set(), tmp.78 = 4 + tmp.74: set(), Copy seventeen.39 = tmp.78: set(), tmp.79 = 32 - tmp.75: set(), Copy eighteen.40 = tmp.79: set(), tmp.80 = 35 - tmp.77: set(), Copy nineteen.41 = tmp.80: set(), tmp.81 = tmp.76 + 5: set(), Copy twenty.42 = tmp.81: set(), tmp.82 = tmp.74 * 2: set(), tmp.83 = tmp.82 - 5: set(), Copy twenty_one.43 = tmp.83: set(), tmp.84 = tmp.76 + 7: set(), Copy twenty_two.44 = tmp.84: set(), tmp.85 = 6 + tmp.78: set(), Copy twenty_three.45 = tmp.85: set(), tmp.86 = tmp.74 + 11: set(), Copy twenty_four.46 = tmp.86: set(), tmp.100 = check_12_ints([thirteen.35, fourteen.36, fifteen.37, sixteen.38, seventeen.39, eighteen.40, nineteen.41, twenty.42, twenty_one.43, twenty_two.44, twenty_three.45, twenty_four.46, 13]): set(), tmp.101 = tmp.47 != 6: set(), JumpIfZero(tmp.101, tmp.103): set()} ReachingCopies: set()
1 1: [tmp.104 = -1, Return tmp.104] Pred: {0} Suc: {EXIT} iMap: {tmp.104 = -1: set(), Return tmp.104: set()} ReachingCopies: set()
2 2: [Label(tmp.103), Return 0] Pred: {0} Suc: {EXIT} iMap: {Label(tmp.103): set(), Return 0: set()} ReachingCopies: set()
EXIT Exit: EXIT {1, 2}
--------------IMAP for block 0-------------------
tmp.47 = glob_three + 3 set()
tmp.48 = glob_three - 2 set()
Copy one.23 = tmp.48 set()
tmp.49 = tmp.48 + tmp.48 {Copy one.23 = tmp.48}
Copy two.24 = tmp.49 {Copy one.23 = tmp.48}
tmp.50 = 2 + tmp.48 {Copy one.23 = tmp.48, Copy two.24 = tmp.49}
Copy three.25 = tmp.50 {Copy one.23 = tmp.48, Copy two.24 = tmp.49}
tmp.51 = tmp.49 * tmp.49 {Copy one.23 = tmp.48, Copy two.24 = tmp.49, Copy three.25 = tmp.50}
Copy four.26 = tmp.51 {Copy one.23 = tmp.48, Copy two.24 = tmp.49, Copy three.25 = tmp.50}
tmp.52 = 6 - tmp.48 {Copy four.26 = tmp.51, Copy one.23 = tmp.48, Copy two.24 = tmp.49, Copy three.25 = tmp.50}
Copy five.27 = tmp.52 {Copy three.25 = tmp.50, Copy one.23 = tmp.48, Copy two.24 = tmp.49, Copy four.26 = tmp.51}
tmp.53 = tmp.49 * tmp.50 {Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy one.23 = tmp.48, Copy two.24 = tmp.49, Copy four.26 = tmp.51}
Copy six.28 = tmp.53 {Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy one.23 = tmp.48, Copy two.24 = tmp.49, Copy four.26 = tmp.51}
tmp.54 = tmp.48 + 6 {Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy two.24 = tmp.49, Copy four.26 = tmp.51}
Copy seven.29 = tmp.54 {Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy two.24 = tmp.49, Copy four.26 = tmp.51}
tmp.55 = tmp.49 * 4 {Copy seven.29 = tmp.54, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy two.24 = tmp.49, Copy four.26 = tmp.51}
Copy eight.30 = tmp.55 {Copy seven.29 = tmp.54, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy two.24 = tmp.49, Copy four.26 = tmp.51}
tmp.56 = tmp.50 * tmp.50 {Copy seven.29 = tmp.54, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy two.24 = tmp.49}
Copy nine.31 = tmp.56 {Copy seven.29 = tmp.54, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy two.24 = tmp.49}
tmp.57 = tmp.51 + tmp.53 {Copy seven.29 = tmp.54, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy two.24 = tmp.49}
Copy ten.32 = tmp.57 {Copy seven.29 = tmp.54, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy two.24 = tmp.49}
tmp.58 = 16 - tmp.52 {Copy seven.29 = tmp.54, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy two.24 = tmp.49}
Copy eleven.33 = tmp.58 {Copy seven.29 = tmp.54, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy ten.32 = tmp.57, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy two.24 = tmp.49}
tmp.59 = tmp.53 + tmp.53 {Copy seven.29 = tmp.54, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy ten.32 = tmp.57, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy two.24 = tmp.49}
Copy twelve.34 = tmp.59 {Copy seven.29 = tmp.54, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy ten.32 = tmp.57, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy two.24 = tmp.49}
tmp.73 = check_12_ints([one.23, two.24, three.25, four.26, five.27, six.28, seven.29, eight.30, nine.31, ten.32, eleven.33, twelve.34, 1]) {Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy ten.32 = tmp.57, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy two.24 = tmp.49}
tmp.74 = 10 + glob_three {Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy ten.32 = tmp.57, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy two.24 = tmp.49}
Copy thirteen.35 = tmp.74 {Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy ten.32 = tmp.57, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy two.24 = tmp.49}
tmp.75 = tmp.74 + 1 {Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy ten.32 = tmp.57, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49}
Copy fourteen.36 = tmp.75 {Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy ten.32 = tmp.57, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49}
tmp.76 = 28 - tmp.74 {Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy fourteen.36 = tmp.75, Copy one.23 = tmp.48, Copy ten.32 = tmp.57, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49}
Copy fifteen.37 = tmp.76 {Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy fourteen.36 = tmp.75, Copy one.23 = tmp.48, Copy ten.32 = tmp.57, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49}
tmp.77 = tmp.75 + 2 {Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy fourteen.36 = tmp.75, Copy one.23 = tmp.48, Copy ten.32 = tmp.57, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy fifteen.37 = tmp.76}
Copy sixteen.38 = tmp.77 {Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy fourteen.36 = tmp.75, Copy one.23 = tmp.48, Copy ten.32 = tmp.57, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy fifteen.37 = tmp.76}
tmp.78 = 4 + tmp.74 {Copy fourteen.36 = tmp.75, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy sixteen.38 = tmp.77, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy fifteen.37 = tmp.76}
Copy seventeen.39 = tmp.78 {Copy fourteen.36 = tmp.75, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy sixteen.38 = tmp.77, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy fifteen.37 = tmp.76}
tmp.79 = 32 - tmp.75 {Copy fourteen.36 = tmp.75, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy sixteen.38 = tmp.77, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy seventeen.39 = tmp.78, Copy five.27 = tmp.52, Copy fifteen.37 = tmp.76}
Copy eighteen.40 = tmp.79 {Copy fourteen.36 = tmp.75, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy sixteen.38 = tmp.77, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy seventeen.39 = tmp.78, Copy five.27 = tmp.52, Copy fifteen.37 = tmp.76}
tmp.80 = 35 - tmp.77 {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy sixteen.38 = tmp.77, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy seventeen.39 = tmp.78, Copy five.27 = tmp.52, Copy fifteen.37 = tmp.76}
Copy nineteen.41 = tmp.80 {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy sixteen.38 = tmp.77, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy seventeen.39 = tmp.78, Copy five.27 = tmp.52, Copy fifteen.37 = tmp.76}
tmp.81 = tmp.76 + 5 {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy sixteen.38 = tmp.77, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy six.28 = tmp.53, Copy nineteen.41 = tmp.80, Copy five.27 = tmp.52, Copy fifteen.37 = tmp.76}
Copy twenty.42 = tmp.81 {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy sixteen.38 = tmp.77, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy seventeen.39 = tmp.78, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy nineteen.41 = tmp.80, Copy five.27 = tmp.52, Copy fifteen.37 = tmp.76}
tmp.82 = tmp.74 * 2 {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy sixteen.38 = tmp.77, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy seventeen.39 = tmp.78, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy nineteen.41 = tmp.80, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy fifteen.37 = tmp.76}
tmp.83 = tmp.82 - 5 {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy sixteen.38 = tmp.77, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy seventeen.39 = tmp.78, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy nineteen.41 = tmp.80, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy fifteen.37 = tmp.76}
Copy twenty_one.43 = tmp.83 {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy sixteen.38 = tmp.77, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy seventeen.39 = tmp.78, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy nineteen.41 = tmp.80, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy fifteen.37 = tmp.76}
tmp.84 = tmp.76 + 7 {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy sixteen.38 = tmp.77, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy twenty_one.43 = tmp.83, Copy seventeen.39 = tmp.78, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy nineteen.41 = tmp.80, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy fifteen.37 = tmp.76}
Copy twenty_two.44 = tmp.84 {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy sixteen.38 = tmp.77, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy twenty_one.43 = tmp.83, Copy seventeen.39 = tmp.78, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy nineteen.41 = tmp.80, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy fifteen.37 = tmp.76}
tmp.85 = 6 + tmp.78 {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy sixteen.38 = tmp.77, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy twenty_one.43 = tmp.83, Copy seventeen.39 = tmp.78, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy nineteen.41 = tmp.80, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy fifteen.37 = tmp.76}
Copy twenty_three.45 = tmp.85 {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy sixteen.38 = tmp.77, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy twenty_one.43 = tmp.83, Copy seventeen.39 = tmp.78, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy nineteen.41 = tmp.80, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy fifteen.37 = tmp.76}
tmp.86 = tmp.74 + 11 {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy sixteen.38 = tmp.77, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy twenty_one.43 = tmp.83, Copy seventeen.39 = tmp.78, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy nineteen.41 = tmp.80, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy fifteen.37 = tmp.76}
Copy twenty_four.46 = tmp.86 {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy sixteen.38 = tmp.77, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy twenty_one.43 = tmp.83, Copy seventeen.39 = tmp.78, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy nineteen.41 = tmp.80, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy fifteen.37 = tmp.76}
tmp.100 = check_12_ints([thirteen.35, fourteen.36, fifteen.37, sixteen.38, seventeen.39, eighteen.40, nineteen.41, twenty.42, twenty_one.43, twenty_two.44, twenty_three.45, twenty_four.46, 13]) {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy twenty_four.46 = tmp.86, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy sixteen.38 = tmp.77, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy twenty_one.43 = tmp.83, Copy seventeen.39 = tmp.78, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy nineteen.41 = tmp.80, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy fifteen.37 = tmp.76}
tmp.101 = tmp.47 != 6 {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy twenty_four.46 = tmp.86, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy sixteen.38 = tmp.77, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy twenty_one.43 = tmp.83, Copy seventeen.39 = tmp.78, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy nineteen.41 = tmp.80, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy fifteen.37 = tmp.76}
JumpIfZero(tmp.101, tmp.103) {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy twenty_four.46 = tmp.86, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy sixteen.38 = tmp.77, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy twenty_one.43 = tmp.83, Copy seventeen.39 = tmp.78, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy nineteen.41 = tmp.80, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy fifteen.37 = tmp.76}
OLD ANNOT: {Copy twenty_four.46 = tmp.86, Copy eight.30 = tmp.55, Copy seven.29 = tmp.54, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy three.25 = tmp.50, Copy eleven.33 = tmp.58, Copy sixteen.38 = tmp.77, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81}
NEW ANNOT: {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy twenty_four.46 = tmp.86, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy sixteen.38 = tmp.77, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy twenty_one.43 = tmp.83, Copy seventeen.39 = tmp.78, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy nineteen.41 = tmp.80, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy fifteen.37 = tmp.76}
--------------IMAP for block 1-------------------
tmp.104 = -1 {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy twenty_four.46 = tmp.86, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy sixteen.38 = tmp.77, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy twenty_one.43 = tmp.83, Copy seventeen.39 = tmp.78, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy nineteen.41 = tmp.80, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy fifteen.37 = tmp.76}
Return tmp.104 {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy twenty_four.46 = tmp.86, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy sixteen.38 = tmp.77, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy twenty_one.43 = tmp.83, Copy seventeen.39 = tmp.78, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy nineteen.41 = tmp.80, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy fifteen.37 = tmp.76}
OLD ANNOT: {Copy twenty_four.46 = tmp.86, Copy eight.30 = tmp.55, Copy seven.29 = tmp.54, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy three.25 = tmp.50, Copy eleven.33 = tmp.58, Copy sixteen.38 = tmp.77, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81}
NEW ANNOT: {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy twenty_four.46 = tmp.86, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy sixteen.38 = tmp.77, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy twenty_one.43 = tmp.83, Copy seventeen.39 = tmp.78, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy nineteen.41 = tmp.80, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy fifteen.37 = tmp.76}
--------------IMAP for block 2-------------------
Label(tmp.103) {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy twenty_four.46 = tmp.86, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy sixteen.38 = tmp.77, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy twenty_one.43 = tmp.83, Copy seventeen.39 = tmp.78, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy nineteen.41 = tmp.80, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy fifteen.37 = tmp.76}
Return 0 {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy twenty_four.46 = tmp.86, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy sixteen.38 = tmp.77, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy twenty_one.43 = tmp.83, Copy seventeen.39 = tmp.78, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy nineteen.41 = tmp.80, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy fifteen.37 = tmp.76}
OLD ANNOT: {Copy twenty_four.46 = tmp.86, Copy eight.30 = tmp.55, Copy seven.29 = tmp.54, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy nineteen.41 = tmp.80, Copy fifteen.37 = tmp.76, Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy three.25 = tmp.50, Copy eleven.33 = tmp.58, Copy sixteen.38 = tmp.77, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy twenty_one.43 = tmp.83, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81}
NEW ANNOT: {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy twenty_four.46 = tmp.86, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy sixteen.38 = tmp.77, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy twenty_one.43 = tmp.83, Copy seventeen.39 = tmp.78, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy nineteen.41 = tmp.80, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy fifteen.37 = tmp.76}
------------REPLACE INSTRUCTIONS WITH REACHING COPIES.-------------
ENTRY Entry: ENTRY {0}
0 0: [tmp.47 = glob_three + 3, tmp.48 = glob_three - 2, Copy one.23 = tmp.48, tmp.49 = tmp.48 + tmp.48, Copy two.24 = tmp.49, tmp.50 = 2 + tmp.48, Copy three.25 = tmp.50, tmp.51 = tmp.49 * tmp.49, Copy four.26 = tmp.51, tmp.52 = 6 - tmp.48, Copy five.27 = tmp.52, tmp.53 = tmp.49 * tmp.50, Copy six.28 = tmp.53, tmp.54 = tmp.48 + 6, Copy seven.29 = tmp.54, tmp.55 = tmp.49 * 4, Copy eight.30 = tmp.55, tmp.56 = tmp.50 * tmp.50, Copy nine.31 = tmp.56, tmp.57 = tmp.51 + tmp.53, Copy ten.32 = tmp.57, tmp.58 = 16 - tmp.52, Copy eleven.33 = tmp.58, tmp.59 = tmp.53 + tmp.53, Copy twelve.34 = tmp.59, tmp.73 = check_12_ints([tmp.48, tmp.49, tmp.50, tmp.51, tmp.52, tmp.53, tmp.54, tmp.55, tmp.56, tmp.57, tmp.58, tmp.59, 1]), tmp.74 = 10 + glob_three, Copy thirteen.35 = tmp.74, tmp.75 = tmp.74 + 1, Copy fourteen.36 = tmp.75, tmp.76 = 28 - tmp.74, Copy fifteen.37 = tmp.76, tmp.77 = tmp.75 + 2, Copy sixteen.38 = tmp.77, tmp.78 = 4 + tmp.74, Copy seventeen.39 = tmp.78, tmp.79 = 32 - tmp.75, Copy eighteen.40 = tmp.79, tmp.80 = 35 - tmp.77, Copy nineteen.41 = tmp.80, tmp.81 = tmp.76 + 5, Copy twenty.42 = tmp.81, tmp.82 = tmp.74 * 2, tmp.83 = tmp.82 - 5, Copy twenty_one.43 = tmp.83, tmp.84 = tmp.76 + 7, Copy twenty_two.44 = tmp.84, tmp.85 = 6 + tmp.78, Copy twenty_three.45 = tmp.85, tmp.86 = tmp.74 + 11, Copy twenty_four.46 = tmp.86, tmp.100 = check_12_ints([tmp.74, tmp.75, tmp.76, tmp.77, tmp.78, tmp.79, tmp.80, tmp.81, tmp.83, tmp.84, tmp.85, tmp.86, 13]), tmp.101 = tmp.47 != 6, JumpIfZero(tmp.101, tmp.103)] Pred: {ENTRY} Suc: {1, 2} iMap: {tmp.47 = glob_three + 3: set(), tmp.48 = glob_three - 2: set(), Copy one.23 = tmp.48: set(), tmp.49 = tmp.48 + tmp.48: {Copy one.23 = tmp.48}, Copy two.24 = tmp.49: {Copy one.23 = tmp.48}, tmp.50 = 2 + tmp.48: {Copy one.23 = tmp.48, Copy two.24 = tmp.49}, Copy three.25 = tmp.50: {Copy one.23 = tmp.48, Copy two.24 = tmp.49}, tmp.51 = tmp.49 * tmp.49: {Copy one.23 = tmp.48, Copy two.24 = tmp.49, Copy three.25 = tmp.50}, Copy four.26 = tmp.51: {Copy one.23 = tmp.48, Copy two.24 = tmp.49, Copy three.25 = tmp.50}, tmp.52 = 6 - tmp.48: {Copy four.26 = tmp.51, Copy one.23 = tmp.48, Copy two.24 = tmp.49, Copy three.25 = tmp.50}, Copy five.27 = tmp.52: {Copy three.25 = tmp.50, Copy one.23 = tmp.48, Copy two.24 = tmp.49, Copy four.26 = tmp.51}, tmp.53 = tmp.49 * tmp.50: {Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy one.23 = tmp.48, Copy two.24 = tmp.49, Copy four.26 = tmp.51}, Copy six.28 = tmp.53: {Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy one.23 = tmp.48, Copy two.24 = tmp.49, Copy four.26 = tmp.51}, tmp.54 = tmp.48 + 6: {Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy two.24 = tmp.49, Copy four.26 = tmp.51}, Copy seven.29 = tmp.54: {Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy two.24 = tmp.49, Copy four.26 = tmp.51}, tmp.55 = tmp.49 * 4: {Copy seven.29 = tmp.54, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy two.24 = tmp.49, Copy four.26 = tmp.51}, Copy eight.30 = tmp.55: {Copy seven.29 = tmp.54, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy two.24 = tmp.49, Copy four.26 = tmp.51}, tmp.56 = tmp.50 * tmp.50: {Copy seven.29 = tmp.54, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy two.24 = tmp.49}, Copy nine.31 = tmp.56: {Copy seven.29 = tmp.54, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy two.24 = tmp.49}, tmp.57 = tmp.51 + tmp.53: {Copy seven.29 = tmp.54, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy two.24 = tmp.49}, Copy ten.32 = tmp.57: {Copy seven.29 = tmp.54, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy two.24 = tmp.49}, tmp.58 = 16 - tmp.52: {Copy seven.29 = tmp.54, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy two.24 = tmp.49}, Copy eleven.33 = tmp.58: {Copy seven.29 = tmp.54, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy ten.32 = tmp.57, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy two.24 = tmp.49}, tmp.59 = tmp.53 + tmp.53: {Copy seven.29 = tmp.54, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy ten.32 = tmp.57, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy two.24 = tmp.49}, Copy twelve.34 = tmp.59: {Copy seven.29 = tmp.54, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy ten.32 = tmp.57, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy two.24 = tmp.49}, tmp.73 = check_12_ints([one.23, two.24, three.25, four.26, five.27, six.28, seven.29, eight.30, nine.31, ten.32, eleven.33, twelve.34, 1]): {Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy ten.32 = tmp.57, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy two.24 = tmp.49}, tmp.74 = 10 + glob_three: {Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy ten.32 = tmp.57, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy two.24 = tmp.49}, Copy thirteen.35 = tmp.74: {Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy ten.32 = tmp.57, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy two.24 = tmp.49}, tmp.75 = tmp.74 + 1: {Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy ten.32 = tmp.57, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49}, Copy fourteen.36 = tmp.75: {Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy ten.32 = tmp.57, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49}, tmp.76 = 28 - tmp.74: {Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy fourteen.36 = tmp.75, Copy one.23 = tmp.48, Copy ten.32 = tmp.57, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49}, Copy fifteen.37 = tmp.76: {Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy fourteen.36 = tmp.75, Copy one.23 = tmp.48, Copy ten.32 = tmp.57, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49}, tmp.77 = tmp.75 + 2: {Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy fourteen.36 = tmp.75, Copy one.23 = tmp.48, Copy ten.32 = tmp.57, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy fifteen.37 = tmp.76}, Copy sixteen.38 = tmp.77: {Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy fourteen.36 = tmp.75, Copy one.23 = tmp.48, Copy ten.32 = tmp.57, Copy six.28 = tmp.53, Copy four.26 = tmp.51, Copy five.27 = tmp.52, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy fifteen.37 = tmp.76}, tmp.78 = 4 + tmp.74: {Copy fourteen.36 = tmp.75, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy sixteen.38 = tmp.77, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy fifteen.37 = tmp.76}, Copy seventeen.39 = tmp.78: {Copy fourteen.36 = tmp.75, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy sixteen.38 = tmp.77, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy five.27 = tmp.52, Copy fifteen.37 = tmp.76}, tmp.79 = 32 - tmp.75: {Copy fourteen.36 = tmp.75, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy sixteen.38 = tmp.77, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy seventeen.39 = tmp.78, Copy five.27 = tmp.52, Copy fifteen.37 = tmp.76}, Copy eighteen.40 = tmp.79: {Copy fourteen.36 = tmp.75, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy sixteen.38 = tmp.77, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy seventeen.39 = tmp.78, Copy five.27 = tmp.52, Copy fifteen.37 = tmp.76}, tmp.80 = 35 - tmp.77: {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy sixteen.38 = tmp.77, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy seventeen.39 = tmp.78, Copy five.27 = tmp.52, Copy fifteen.37 = tmp.76}, Copy nineteen.41 = tmp.80: {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy sixteen.38 = tmp.77, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy seventeen.39 = tmp.78, Copy five.27 = tmp.52, Copy fifteen.37 = tmp.76}, tmp.81 = tmp.76 + 5: {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy sixteen.38 = tmp.77, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy one.23 = tmp.48, Copy seventeen.39 = tmp.78, Copy six.28 = tmp.53, Copy nineteen.41 = tmp.80, Copy five.27 = tmp.52, Copy fifteen.37 = tmp.76}, Copy twenty.42 = tmp.81: {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy sixteen.38 = tmp.77, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy seventeen.39 = tmp.78, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy nineteen.41 = tmp.80, Copy five.27 = tmp.52, Copy fifteen.37 = tmp.76}, tmp.82 = tmp.74 * 2: {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy sixteen.38 = tmp.77, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy seventeen.39 = tmp.78, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy nineteen.41 = tmp.80, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy fifteen.37 = tmp.76}, tmp.83 = tmp.82 - 5: {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy sixteen.38 = tmp.77, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy seventeen.39 = tmp.78, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy nineteen.41 = tmp.80, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy fifteen.37 = tmp.76}, Copy twenty_one.43 = tmp.83: {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy sixteen.38 = tmp.77, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy seventeen.39 = tmp.78, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy nineteen.41 = tmp.80, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy fifteen.37 = tmp.76}, tmp.84 = tmp.76 + 7: {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy sixteen.38 = tmp.77, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy twenty_one.43 = tmp.83, Copy seventeen.39 = tmp.78, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy nineteen.41 = tmp.80, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy fifteen.37 = tmp.76}, Copy twenty_two.44 = tmp.84: {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy sixteen.38 = tmp.77, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy twenty_one.43 = tmp.83, Copy seventeen.39 = tmp.78, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy nineteen.41 = tmp.80, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy fifteen.37 = tmp.76}, tmp.85 = 6 + tmp.78: {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy sixteen.38 = tmp.77, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy twenty_one.43 = tmp.83, Copy seventeen.39 = tmp.78, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy nineteen.41 = tmp.80, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy fifteen.37 = tmp.76}, Copy twenty_three.45 = tmp.85: {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy sixteen.38 = tmp.77, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy twenty_one.43 = tmp.83, Copy seventeen.39 = tmp.78, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy nineteen.41 = tmp.80, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy fifteen.37 = tmp.76}, tmp.86 = tmp.74 + 11: {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy sixteen.38 = tmp.77, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy twenty_one.43 = tmp.83, Copy seventeen.39 = tmp.78, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy nineteen.41 = tmp.80, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy fifteen.37 = tmp.76}, Copy twenty_four.46 = tmp.86: {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy sixteen.38 = tmp.77, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy twenty_one.43 = tmp.83, Copy seventeen.39 = tmp.78, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy nineteen.41 = tmp.80, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy fifteen.37 = tmp.76}, tmp.100 = check_12_ints([thirteen.35, fourteen.36, fifteen.37, sixteen.38, seventeen.39, eighteen.40, nineteen.41, twenty.42, twenty_one.43, twenty_two.44, twenty_three.45, twenty_four.46, 13]): {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy twenty_four.46 = tmp.86, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy sixteen.38 = tmp.77, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy twenty_one.43 = tmp.83, Copy seventeen.39 = tmp.78, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy nineteen.41 = tmp.80, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy fifteen.37 = tmp.76}, tmp.101 = tmp.47 != 6: {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy twenty_four.46 = tmp.86, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy sixteen.38 = tmp.77, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy twenty_one.43 = tmp.83, Copy seventeen.39 = tmp.78, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy nineteen.41 = tmp.80, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy fifteen.37 = tmp.76}, JumpIfZero(tmp.101, tmp.103): {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy twenty_four.46 = tmp.86, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy sixteen.38 = tmp.77, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy twenty_one.43 = tmp.83, Copy seventeen.39 = tmp.78, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy nineteen.41 = tmp.80, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy fifteen.37 = tmp.76}} ReachingCopies: {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy twenty_four.46 = tmp.86, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy sixteen.38 = tmp.77, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy twenty_one.43 = tmp.83, Copy seventeen.39 = tmp.78, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy nineteen.41 = tmp.80, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy fifteen.37 = tmp.76}
1 1: [tmp.104 = -1, Return tmp.104] Pred: {0} Suc: {EXIT} iMap: {tmp.104 = -1: {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy twenty_four.46 = tmp.86, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy sixteen.38 = tmp.77, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy twenty_one.43 = tmp.83, Copy seventeen.39 = tmp.78, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy nineteen.41 = tmp.80, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy fifteen.37 = tmp.76}, Return tmp.104: {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy twenty_four.46 = tmp.86, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy sixteen.38 = tmp.77, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy twenty_one.43 = tmp.83, Copy seventeen.39 = tmp.78, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy nineteen.41 = tmp.80, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy fifteen.37 = tmp.76}} ReachingCopies: {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy twenty_four.46 = tmp.86, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy eleven.33 = tmp.58, Copy sixteen.38 = tmp.77, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy twenty_one.43 = tmp.83, Copy seventeen.39 = tmp.78, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy nineteen.41 = tmp.80, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy fifteen.37 = tmp.76}
2 2: [Label(tmp.103), Return 0] Pred: {0} Suc: {EXIT} iMap: {Label(tmp.103): {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy twenty_four.46 = tmp.86, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy sixteen.38 = tmp.77, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy twenty_one.43 = tmp.83, Copy seventeen.39 = tmp.78, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy nineteen.41 = tmp.80, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy fifteen.37 = tmp.76}, Return 0: {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy twenty_four.46 = tmp.86, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy sixteen.38 = tmp.77, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy twenty_one.43 = tmp.83, Copy seventeen.39 = tmp.78, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy nineteen.41 = tmp.80, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy fifteen.37 = tmp.76}} ReachingCopies: {Copy fourteen.36 = tmp.75, Copy eighteen.40 = tmp.79, Copy ten.32 = tmp.57, Copy twenty_four.46 = tmp.86, Copy four.26 = tmp.51, Copy twenty_two.44 = tmp.84, Copy twenty_three.45 = tmp.85, Copy three.25 = tmp.50, Copy eight.30 = tmp.55, Copy sixteen.38 = tmp.77, Copy eleven.33 = tmp.58, Copy thirteen.35 = tmp.74, Copy two.24 = tmp.49, Copy seven.29 = tmp.54, Copy twelve.34 = tmp.59, Copy nine.31 = tmp.56, Copy twenty_one.43 = tmp.83, Copy seventeen.39 = tmp.78, Copy one.23 = tmp.48, Copy six.28 = tmp.53, Copy nineteen.41 = tmp.80, Copy five.27 = tmp.52, Copy twenty.42 = tmp.81, Copy fifteen.37 = tmp.76}
EXIT Exit: EXIT {1, 2}
--------------ADDING ALL STATIC VARIABLES.------------------
check_one_int check_one_int FunType: ParamTypes: [int, int] Return Type: int Defined: False Global: True
check_5_ints check_5_ints FunType: ParamTypes: [int, int, int, int, int, int] Return Type: int Defined: False Global: True
check_12_ints check_12_ints FunType: ParamTypes: [int, int, int, int, int, int, int, int, int, int, int, int, int] Return Type: int Defined: False Global: True
id id FunType: ParamTypes: [int] Return Type: int Defined: False Global: True
glob_three glob_three int InitialVal: InitialList: [c_int(3)] Global: True
target target FunType: ParamTypes: [] Return Type: int Defined: True Global: True
should_spill.22 should_spill.22 int <typeChecker.LocalAttributes object at 0x7f26fce31370>
one.23 one.23 int <typeChecker.LocalAttributes object at 0x7f26fce315b0>
two.24 two.24 int <typeChecker.LocalAttributes object at 0x7f26fce317f0>
three.25 three.25 int <typeChecker.LocalAttributes object at 0x7f26fce31a00>
four.26 four.26 int <typeChecker.LocalAttributes object at 0x7f26fce31c40>
five.27 five.27 int <typeChecker.LocalAttributes object at 0x7f26fce31e50>
six.28 six.28 int <typeChecker.LocalAttributes object at 0x7f26fce32090>
seven.29 seven.29 int <typeChecker.LocalAttributes object at 0x7f26fce322a0>
eight.30 eight.30 int <typeChecker.LocalAttributes object at 0x7f26fce324e0>
nine.31 nine.31 int <typeChecker.LocalAttributes object at 0x7f26fce32720>
ten.32 ten.32 int <typeChecker.LocalAttributes object at 0x7f26fce32930>
eleven.33 eleven.33 int <typeChecker.LocalAttributes object at 0x7f26fce32b40>
twelve.34 twelve.34 int <typeChecker.LocalAttributes object at 0x7f26fce32d80>
thirteen.35 thirteen.35 int <typeChecker.LocalAttributes object at 0x7f26fce33560>
fourteen.36 fourteen.36 int <typeChecker.LocalAttributes object at 0x7f26fce337a0>
fifteen.37 fifteen.37 int <typeChecker.LocalAttributes object at 0x7f26fce339e0>
sixteen.38 sixteen.38 int <typeChecker.LocalAttributes object at 0x7f26fce33c20>
seventeen.39 seventeen.39 int <typeChecker.LocalAttributes object at 0x7f26fce33e60>
eighteen.40 eighteen.40 int <typeChecker.LocalAttributes object at 0x7f26fce340e0>
nineteen.41 nineteen.41 int <typeChecker.LocalAttributes object at 0x7f26fce34350>
twenty.42 twenty.42 int <typeChecker.LocalAttributes object at 0x7f26fce345c0>
twenty_one.43 twenty_one.43 int <typeChecker.LocalAttributes object at 0x7f26fce34830>
twenty_two.44 twenty_two.44 int <typeChecker.LocalAttributes object at 0x7f26fce34b60>
twenty_three.45 twenty_three.45 int <typeChecker.LocalAttributes object at 0x7f26fce34dd0>
twenty_four.46 twenty_four.46 int <typeChecker.LocalAttributes object at 0x7f26fce35040>
tmp.47 tmp.47 int <typeChecker.LocalAttributes object at 0x7f26fce375c0>
tmp.48 tmp.48 int <typeChecker.LocalAttributes object at 0x7f26fce377a0>
tmp.49 tmp.49 int <typeChecker.LocalAttributes object at 0x7f26fce37980>
tmp.50 tmp.50 int <typeChecker.LocalAttributes object at 0x7f26fce37b60>
tmp.51 tmp.51 int <typeChecker.LocalAttributes object at 0x7f26fce37d40>
tmp.52 tmp.52 int <typeChecker.LocalAttributes object at 0x7f26fce37f20>
tmp.53 tmp.53 int <typeChecker.LocalAttributes object at 0x7f26fce38140>
tmp.54 tmp.54 int <typeChecker.LocalAttributes object at 0x7f26fce38320>
tmp.55 tmp.55 int <typeChecker.LocalAttributes object at 0x7f26fce386b0>
tmp.56 tmp.56 int <typeChecker.LocalAttributes object at 0x7f26fce386e0>
tmp.57 tmp.57 int <typeChecker.LocalAttributes object at 0x7f26fce388c0>
tmp.58 tmp.58 int <typeChecker.LocalAttributes object at 0x7f26fce38b00>
tmp.59 tmp.59 int <typeChecker.LocalAttributes object at 0x7f26fce38ce0>
tmp.60 tmp.60 int <typeChecker.LocalAttributes object at 0x7f26fce38fe0>
tmp.61 tmp.61 int <typeChecker.LocalAttributes object at 0x7f26fce39130>
tmp.62 tmp.62 int <typeChecker.LocalAttributes object at 0x7f26fce39280>
tmp.63 tmp.63 int <typeChecker.LocalAttributes object at 0x7f26fce393d0>
tmp.64 tmp.64 int <typeChecker.LocalAttributes object at 0x7f26fce39520>
tmp.65 tmp.65 int <typeChecker.LocalAttributes object at 0x7f26fce39670>
tmp.66 tmp.66 int <typeChecker.LocalAttributes object at 0x7f26fce397c0>
tmp.67 tmp.67 int <typeChecker.LocalAttributes object at 0x7f26fce39910>
tmp.68 tmp.68 int <typeChecker.LocalAttributes object at 0x7f26fce39a60>
tmp.69 tmp.69 int <typeChecker.LocalAttributes object at 0x7f26fce39bb0>
tmp.70 tmp.70 int <typeChecker.LocalAttributes object at 0x7f26fce39d00>
tmp.71 tmp.71 int <typeChecker.LocalAttributes object at 0x7f26fce39e50>
tmp.72 tmp.72 int <typeChecker.LocalAttributes object at 0x7f26fce39fa0>
tmp.73 tmp.73 int <typeChecker.LocalAttributes object at 0x7f26fce38ef0>
tmp.74 tmp.74 int <typeChecker.LocalAttributes object at 0x7f26fce3a0c0>
tmp.75 tmp.75 int <typeChecker.LocalAttributes object at 0x7f26fce3a2a0>
tmp.76 tmp.76 int <typeChecker.LocalAttributes object at 0x7f26fce3a480>
tmp.77 tmp.77 int <typeChecker.LocalAttributes object at 0x7f26fce3a660>
tmp.78 tmp.78 int <typeChecker.LocalAttributes object at 0x7f26fce3a840>
tmp.79 tmp.79 int <typeChecker.LocalAttributes object at 0x7f26fce3aa20>
tmp.80 tmp.80 int <typeChecker.LocalAttributes object at 0x7f26fce3ac00>
tmp.81 tmp.81 int <typeChecker.LocalAttributes object at 0x7f26fce3ade0>
tmp.82 tmp.82 int <typeChecker.LocalAttributes object at 0x7f26fce3b110>
tmp.83 tmp.83 int <typeChecker.LocalAttributes object at 0x7f26fce3aff0>
tmp.84 tmp.84 int <typeChecker.LocalAttributes object at 0x7f26fce3b320>
tmp.85 tmp.85 int <typeChecker.LocalAttributes object at 0x7f26fce3b500>
tmp.86 tmp.86 int <typeChecker.LocalAttributes object at 0x7f26fce3b740>
tmp.87 tmp.87 int <typeChecker.LocalAttributes object at 0x7f26fce3bad0>
tmp.88 tmp.88 int <typeChecker.LocalAttributes object at 0x7f26fce3bc20>
tmp.89 tmp.89 int <typeChecker.LocalAttributes object at 0x7f26fce3bd70>
tmp.90 tmp.90 int <typeChecker.LocalAttributes object at 0x7f26fce3bec0>
tmp.91 tmp.91 int <typeChecker.LocalAttributes object at 0x7f26fce3bfb0>
tmp.92 tmp.92 int <typeChecker.LocalAttributes object at 0x7f26fce401a0>
tmp.93 tmp.93 int <typeChecker.LocalAttributes object at 0x7f26fce402f0>
tmp.94 tmp.94 int <typeChecker.LocalAttributes object at 0x7f26fce40440>
tmp.95 tmp.95 int <typeChecker.LocalAttributes object at 0x7f26fce40590>
tmp.96 tmp.96 int <typeChecker.LocalAttributes object at 0x7f26fce406e0>
tmp.97 tmp.97 int <typeChecker.LocalAttributes object at 0x7f26fce40830>
tmp.98 tmp.98 int <typeChecker.LocalAttributes object at 0x7f26fce40980>
tmp.99 tmp.99 int <typeChecker.LocalAttributes object at 0x7f26fce40b00>
tmp.100 tmp.100 int <typeChecker.LocalAttributes object at 0x7f26fce400b0>
tmp.101 tmp.101 int <typeChecker.LocalAttributes object at 0x7f26fce40c80>
tmp.102 tmp.102 int <typeChecker.LocalAttributes object at 0x7f26fce38830>
tmp.104 tmp.104 int <typeChecker.LocalAttributes object at 0x7f26fce410d0>
--------------LIVE for block 2-------------------
Return 0 {glob_three}
Label(tmp.103) {glob_three}
OLD ANNOT: set()
NEW ANNOT: {glob_three}
--------------LIVE for block 1-------------------
Return tmp.104 {glob_three}
tmp.104 = -1 {tmp.104, glob_three}
OLD ANNOT: set()
NEW ANNOT: {glob_three}
--------------LIVE for block 0-------------------
JumpIfZero(tmp.101, tmp.103) {glob_three}
tmp.101 = tmp.47 != 6 {tmp.101, glob_three}
tmp.100 = check_12_ints([tmp.74, tmp.75, tmp.76, tmp.77, tmp.78, tmp.79, tmp.80, tmp.81, tmp.83, tmp.84, tmp.85, tmp.86, 13]) {glob_three, tmp.47}
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_ConstantValue'>
Copy twenty_four.46 = tmp.86 {tmp.83, tmp.86, tmp.85, tmp.81, tmp.77, tmp.78, tmp.79, tmp.76, tmp.84, tmp.75, glob_three, tmp.47, tmp.74, tmp.80}
tmp.86 = tmp.74 + 11 {tmp.83, tmp.86, tmp.85, tmp.81, tmp.77, tmp.78, tmp.79, tmp.76, tmp.84, tmp.75, glob_three, tmp.47, tmp.74, tmp.80}
Copy twenty_three.45 = tmp.85 {tmp.83, tmp.85, tmp.81, tmp.77, tmp.47, tmp.79, tmp.76, tmp.84, tmp.75, glob_three, tmp.78, tmp.74, tmp.80}
tmp.85 = 6 + tmp.78 {tmp.83, tmp.85, tmp.81, tmp.77, tmp.47, tmp.79, tmp.76, tmp.84, tmp.75, glob_three, tmp.78, tmp.74, tmp.80}
Copy twenty_two.44 = tmp.84 {tmp.83, tmp.81, tmp.77, tmp.47, tmp.79, tmp.76, tmp.84, tmp.75, glob_three, tmp.78, tmp.74, tmp.80}
tmp.84 = tmp.76 + 7 {tmp.83, tmp.81, tmp.77, tmp.47, tmp.79, tmp.76, tmp.84, tmp.75, glob_three, tmp.78, tmp.74, tmp.80}
Copy twenty_one.43 = tmp.83 {tmp.83, tmp.81, tmp.77, tmp.47, tmp.79, tmp.76, tmp.75, glob_three, tmp.78, tmp.74, tmp.80}
tmp.83 = tmp.82 - 5 {tmp.83, tmp.81, tmp.77, tmp.47, tmp.79, tmp.76, tmp.75, glob_three, tmp.78, tmp.74, tmp.80}
tmp.82 = tmp.74 * 2 {tmp.81, tmp.77, tmp.82, tmp.47, tmp.79, tmp.76, tmp.75, glob_three, tmp.78, tmp.74, tmp.80}
Copy twenty.42 = tmp.81 {tmp.81, tmp.77, tmp.47, tmp.79, tmp.76, tmp.75, glob_three, tmp.78, tmp.74, tmp.80}
tmp.81 = tmp.76 + 5 {tmp.81, tmp.77, tmp.47, tmp.79, tmp.76, tmp.75, glob_three, tmp.78, tmp.74, tmp.80}
Copy nineteen.41 = tmp.80 {tmp.77, tmp.47, tmp.79, tmp.76, tmp.75, glob_three, tmp.78, tmp.74, tmp.80}
tmp.80 = 35 - tmp.77 {tmp.77, tmp.47, tmp.79, tmp.76, tmp.75, glob_three, tmp.78, tmp.74, tmp.80}
Copy eighteen.40 = tmp.79 {tmp.77, tmp.47, tmp.79, tmp.76, tmp.75, glob_three, tmp.78, tmp.74}
tmp.79 = 32 - tmp.75 {tmp.77, tmp.47, tmp.79, tmp.76, tmp.75, glob_three, tmp.78, tmp.74}
Copy seventeen.39 = tmp.78 {tmp.76, tmp.75, glob_three, tmp.78, tmp.77, tmp.74, tmp.47}
tmp.78 = 4 + tmp.74 {tmp.76, tmp.75, glob_three, tmp.78, tmp.77, tmp.74, tmp.47}
Copy sixteen.38 = tmp.77 {tmp.76, tmp.75, glob_three, tmp.47, tmp.77, tmp.74}
tmp.77 = tmp.75 + 2 {tmp.76, tmp.75, glob_three, tmp.47, tmp.77, tmp.74}
Copy fifteen.37 = tmp.76 {tmp.76, tmp.75, glob_three, tmp.47, tmp.74}
tmp.76 = 28 - tmp.74 {tmp.76, tmp.75, glob_three, tmp.47, tmp.74}
Copy fourteen.36 = tmp.75 {tmp.74, tmp.75, glob_three, tmp.47}
tmp.75 = tmp.74 + 1 {tmp.74, tmp.75, glob_three, tmp.47}
Copy thirteen.35 = tmp.74 {tmp.74, glob_three, tmp.47}
tmp.74 = 10 + glob_three {tmp.74, glob_three, tmp.47}
tmp.73 = check_12_ints([tmp.48, tmp.49, tmp.50, tmp.51, tmp.52, tmp.53, tmp.54, tmp.55, tmp.56, tmp.57, tmp.58, tmp.59, 1]) {glob_three, tmp.47}
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_ConstantValue'>
Copy twelve.34 = tmp.59 {tmp.56, tmp.50, tmp.55, tmp.51, tmp.57, tmp.59, tmp.49, tmp.52, glob_three, tmp.47, tmp.54, tmp.48, tmp.53, tmp.58}
tmp.59 = tmp.53 + tmp.53 {tmp.56, tmp.50, tmp.55, tmp.51, tmp.57, tmp.59, tmp.49, tmp.52, glob_three, tmp.47, tmp.54, tmp.48, tmp.53, tmp.58}
Copy eleven.33 = tmp.58 {tmp.56, tmp.50, tmp.55, tmp.51, tmp.57, tmp.49, tmp.52, glob_three, tmp.47, tmp.54, tmp.48, tmp.53, tmp.58}
tmp.58 = 16 - tmp.52 {tmp.56, tmp.50, tmp.55, tmp.51, tmp.57, tmp.49, tmp.52, glob_three, tmp.47, tmp.54, tmp.48, tmp.53, tmp.58}
Copy ten.32 = tmp.57 {tmp.56, tmp.50, tmp.55, tmp.51, tmp.57, tmp.49, tmp.52, glob_three, tmp.47, tmp.54, tmp.48, tmp.53}
tmp.57 = tmp.51 + tmp.53 {tmp.56, tmp.50, tmp.55, tmp.51, tmp.57, tmp.49, tmp.52, glob_three, tmp.47, tmp.54, tmp.48, tmp.53}
Copy nine.31 = tmp.56 {tmp.56, tmp.50, tmp.55, tmp.51, tmp.49, tmp.52, glob_three, tmp.47, tmp.54, tmp.48, tmp.53}
tmp.56 = tmp.50 * tmp.50 {tmp.56, tmp.50, tmp.55, tmp.51, tmp.49, tmp.52, glob_three, tmp.47, tmp.54, tmp.48, tmp.53}
Copy eight.30 = tmp.55 {tmp.50, tmp.55, tmp.51, tmp.49, tmp.52, glob_three, tmp.47, tmp.54, tmp.48, tmp.53}
tmp.55 = tmp.49 * 4 {tmp.50, tmp.55, tmp.51, tmp.49, tmp.52, glob_three, tmp.47, tmp.54, tmp.48, tmp.53}
Copy seven.29 = tmp.54 {tmp.50, tmp.51, tmp.49, tmp.52, glob_three, tmp.47, tmp.54, tmp.48, tmp.53}
tmp.54 = tmp.48 + 6 {tmp.50, tmp.51, tmp.49, tmp.52, glob_three, tmp.47, tmp.54, tmp.48, tmp.53}
Copy six.28 = tmp.53 {tmp.50, tmp.51, tmp.49, tmp.52, glob_three, tmp.47, tmp.48, tmp.53}
tmp.53 = tmp.49 * tmp.50 {tmp.50, tmp.51, tmp.49, tmp.52, glob_three, tmp.47, tmp.48, tmp.53}
Copy five.27 = tmp.52 {tmp.48, tmp.49, tmp.52, glob_three, tmp.47, tmp.50, tmp.51}
tmp.52 = 6 - tmp.48 {tmp.48, tmp.49, tmp.52, glob_three, tmp.47, tmp.50, tmp.51}
Copy four.26 = tmp.51 {tmp.48, tmp.49, glob_three, tmp.47, tmp.50, tmp.51}
tmp.51 = tmp.49 * tmp.49 {tmp.48, tmp.49, glob_three, tmp.47, tmp.50, tmp.51}
Copy three.25 = tmp.50 {tmp.49, glob_three, tmp.47, tmp.50, tmp.48}
tmp.50 = 2 + tmp.48 {tmp.49, glob_three, tmp.47, tmp.50, tmp.48}
Copy two.24 = tmp.49 {tmp.48, tmp.49, glob_three, tmp.47}
tmp.49 = tmp.48 + tmp.48 {tmp.48, tmp.49, glob_three, tmp.47}
Copy one.23 = tmp.48 {tmp.48, glob_three, tmp.47}
tmp.48 = glob_three - 2 {tmp.48, glob_three, tmp.47}
tmp.47 = glob_three + 3 {glob_three, tmp.47}
OLD ANNOT: set()
NEW ANNOT: {glob_three}
------------REMOVE DEAD STORE INSTRUCTIONS.-------------
Copy one.23 = tmp.48 {tmp.48, glob_three, tmp.47} for node 0
Copy two.24 = tmp.49 {tmp.48, tmp.49, glob_three, tmp.47} for node 0
Copy three.25 = tmp.50 {tmp.49, glob_three, tmp.47, tmp.50, tmp.48} for node 0
Copy four.26 = tmp.51 {tmp.48, tmp.49, glob_three, tmp.47, tmp.50, tmp.51} for node 0
Copy five.27 = tmp.52 {tmp.48, tmp.49, tmp.52, glob_three, tmp.47, tmp.50, tmp.51} for node 0
Copy six.28 = tmp.53 {tmp.50, tmp.51, tmp.49, tmp.52, glob_three, tmp.47, tmp.48, tmp.53} for node 0
Copy seven.29 = tmp.54 {tmp.50, tmp.51, tmp.49, tmp.52, glob_three, tmp.47, tmp.54, tmp.48, tmp.53} for node 0
Copy eight.30 = tmp.55 {tmp.50, tmp.55, tmp.51, tmp.49, tmp.52, glob_three, tmp.47, tmp.54, tmp.48, tmp.53} for node 0
Copy nine.31 = tmp.56 {tmp.56, tmp.50, tmp.55, tmp.51, tmp.49, tmp.52, glob_three, tmp.47, tmp.54, tmp.48, tmp.53} for node 0
Copy ten.32 = tmp.57 {tmp.56, tmp.50, tmp.55, tmp.51, tmp.57, tmp.49, tmp.52, glob_three, tmp.47, tmp.54, tmp.48, tmp.53} for node 0
Copy eleven.33 = tmp.58 {tmp.56, tmp.50, tmp.55, tmp.51, tmp.57, tmp.49, tmp.52, glob_three, tmp.47, tmp.54, tmp.48, tmp.53, tmp.58} for node 0
Copy twelve.34 = tmp.59 {tmp.56, tmp.50, tmp.55, tmp.51, tmp.57, tmp.59, tmp.49, tmp.52, glob_three, tmp.47, tmp.54, tmp.48, tmp.53, tmp.58} for node 0
Copy thirteen.35 = tmp.74 {tmp.74, glob_three, tmp.47} for node 0
Copy fourteen.36 = tmp.75 {tmp.74, tmp.75, glob_three, tmp.47} for node 0
Copy fifteen.37 = tmp.76 {tmp.76, tmp.75, glob_three, tmp.47, tmp.74} for node 0
Copy sixteen.38 = tmp.77 {tmp.76, tmp.75, glob_three, tmp.47, tmp.77, tmp.74} for node 0
Copy seventeen.39 = tmp.78 {tmp.76, tmp.75, glob_three, tmp.78, tmp.77, tmp.74, tmp.47} for node 0
Copy eighteen.40 = tmp.79 {tmp.77, tmp.47, tmp.79, tmp.76, tmp.75, glob_three, tmp.78, tmp.74} for node 0
Copy nineteen.41 = tmp.80 {tmp.77, tmp.47, tmp.79, tmp.76, tmp.75, glob_three, tmp.78, tmp.74, tmp.80} for node 0
Copy twenty.42 = tmp.81 {tmp.81, tmp.77, tmp.47, tmp.79, tmp.76, tmp.75, glob_three, tmp.78, tmp.74, tmp.80} for node 0
Copy twenty_one.43 = tmp.83 {tmp.83, tmp.81, tmp.77, tmp.47, tmp.79, tmp.76, tmp.75, glob_three, tmp.78, tmp.74, tmp.80} for node 0
Copy twenty_two.44 = tmp.84 {tmp.83, tmp.81, tmp.77, tmp.47, tmp.79, tmp.76, tmp.84, tmp.75, glob_three, tmp.78, tmp.74, tmp.80} for node 0
Copy twenty_three.45 = tmp.85 {tmp.83, tmp.85, tmp.81, tmp.77, tmp.47, tmp.79, tmp.76, tmp.84, tmp.75, glob_three, tmp.78, tmp.74, tmp.80} for node 0
Copy twenty_four.46 = tmp.86 {tmp.83, tmp.86, tmp.85, tmp.81, tmp.77, tmp.78, tmp.79, tmp.76, tmp.84, tmp.75, glob_three, tmp.47, tmp.74, tmp.80} for node 0
------------AFTER DEAD STORE REMOVAL.-------------
ENTRY Entry: ENTRY {0}
0 0: [tmp.47 = glob_three + 3, tmp.48 = glob_three - 2, tmp.49 = tmp.48 + tmp.48, tmp.50 = 2 + tmp.48, tmp.51 = tmp.49 * tmp.49, tmp.52 = 6 - tmp.48, tmp.53 = tmp.49 * tmp.50, tmp.54 = tmp.48 + 6, tmp.55 = tmp.49 * 4, tmp.56 = tmp.50 * tmp.50, tmp.57 = tmp.51 + tmp.53, tmp.58 = 16 - tmp.52, tmp.59 = tmp.53 + tmp.53, tmp.73 = check_12_ints([tmp.48, tmp.49, tmp.50, tmp.51, tmp.52, tmp.53, tmp.54, tmp.55, tmp.56, tmp.57, tmp.58, tmp.59, 1]), tmp.74 = 10 + glob_three, tmp.75 = tmp.74 + 1, tmp.76 = 28 - tmp.74, tmp.77 = tmp.75 + 2, tmp.78 = 4 + tmp.74, tmp.79 = 32 - tmp.75, tmp.80 = 35 - tmp.77, tmp.81 = tmp.76 + 5, tmp.82 = tmp.74 * 2, tmp.83 = tmp.82 - 5, tmp.84 = tmp.76 + 7, tmp.85 = 6 + tmp.78, tmp.86 = tmp.74 + 11, tmp.100 = check_12_ints([tmp.74, tmp.75, tmp.76, tmp.77, tmp.78, tmp.79, tmp.80, tmp.81, tmp.83, tmp.84, tmp.85, tmp.86, 13]), tmp.101 = tmp.47 != 6, JumpIfZero(tmp.101, tmp.103)] Pred: {ENTRY} Suc: {1, 2} iMap: {tmp.47 = glob_three + 3: {glob_three, tmp.47}, tmp.48 = glob_three - 2: {tmp.48, glob_three, tmp.47}, Copy one.23 = tmp.48: {tmp.48, glob_three, tmp.47}, tmp.49 = tmp.48 + tmp.48: {tmp.48, tmp.49, glob_three, tmp.47}, Copy two.24 = tmp.49: {tmp.48, tmp.49, glob_three, tmp.47}, tmp.50 = 2 + tmp.48: {tmp.49, glob_three, tmp.47, tmp.50, tmp.48}, Copy three.25 = tmp.50: {tmp.49, glob_three, tmp.47, tmp.50, tmp.48}, tmp.51 = tmp.49 * tmp.49: {tmp.48, tmp.49, glob_three, tmp.47, tmp.50, tmp.51}, Copy four.26 = tmp.51: {tmp.48, tmp.49, glob_three, tmp.47, tmp.50, tmp.51}, tmp.52 = 6 - tmp.48: {tmp.48, tmp.49, tmp.52, glob_three, tmp.47, tmp.50, tmp.51}, Copy five.27 = tmp.52: {tmp.48, tmp.49, tmp.52, glob_three, tmp.47, tmp.50, tmp.51}, tmp.53 = tmp.49 * tmp.50: {tmp.50, tmp.51, tmp.49, tmp.52, glob_three, tmp.47, tmp.48, tmp.53}, Copy six.28 = tmp.53: {tmp.50, tmp.51, tmp.49, tmp.52, glob_three, tmp.47, tmp.48, tmp.53}, tmp.54 = tmp.48 + 6: {tmp.50, tmp.51, tmp.49, tmp.52, glob_three, tmp.47, tmp.54, tmp.48, tmp.53}, Copy seven.29 = tmp.54: {tmp.50, tmp.51, tmp.49, tmp.52, glob_three, tmp.47, tmp.54, tmp.48, tmp.53}, tmp.55 = tmp.49 * 4: {tmp.50, tmp.55, tmp.51, tmp.49, tmp.52, glob_three, tmp.47, tmp.54, tmp.48, tmp.53}, Copy eight.30 = tmp.55: {tmp.50, tmp.55, tmp.51, tmp.49, tmp.52, glob_three, tmp.47, tmp.54, tmp.48, tmp.53}, tmp.56 = tmp.50 * tmp.50: {tmp.56, tmp.50, tmp.55, tmp.51, tmp.49, tmp.52, glob_three, tmp.47, tmp.54, tmp.48, tmp.53}, Copy nine.31 = tmp.56: {tmp.56, tmp.50, tmp.55, tmp.51, tmp.49, tmp.52, glob_three, tmp.47, tmp.54, tmp.48, tmp.53}, tmp.57 = tmp.51 + tmp.53: {tmp.56, tmp.50, tmp.55, tmp.51, tmp.57, tmp.49, tmp.52, glob_three, tmp.47, tmp.54, tmp.48, tmp.53}, Copy ten.32 = tmp.57: {tmp.56, tmp.50, tmp.55, tmp.51, tmp.57, tmp.49, tmp.52, glob_three, tmp.47, tmp.54, tmp.48, tmp.53}, tmp.58 = 16 - tmp.52: {tmp.56, tmp.50, tmp.55, tmp.51, tmp.57, tmp.49, tmp.52, glob_three, tmp.47, tmp.54, tmp.48, tmp.53, tmp.58}, Copy eleven.33 = tmp.58: {tmp.56, tmp.50, tmp.55, tmp.51, tmp.57, tmp.49, tmp.52, glob_three, tmp.47, tmp.54, tmp.48, tmp.53, tmp.58}, tmp.59 = tmp.53 + tmp.53: {tmp.56, tmp.50, tmp.55, tmp.51, tmp.57, tmp.59, tmp.49, tmp.52, glob_three, tmp.47, tmp.54, tmp.48, tmp.53, tmp.58}, Copy twelve.34 = tmp.59: {tmp.56, tmp.50, tmp.55, tmp.51, tmp.57, tmp.59, tmp.49, tmp.52, glob_three, tmp.47, tmp.54, tmp.48, tmp.53, tmp.58}, tmp.73 = check_12_ints([tmp.48, tmp.49, tmp.50, tmp.51, tmp.52, tmp.53, tmp.54, tmp.55, tmp.56, tmp.57, tmp.58, tmp.59, 1]): {glob_three, tmp.47}, tmp.74 = 10 + glob_three: {tmp.74, glob_three, tmp.47}, Copy thirteen.35 = tmp.74: {tmp.74, glob_three, tmp.47}, tmp.75 = tmp.74 + 1: {tmp.74, tmp.75, glob_three, tmp.47}, Copy fourteen.36 = tmp.75: {tmp.74, tmp.75, glob_three, tmp.47}, tmp.76 = 28 - tmp.74: {tmp.76, tmp.75, glob_three, tmp.47, tmp.74}, Copy fifteen.37 = tmp.76: {tmp.76, tmp.75, glob_three, tmp.47, tmp.74}, tmp.77 = tmp.75 + 2: {tmp.76, tmp.75, glob_three, tmp.47, tmp.77, tmp.74}, Copy sixteen.38 = tmp.77: {tmp.76, tmp.75, glob_three, tmp.47, tmp.77, tmp.74}, tmp.78 = 4 + tmp.74: {tmp.76, tmp.75, glob_three, tmp.78, tmp.77, tmp.74, tmp.47}, Copy seventeen.39 = tmp.78: {tmp.76, tmp.75, glob_three, tmp.78, tmp.77, tmp.74, tmp.47}, tmp.79 = 32 - tmp.75: {tmp.77, tmp.47, tmp.79, tmp.76, tmp.75, glob_three, tmp.78, tmp.74}, Copy eighteen.40 = tmp.79: {tmp.77, tmp.47, tmp.79, tmp.76, tmp.75, glob_three, tmp.78, tmp.74}, tmp.80 = 35 - tmp.77: {tmp.77, tmp.47, tmp.79, tmp.76, tmp.75, glob_three, tmp.78, tmp.74, tmp.80}, Copy nineteen.41 = tmp.80: {tmp.77, tmp.47, tmp.79, tmp.76, tmp.75, glob_three, tmp.78, tmp.74, tmp.80}, tmp.81 = tmp.76 + 5: {tmp.81, tmp.77, tmp.47, tmp.79, tmp.76, tmp.75, glob_three, tmp.78, tmp.74, tmp.80}, Copy twenty.42 = tmp.81: {tmp.81, tmp.77, tmp.47, tmp.79, tmp.76, tmp.75, glob_three, tmp.78, tmp.74, tmp.80}, tmp.82 = tmp.74 * 2: {tmp.81, tmp.77, tmp.82, tmp.47, tmp.79, tmp.76, tmp.75, glob_three, tmp.78, tmp.74, tmp.80}, tmp.83 = tmp.82 - 5: {tmp.83, tmp.81, tmp.77, tmp.47, tmp.79, tmp.76, tmp.75, glob_three, tmp.78, tmp.74, tmp.80}, Copy twenty_one.43 = tmp.83: {tmp.83, tmp.81, tmp.77, tmp.47, tmp.79, tmp.76, tmp.75, glob_three, tmp.78, tmp.74, tmp.80}, tmp.84 = tmp.76 + 7: {tmp.83, tmp.81, tmp.77, tmp.47, tmp.79, tmp.76, tmp.84, tmp.75, glob_three, tmp.78, tmp.74, tmp.80}, Copy twenty_two.44 = tmp.84: {tmp.83, tmp.81, tmp.77, tmp.47, tmp.79, tmp.76, tmp.84, tmp.75, glob_three, tmp.78, tmp.74, tmp.80}, tmp.85 = 6 + tmp.78: {tmp.83, tmp.85, tmp.81, tmp.77, tmp.47, tmp.79, tmp.76, tmp.84, tmp.75, glob_three, tmp.78, tmp.74, tmp.80}, Copy twenty_three.45 = tmp.85: {tmp.83, tmp.85, tmp.81, tmp.77, tmp.47, tmp.79, tmp.76, tmp.84, tmp.75, glob_three, tmp.78, tmp.74, tmp.80}, tmp.86 = tmp.74 + 11: {tmp.83, tmp.86, tmp.85, tmp.81, tmp.77, tmp.78, tmp.79, tmp.76, tmp.84, tmp.75, glob_three, tmp.47, tmp.74, tmp.80}, Copy twenty_four.46 = tmp.86: {tmp.83, tmp.86, tmp.85, tmp.81, tmp.77, tmp.78, tmp.79, tmp.76, tmp.84, tmp.75, glob_three, tmp.47, tmp.74, tmp.80}, tmp.100 = check_12_ints([tmp.74, tmp.75, tmp.76, tmp.77, tmp.78, tmp.79, tmp.80, tmp.81, tmp.83, tmp.84, tmp.85, tmp.86, 13]): {glob_three, tmp.47}, tmp.101 = tmp.47 != 6: {tmp.101, glob_three}, JumpIfZero(tmp.101, tmp.103): {glob_three}} ReachingCopies: {glob_three}
1 1: [tmp.104 = -1, Return tmp.104] Pred: {0} Suc: {EXIT} iMap: {tmp.104 = -1: {tmp.104, glob_three}, Return tmp.104: {glob_three}} ReachingCopies: {glob_three}
2 2: [Label(tmp.103), Return 0] Pred: {0} Suc: {EXIT} iMap: {Label(tmp.103): {glob_three}, Return 0: {glob_three}} ReachingCopies: {glob_three}
EXIT Exit: EXIT {1, 2}
--------------ADDRESS TAKEN ANALYSIS.------------------
{glob_three}
-------------CONSTANT FOLDING PASS.--------------------
OLD LIST [tmp.47 = glob_three + 3, tmp.48 = glob_three - 2, tmp.49 = tmp.48 + tmp.48, tmp.50 = 2 + tmp.48, tmp.51 = tmp.49 * tmp.49, tmp.52 = 6 - tmp.48, tmp.53 = tmp.49 * tmp.50, tmp.54 = tmp.48 + 6, tmp.55 = tmp.49 * 4, tmp.56 = tmp.50 * tmp.50, tmp.57 = tmp.51 + tmp.53, tmp.58 = 16 - tmp.52, tmp.59 = tmp.53 + tmp.53, tmp.73 = check_12_ints([tmp.48, tmp.49, tmp.50, tmp.51, tmp.52, tmp.53, tmp.54, tmp.55, tmp.56, tmp.57, tmp.58, tmp.59, 1]), tmp.74 = 10 + glob_three, tmp.75 = tmp.74 + 1, tmp.76 = 28 - tmp.74, tmp.77 = tmp.75 + 2, tmp.78 = 4 + tmp.74, tmp.79 = 32 - tmp.75, tmp.80 = 35 - tmp.77, tmp.81 = tmp.76 + 5, tmp.82 = tmp.74 * 2, tmp.83 = tmp.82 - 5, tmp.84 = tmp.76 + 7, tmp.85 = 6 + tmp.78, tmp.86 = tmp.74 + 11, tmp.100 = check_12_ints([tmp.74, tmp.75, tmp.76, tmp.77, tmp.78, tmp.79, tmp.80, tmp.81, tmp.83, tmp.84, tmp.85, tmp.86, 13]), tmp.101 = tmp.47 != 6, JumpIfZero(tmp.101, tmp.103), tmp.104 = -1, Return tmp.104, Label(tmp.103), Return 0]
NEW LIST [tmp.47 = glob_three + 3, tmp.48 = glob_three - 2, tmp.49 = tmp.48 + tmp.48, tmp.50 = 2 + tmp.48, tmp.51 = tmp.49 * tmp.49, tmp.52 = 6 - tmp.48, tmp.53 = tmp.49 * tmp.50, tmp.54 = tmp.48 + 6, tmp.55 = tmp.49 * 4, tmp.56 = tmp.50 * tmp.50, tmp.57 = tmp.51 + tmp.53, tmp.58 = 16 - tmp.52, tmp.59 = tmp.53 + tmp.53, tmp.73 = check_12_ints([tmp.48, tmp.49, tmp.50, tmp.51, tmp.52, tmp.53, tmp.54, tmp.55, tmp.56, tmp.57, tmp.58, tmp.59, 1]), tmp.74 = 10 + glob_three, tmp.75 = tmp.74 + 1, tmp.76 = 28 - tmp.74, tmp.77 = tmp.75 + 2, tmp.78 = 4 + tmp.74, tmp.79 = 32 - tmp.75, tmp.80 = 35 - tmp.77, tmp.81 = tmp.76 + 5, tmp.82 = tmp.74 * 2, tmp.83 = tmp.82 - 5, tmp.84 = tmp.76 + 7, tmp.85 = 6 + tmp.78, tmp.86 = tmp.74 + 11, tmp.100 = check_12_ints([tmp.74, tmp.75, tmp.76, tmp.77, tmp.78, tmp.79, tmp.80, tmp.81, tmp.83, tmp.84, tmp.85, tmp.86, 13]), tmp.101 = tmp.47 != 6, JumpIfZero(tmp.101, tmp.103), tmp.104 = -1, Return tmp.104, Label(tmp.103), Return 0]
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_FunCallInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_FunCallInstruction'>
<class 'tacGenerator.TAC_BinaryInstruction'>
<class 'tacGenerator.TAC_JumpIfZeroInst'>
<class 'tacGenerator.TAC_UnaryInstruction'>
<class 'tacGenerator.TAC_returnInstruction'>
<class 'tacGenerator.TAC_LabelInst'>
<class 'tacGenerator.TAC_returnInstruction'>
tmp.47 = glob_three + 3
tmp.104 = -1
Label(tmp.103)





ENTRY Entry: ENTRY {0}
0 0: [tmp.47 = glob_three + 3, tmp.48 = glob_three - 2, tmp.49 = tmp.48 + tmp.48, tmp.50 = 2 + tmp.48, tmp.51 = tmp.49 * tmp.49, tmp.52 = 6 - tmp.48, tmp.53 = tmp.49 * tmp.50, tmp.54 = tmp.48 + 6, tmp.55 = tmp.49 * 4, tmp.56 = tmp.50 * tmp.50, tmp.57 = tmp.51 + tmp.53, tmp.58 = 16 - tmp.52, tmp.59 = tmp.53 + tmp.53, tmp.73 = check_12_ints([tmp.48, tmp.49, tmp.50, tmp.51, tmp.52, tmp.53, tmp.54, tmp.55, tmp.56, tmp.57, tmp.58, tmp.59, 1]), tmp.74 = 10 + glob_three, tmp.75 = tmp.74 + 1, tmp.76 = 28 - tmp.74, tmp.77 = tmp.75 + 2, tmp.78 = 4 + tmp.74, tmp.79 = 32 - tmp.75, tmp.80 = 35 - tmp.77, tmp.81 = tmp.76 + 5, tmp.82 = tmp.74 * 2, tmp.83 = tmp.82 - 5, tmp.84 = tmp.76 + 7, tmp.85 = 6 + tmp.78, tmp.86 = tmp.74 + 11, tmp.100 = check_12_ints([tmp.74, tmp.75, tmp.76, tmp.77, tmp.78, tmp.79, tmp.80, tmp.81, tmp.83, tmp.84, tmp.85, tmp.86, 13]), tmp.101 = tmp.47 != 6, JumpIfZero(tmp.101, tmp.103)] Pred: {ENTRY} Suc: {1, 2} iMap: {tmp.47 = glob_three + 3: set(), tmp.48 = glob_three - 2: set(), tmp.49 = tmp.48 + tmp.48: set(), tmp.50 = 2 + tmp.48: set(), tmp.51 = tmp.49 * tmp.49: set(), tmp.52 = 6 - tmp.48: set(), tmp.53 = tmp.49 * tmp.50: set(), tmp.54 = tmp.48 + 6: set(), tmp.55 = tmp.49 * 4: set(), tmp.56 = tmp.50 * tmp.50: set(), tmp.57 = tmp.51 + tmp.53: set(), tmp.58 = 16 - tmp.52: set(), tmp.59 = tmp.53 + tmp.53: set(), tmp.73 = check_12_ints([tmp.48, tmp.49, tmp.50, tmp.51, tmp.52, tmp.53, tmp.54, tmp.55, tmp.56, tmp.57, tmp.58, tmp.59, 1]): set(), tmp.74 = 10 + glob_three: set(), tmp.75 = tmp.74 + 1: set(), tmp.76 = 28 - tmp.74: set(), tmp.77 = tmp.75 + 2: set(), tmp.78 = 4 + tmp.74: set(), tmp.79 = 32 - tmp.75: set(), tmp.80 = 35 - tmp.77: set(), tmp.81 = tmp.76 + 5: set(), tmp.82 = tmp.74 * 2: set(), tmp.83 = tmp.82 - 5: set(), tmp.84 = tmp.76 + 7: set(), tmp.85 = 6 + tmp.78: set(), tmp.86 = tmp.74 + 11: set(), tmp.100 = check_12_ints([tmp.74, tmp.75, tmp.76, tmp.77, tmp.78, tmp.79, tmp.80, tmp.81, tmp.83, tmp.84, tmp.85, tmp.86, 13]): set(), tmp.101 = tmp.47 != 6: set(), JumpIfZero(tmp.101, tmp.103): set()} ReachingCopies: set()
1 1: [tmp.104 = -1, Return tmp.104] Pred: {0} Suc: {EXIT} iMap: {tmp.104 = -1: set(), Return tmp.104: set()} ReachingCopies: set()
2 2: [Label(tmp.103), Return 0] Pred: {0} Suc: {EXIT} iMap: {Label(tmp.103): set(), Return 0: set()} ReachingCopies: set()
EXIT Exit: EXIT {1, 2}
ENTRY Entry: ENTRY {0}
0 0: [tmp.47 = glob_three + 3, tmp.48 = glob_three - 2, tmp.49 = tmp.48 + tmp.48, tmp.50 = 2 + tmp.48, tmp.51 = tmp.49 * tmp.49, tmp.52 = 6 - tmp.48, tmp.53 = tmp.49 * tmp.50, tmp.54 = tmp.48 + 6, tmp.55 = tmp.49 * 4, tmp.56 = tmp.50 * tmp.50, tmp.57 = tmp.51 + tmp.53, tmp.58 = 16 - tmp.52, tmp.59 = tmp.53 + tmp.53, tmp.73 = check_12_ints([tmp.48, tmp.49, tmp.50, tmp.51, tmp.52, tmp.53, tmp.54, tmp.55, tmp.56, tmp.57, tmp.58, tmp.59, 1]), tmp.74 = 10 + glob_three, tmp.75 = tmp.74 + 1, tmp.76 = 28 - tmp.74, tmp.77 = tmp.75 + 2, tmp.78 = 4 + tmp.74, tmp.79 = 32 - tmp.75, tmp.80 = 35 - tmp.77, tmp.81 = tmp.76 + 5, tmp.82 = tmp.74 * 2, tmp.83 = tmp.82 - 5, tmp.84 = tmp.76 + 7, tmp.85 = 6 + tmp.78, tmp.86 = tmp.74 + 11, tmp.100 = check_12_ints([tmp.74, tmp.75, tmp.76, tmp.77, tmp.78, tmp.79, tmp.80, tmp.81, tmp.83, tmp.84, tmp.85, tmp.86, 13]), tmp.101 = tmp.47 != 6, JumpIfZero(tmp.101, tmp.103)] Pred: {ENTRY} Suc: {1, 2} iMap: {tmp.47 = glob_three + 3: set(), tmp.48 = glob_three - 2: set(), tmp.49 = tmp.48 + tmp.48: set(), tmp.50 = 2 + tmp.48: set(), tmp.51 = tmp.49 * tmp.49: set(), tmp.52 = 6 - tmp.48: set(), tmp.53 = tmp.49 * tmp.50: set(), tmp.54 = tmp.48 + 6: set(), tmp.55 = tmp.49 * 4: set(), tmp.56 = tmp.50 * tmp.50: set(), tmp.57 = tmp.51 + tmp.53: set(), tmp.58 = 16 - tmp.52: set(), tmp.59 = tmp.53 + tmp.53: set(), tmp.73 = check_12_ints([tmp.48, tmp.49, tmp.50, tmp.51, tmp.52, tmp.53, tmp.54, tmp.55, tmp.56, tmp.57, tmp.58, tmp.59, 1]): set(), tmp.74 = 10 + glob_three: set(), tmp.75 = tmp.74 + 1: set(), tmp.76 = 28 - tmp.74: set(), tmp.77 = tmp.75 + 2: set(), tmp.78 = 4 + tmp.74: set(), tmp.79 = 32 - tmp.75: set(), tmp.80 = 35 - tmp.77: set(), tmp.81 = tmp.76 + 5: set(), tmp.82 = tmp.74 * 2: set(), tmp.83 = tmp.82 - 5: set(), tmp.84 = tmp.76 + 7: set(), tmp.85 = 6 + tmp.78: set(), tmp.86 = tmp.74 + 11: set(), tmp.100 = check_12_ints([tmp.74, tmp.75, tmp.76, tmp.77, tmp.78, tmp.79, tmp.80, tmp.81, tmp.83, tmp.84, tmp.85, tmp.86, 13]): set(), tmp.101 = tmp.47 != 6: set(), JumpIfZero(tmp.101, tmp.103): set()} ReachingCopies: set()
1 1: [tmp.104 = -1, Return tmp.104] Pred: {0} Suc: {EXIT} iMap: {tmp.104 = -1: set(), Return tmp.104: set()} ReachingCopies: set()
2 2: [Label(tmp.103), Return 0] Pred: {0} Suc: {EXIT} iMap: {Label(tmp.103): set(), Return 0: set()} ReachingCopies: set()
EXIT Exit: EXIT {1, 2}
ENTRY Entry: ENTRY {0}
0 0: [tmp.47 = glob_three + 3, tmp.48 = glob_three - 2, tmp.49 = tmp.48 + tmp.48, tmp.50 = 2 + tmp.48, tmp.51 = tmp.49 * tmp.49, tmp.52 = 6 - tmp.48, tmp.53 = tmp.49 * tmp.50, tmp.54 = tmp.48 + 6, tmp.55 = tmp.49 * 4, tmp.56 = tmp.50 * tmp.50, tmp.57 = tmp.51 + tmp.53, tmp.58 = 16 - tmp.52, tmp.59 = tmp.53 + tmp.53, tmp.73 = check_12_ints([tmp.48, tmp.49, tmp.50, tmp.51, tmp.52, tmp.53, tmp.54, tmp.55, tmp.56, tmp.57, tmp.58, tmp.59, 1]), tmp.74 = 10 + glob_three, tmp.75 = tmp.74 + 1, tmp.76 = 28 - tmp.74, tmp.77 = tmp.75 + 2, tmp.78 = 4 + tmp.74, tmp.79 = 32 - tmp.75, tmp.80 = 35 - tmp.77, tmp.81 = tmp.76 + 5, tmp.82 = tmp.74 * 2, tmp.83 = tmp.82 - 5, tmp.84 = tmp.76 + 7, tmp.85 = 6 + tmp.78, tmp.86 = tmp.74 + 11, tmp.100 = check_12_ints([tmp.74, tmp.75, tmp.76, tmp.77, tmp.78, tmp.79, tmp.80, tmp.81, tmp.83, tmp.84, tmp.85, tmp.86, 13]), tmp.101 = tmp.47 != 6, JumpIfZero(tmp.101, tmp.103)] Pred: {ENTRY} Suc: {1, 2} iMap: {tmp.47 = glob_three + 3: set(), tmp.48 = glob_three - 2: set(), tmp.49 = tmp.48 + tmp.48: set(), tmp.50 = 2 + tmp.48: set(), tmp.51 = tmp.49 * tmp.49: set(), tmp.52 = 6 - tmp.48: set(), tmp.53 = tmp.49 * tmp.50: set(), tmp.54 = tmp.48 + 6: set(), tmp.55 = tmp.49 * 4: set(), tmp.56 = tmp.50 * tmp.50: set(), tmp.57 = tmp.51 + tmp.53: set(), tmp.58 = 16 - tmp.52: set(), tmp.59 = tmp.53 + tmp.53: set(), tmp.73 = check_12_ints([tmp.48, tmp.49, tmp.50, tmp.51, tmp.52, tmp.53, tmp.54, tmp.55, tmp.56, tmp.57, tmp.58, tmp.59, 1]): set(), tmp.74 = 10 + glob_three: set(), tmp.75 = tmp.74 + 1: set(), tmp.76 = 28 - tmp.74: set(), tmp.77 = tmp.75 + 2: set(), tmp.78 = 4 + tmp.74: set(), tmp.79 = 32 - tmp.75: set(), tmp.80 = 35 - tmp.77: set(), tmp.81 = tmp.76 + 5: set(), tmp.82 = tmp.74 * 2: set(), tmp.83 = tmp.82 - 5: set(), tmp.84 = tmp.76 + 7: set(), tmp.85 = 6 + tmp.78: set(), tmp.86 = tmp.74 + 11: set(), tmp.100 = check_12_ints([tmp.74, tmp.75, tmp.76, tmp.77, tmp.78, tmp.79, tmp.80, tmp.81, tmp.83, tmp.84, tmp.85, tmp.86, 13]): set(), tmp.101 = tmp.47 != 6: set(), JumpIfZero(tmp.101, tmp.103): set()} ReachingCopies: set()
1 1: [tmp.104 = -1, Return tmp.104] Pred: {0} Suc: {EXIT} iMap: {tmp.104 = -1: set(), Return tmp.104: set()} ReachingCopies: set()
2 2: [Label(tmp.103), Return 0] Pred: {0} Suc: {EXIT} iMap: {Label(tmp.103): set(), Return 0: set()} ReachingCopies: set()
EXIT Exit: EXIT {1, 2}
ENTRY Entry: ENTRY {0}
0 0: [tmp.47 = glob_three + 3, tmp.48 = glob_three - 2, tmp.49 = tmp.48 + tmp.48, tmp.50 = 2 + tmp.48, tmp.51 = tmp.49 * tmp.49, tmp.52 = 6 - tmp.48, tmp.53 = tmp.49 * tmp.50, tmp.54 = tmp.48 + 6, tmp.55 = tmp.49 * 4, tmp.56 = tmp.50 * tmp.50, tmp.57 = tmp.51 + tmp.53, tmp.58 = 16 - tmp.52, tmp.59 = tmp.53 + tmp.53, tmp.73 = check_12_ints([tmp.48, tmp.49, tmp.50, tmp.51, tmp.52, tmp.53, tmp.54, tmp.55, tmp.56, tmp.57, tmp.58, tmp.59, 1]), tmp.74 = 10 + glob_three, tmp.75 = tmp.74 + 1, tmp.76 = 28 - tmp.74, tmp.77 = tmp.75 + 2, tmp.78 = 4 + tmp.74, tmp.79 = 32 - tmp.75, tmp.80 = 35 - tmp.77, tmp.81 = tmp.76 + 5, tmp.82 = tmp.74 * 2, tmp.83 = tmp.82 - 5, tmp.84 = tmp.76 + 7, tmp.85 = 6 + tmp.78, tmp.86 = tmp.74 + 11, tmp.100 = check_12_ints([tmp.74, tmp.75, tmp.76, tmp.77, tmp.78, tmp.79, tmp.80, tmp.81, tmp.83, tmp.84, tmp.85, tmp.86, 13]), tmp.101 = tmp.47 != 6, JumpIfZero(tmp.101, tmp.103)] Pred: {ENTRY} Suc: {1, 2} iMap: {tmp.47 = glob_three + 3: set(), tmp.48 = glob_three - 2: set(), tmp.49 = tmp.48 + tmp.48: set(), tmp.50 = 2 + tmp.48: set(), tmp.51 = tmp.49 * tmp.49: set(), tmp.52 = 6 - tmp.48: set(), tmp.53 = tmp.49 * tmp.50: set(), tmp.54 = tmp.48 + 6: set(), tmp.55 = tmp.49 * 4: set(), tmp.56 = tmp.50 * tmp.50: set(), tmp.57 = tmp.51 + tmp.53: set(), tmp.58 = 16 - tmp.52: set(), tmp.59 = tmp.53 + tmp.53: set(), tmp.73 = check_12_ints([tmp.48, tmp.49, tmp.50, tmp.51, tmp.52, tmp.53, tmp.54, tmp.55, tmp.56, tmp.57, tmp.58, tmp.59, 1]): set(), tmp.74 = 10 + glob_three: set(), tmp.75 = tmp.74 + 1: set(), tmp.76 = 28 - tmp.74: set(), tmp.77 = tmp.75 + 2: set(), tmp.78 = 4 + tmp.74: set(), tmp.79 = 32 - tmp.75: set(), tmp.80 = 35 - tmp.77: set(), tmp.81 = tmp.76 + 5: set(), tmp.82 = tmp.74 * 2: set(), tmp.83 = tmp.82 - 5: set(), tmp.84 = tmp.76 + 7: set(), tmp.85 = 6 + tmp.78: set(), tmp.86 = tmp.74 + 11: set(), tmp.100 = check_12_ints([tmp.74, tmp.75, tmp.76, tmp.77, tmp.78, tmp.79, tmp.80, tmp.81, tmp.83, tmp.84, tmp.85, tmp.86, 13]): set(), tmp.101 = tmp.47 != 6: set(), JumpIfZero(tmp.101, tmp.103): set()} ReachingCopies: set()
1 1: [tmp.104 = -1, Return tmp.104] Pred: {0} Suc: {EXIT} iMap: {tmp.104 = -1: set(), Return tmp.104: set()} ReachingCopies: set()
2 2: [Label(tmp.103), Return 0] Pred: {0} Suc: {EXIT} iMap: {Label(tmp.103): set(), Return 0: set()} ReachingCopies: set()
EXIT Exit: EXIT {1, 2}
--------------IMAP for block 0-------------------
tmp.47 = glob_three + 3 set()
tmp.48 = glob_three - 2 set()
tmp.49 = tmp.48 + tmp.48 set()
tmp.50 = 2 + tmp.48 set()
tmp.51 = tmp.49 * tmp.49 set()
tmp.52 = 6 - tmp.48 set()
tmp.53 = tmp.49 * tmp.50 set()
tmp.54 = tmp.48 + 6 set()
tmp.55 = tmp.49 * 4 set()
tmp.56 = tmp.50 * tmp.50 set()
tmp.57 = tmp.51 + tmp.53 set()
tmp.58 = 16 - tmp.52 set()
tmp.59 = tmp.53 + tmp.53 set()
tmp.73 = check_12_ints([tmp.48, tmp.49, tmp.50, tmp.51, tmp.52, tmp.53, tmp.54, tmp.55, tmp.56, tmp.57, tmp.58, tmp.59, 1]) set()
tmp.74 = 10 + glob_three set()
tmp.75 = tmp.74 + 1 set()
tmp.76 = 28 - tmp.74 set()
tmp.77 = tmp.75 + 2 set()
tmp.78 = 4 + tmp.74 set()
tmp.79 = 32 - tmp.75 set()
tmp.80 = 35 - tmp.77 set()
tmp.81 = tmp.76 + 5 set()
tmp.82 = tmp.74 * 2 set()
tmp.83 = tmp.82 - 5 set()
tmp.84 = tmp.76 + 7 set()
tmp.85 = 6 + tmp.78 set()
tmp.86 = tmp.74 + 11 set()
tmp.100 = check_12_ints([tmp.74, tmp.75, tmp.76, tmp.77, tmp.78, tmp.79, tmp.80, tmp.81, tmp.83, tmp.84, tmp.85, tmp.86, 13]) set()
tmp.101 = tmp.47 != 6 set()
JumpIfZero(tmp.101, tmp.103) set()
OLD ANNOT: set()
NEW ANNOT: set()
--------------IMAP for block 1-------------------
tmp.104 = -1 set()
Return tmp.104 set()
OLD ANNOT: set()
NEW ANNOT: set()
--------------IMAP for block 2-------------------
Label(tmp.103) set()
Return 0 set()
OLD ANNOT: set()
NEW ANNOT: set()
------------REPLACE INSTRUCTIONS WITH REACHING COPIES.-------------
ENTRY Entry: ENTRY {0}
0 0: [tmp.47 = glob_three + 3, tmp.48 = glob_three - 2, tmp.49 = tmp.48 + tmp.48, tmp.50 = 2 + tmp.48, tmp.51 = tmp.49 * tmp.49, tmp.52 = 6 - tmp.48, tmp.53 = tmp.49 * tmp.50, tmp.54 = tmp.48 + 6, tmp.55 = tmp.49 * 4, tmp.56 = tmp.50 * tmp.50, tmp.57 = tmp.51 + tmp.53, tmp.58 = 16 - tmp.52, tmp.59 = tmp.53 + tmp.53, tmp.73 = check_12_ints([tmp.48, tmp.49, tmp.50, tmp.51, tmp.52, tmp.53, tmp.54, tmp.55, tmp.56, tmp.57, tmp.58, tmp.59, 1]), tmp.74 = 10 + glob_three, tmp.75 = tmp.74 + 1, tmp.76 = 28 - tmp.74, tmp.77 = tmp.75 + 2, tmp.78 = 4 + tmp.74, tmp.79 = 32 - tmp.75, tmp.80 = 35 - tmp.77, tmp.81 = tmp.76 + 5, tmp.82 = tmp.74 * 2, tmp.83 = tmp.82 - 5, tmp.84 = tmp.76 + 7, tmp.85 = 6 + tmp.78, tmp.86 = tmp.74 + 11, tmp.100 = check_12_ints([tmp.74, tmp.75, tmp.76, tmp.77, tmp.78, tmp.79, tmp.80, tmp.81, tmp.83, tmp.84, tmp.85, tmp.86, 13]), tmp.101 = tmp.47 != 6, JumpIfZero(tmp.101, tmp.103)] Pred: {ENTRY} Suc: {1, 2} iMap: {tmp.47 = glob_three + 3: set(), tmp.48 = glob_three - 2: set(), tmp.49 = tmp.48 + tmp.48: set(), tmp.50 = 2 + tmp.48: set(), tmp.51 = tmp.49 * tmp.49: set(), tmp.52 = 6 - tmp.48: set(), tmp.53 = tmp.49 * tmp.50: set(), tmp.54 = tmp.48 + 6: set(), tmp.55 = tmp.49 * 4: set(), tmp.56 = tmp.50 * tmp.50: set(), tmp.57 = tmp.51 + tmp.53: set(), tmp.58 = 16 - tmp.52: set(), tmp.59 = tmp.53 + tmp.53: set(), tmp.73 = check_12_ints([tmp.48, tmp.49, tmp.50, tmp.51, tmp.52, tmp.53, tmp.54, tmp.55, tmp.56, tmp.57, tmp.58, tmp.59, 1]): set(), tmp.74 = 10 + glob_three: set(), tmp.75 = tmp.74 + 1: set(), tmp.76 = 28 - tmp.74: set(), tmp.77 = tmp.75 + 2: set(), tmp.78 = 4 + tmp.74: set(), tmp.79 = 32 - tmp.75: set(), tmp.80 = 35 - tmp.77: set(), tmp.81 = tmp.76 + 5: set(), tmp.82 = tmp.74 * 2: set(), tmp.83 = tmp.82 - 5: set(), tmp.84 = tmp.76 + 7: set(), tmp.85 = 6 + tmp.78: set(), tmp.86 = tmp.74 + 11: set(), tmp.100 = check_12_ints([tmp.74, tmp.75, tmp.76, tmp.77, tmp.78, tmp.79, tmp.80, tmp.81, tmp.83, tmp.84, tmp.85, tmp.86, 13]): set(), tmp.101 = tmp.47 != 6: set(), JumpIfZero(tmp.101, tmp.103): set()} ReachingCopies: set()
1 1: [tmp.104 = -1, Return tmp.104] Pred: {0} Suc: {EXIT} iMap: {tmp.104 = -1: set(), Return tmp.104: set()} ReachingCopies: set()
2 2: [Label(tmp.103), Return 0] Pred: {0} Suc: {EXIT} iMap: {Label(tmp.103): set(), Return 0: set()} ReachingCopies: set()
EXIT Exit: EXIT {1, 2}
--------------ADDING ALL STATIC VARIABLES.------------------
check_one_int check_one_int FunType: ParamTypes: [int, int] Return Type: int Defined: False Global: True
check_5_ints check_5_ints FunType: ParamTypes: [int, int, int, int, int, int] Return Type: int Defined: False Global: True
check_12_ints check_12_ints FunType: ParamTypes: [int, int, int, int, int, int, int, int, int, int, int, int, int] Return Type: int Defined: False Global: True
id id FunType: ParamTypes: [int] Return Type: int Defined: False Global: True
glob_three glob_three int InitialVal: InitialList: [c_int(3)] Global: True
target target FunType: ParamTypes: [] Return Type: int Defined: True Global: True
should_spill.22 should_spill.22 int <typeChecker.LocalAttributes object at 0x7f26fce31370>
one.23 one.23 int <typeChecker.LocalAttributes object at 0x7f26fce315b0>
two.24 two.24 int <typeChecker.LocalAttributes object at 0x7f26fce317f0>
three.25 three.25 int <typeChecker.LocalAttributes object at 0x7f26fce31a00>
four.26 four.26 int <typeChecker.LocalAttributes object at 0x7f26fce31c40>
five.27 five.27 int <typeChecker.LocalAttributes object at 0x7f26fce31e50>
six.28 six.28 int <typeChecker.LocalAttributes object at 0x7f26fce32090>
seven.29 seven.29 int <typeChecker.LocalAttributes object at 0x7f26fce322a0>
eight.30 eight.30 int <typeChecker.LocalAttributes object at 0x7f26fce324e0>
nine.31 nine.31 int <typeChecker.LocalAttributes object at 0x7f26fce32720>
ten.32 ten.32 int <typeChecker.LocalAttributes object at 0x7f26fce32930>
eleven.33 eleven.33 int <typeChecker.LocalAttributes object at 0x7f26fce32b40>
twelve.34 twelve.34 int <typeChecker.LocalAttributes object at 0x7f26fce32d80>
thirteen.35 thirteen.35 int <typeChecker.LocalAttributes object at 0x7f26fce33560>
fourteen.36 fourteen.36 int <typeChecker.LocalAttributes object at 0x7f26fce337a0>
fifteen.37 fifteen.37 int <typeChecker.LocalAttributes object at 0x7f26fce339e0>
sixteen.38 sixteen.38 int <typeChecker.LocalAttributes object at 0x7f26fce33c20>
seventeen.39 seventeen.39 int <typeChecker.LocalAttributes object at 0x7f26fce33e60>
eighteen.40 eighteen.40 int <typeChecker.LocalAttributes object at 0x7f26fce340e0>
nineteen.41 nineteen.41 int <typeChecker.LocalAttributes object at 0x7f26fce34350>
twenty.42 twenty.42 int <typeChecker.LocalAttributes object at 0x7f26fce345c0>
twenty_one.43 twenty_one.43 int <typeChecker.LocalAttributes object at 0x7f26fce34830>
twenty_two.44 twenty_two.44 int <typeChecker.LocalAttributes object at 0x7f26fce34b60>
twenty_three.45 twenty_three.45 int <typeChecker.LocalAttributes object at 0x7f26fce34dd0>
twenty_four.46 twenty_four.46 int <typeChecker.LocalAttributes object at 0x7f26fce35040>
tmp.47 tmp.47 int <typeChecker.LocalAttributes object at 0x7f26fce375c0>
tmp.48 tmp.48 int <typeChecker.LocalAttributes object at 0x7f26fce377a0>
tmp.49 tmp.49 int <typeChecker.LocalAttributes object at 0x7f26fce37980>
tmp.50 tmp.50 int <typeChecker.LocalAttributes object at 0x7f26fce37b60>
tmp.51 tmp.51 int <typeChecker.LocalAttributes object at 0x7f26fce37d40>
tmp.52 tmp.52 int <typeChecker.LocalAttributes object at 0x7f26fce37f20>
tmp.53 tmp.53 int <typeChecker.LocalAttributes object at 0x7f26fce38140>
tmp.54 tmp.54 int <typeChecker.LocalAttributes object at 0x7f26fce38320>
tmp.55 tmp.55 int <typeChecker.LocalAttributes object at 0x7f26fce386b0>
tmp.56 tmp.56 int <typeChecker.LocalAttributes object at 0x7f26fce386e0>
tmp.57 tmp.57 int <typeChecker.LocalAttributes object at 0x7f26fce388c0>
tmp.58 tmp.58 int <typeChecker.LocalAttributes object at 0x7f26fce38b00>
tmp.59 tmp.59 int <typeChecker.LocalAttributes object at 0x7f26fce38ce0>
tmp.60 tmp.60 int <typeChecker.LocalAttributes object at 0x7f26fce38fe0>
tmp.61 tmp.61 int <typeChecker.LocalAttributes object at 0x7f26fce39130>
tmp.62 tmp.62 int <typeChecker.LocalAttributes object at 0x7f26fce39280>
tmp.63 tmp.63 int <typeChecker.LocalAttributes object at 0x7f26fce393d0>
tmp.64 tmp.64 int <typeChecker.LocalAttributes object at 0x7f26fce39520>
tmp.65 tmp.65 int <typeChecker.LocalAttributes object at 0x7f26fce39670>
tmp.66 tmp.66 int <typeChecker.LocalAttributes object at 0x7f26fce397c0>
tmp.67 tmp.67 int <typeChecker.LocalAttributes object at 0x7f26fce39910>
tmp.68 tmp.68 int <typeChecker.LocalAttributes object at 0x7f26fce39a60>
tmp.69 tmp.69 int <typeChecker.LocalAttributes object at 0x7f26fce39bb0>
tmp.70 tmp.70 int <typeChecker.LocalAttributes object at 0x7f26fce39d00>
tmp.71 tmp.71 int <typeChecker.LocalAttributes object at 0x7f26fce39e50>
tmp.72 tmp.72 int <typeChecker.LocalAttributes object at 0x7f26fce39fa0>
tmp.73 tmp.73 int <typeChecker.LocalAttributes object at 0x7f26fce38ef0>
tmp.74 tmp.74 int <typeChecker.LocalAttributes object at 0x7f26fce3a0c0>
tmp.75 tmp.75 int <typeChecker.LocalAttributes object at 0x7f26fce3a2a0>
tmp.76 tmp.76 int <typeChecker.LocalAttributes object at 0x7f26fce3a480>
tmp.77 tmp.77 int <typeChecker.LocalAttributes object at 0x7f26fce3a660>
tmp.78 tmp.78 int <typeChecker.LocalAttributes object at 0x7f26fce3a840>
tmp.79 tmp.79 int <typeChecker.LocalAttributes object at 0x7f26fce3aa20>
tmp.80 tmp.80 int <typeChecker.LocalAttributes object at 0x7f26fce3ac00>
tmp.81 tmp.81 int <typeChecker.LocalAttributes object at 0x7f26fce3ade0>
tmp.82 tmp.82 int <typeChecker.LocalAttributes object at 0x7f26fce3b110>
tmp.83 tmp.83 int <typeChecker.LocalAttributes object at 0x7f26fce3aff0>
tmp.84 tmp.84 int <typeChecker.LocalAttributes object at 0x7f26fce3b320>
tmp.85 tmp.85 int <typeChecker.LocalAttributes object at 0x7f26fce3b500>
tmp.86 tmp.86 int <typeChecker.LocalAttributes object at 0x7f26fce3b740>
tmp.87 tmp.87 int <typeChecker.LocalAttributes object at 0x7f26fce3bad0>
tmp.88 tmp.88 int <typeChecker.LocalAttributes object at 0x7f26fce3bc20>
tmp.89 tmp.89 int <typeChecker.LocalAttributes object at 0x7f26fce3bd70>
tmp.90 tmp.90 int <typeChecker.LocalAttributes object at 0x7f26fce3bec0>
tmp.91 tmp.91 int <typeChecker.LocalAttributes object at 0x7f26fce3bfb0>
tmp.92 tmp.92 int <typeChecker.LocalAttributes object at 0x7f26fce401a0>
tmp.93 tmp.93 int <typeChecker.LocalAttributes object at 0x7f26fce402f0>
tmp.94 tmp.94 int <typeChecker.LocalAttributes object at 0x7f26fce40440>
tmp.95 tmp.95 int <typeChecker.LocalAttributes object at 0x7f26fce40590>
tmp.96 tmp.96 int <typeChecker.LocalAttributes object at 0x7f26fce406e0>
tmp.97 tmp.97 int <typeChecker.LocalAttributes object at 0x7f26fce40830>
tmp.98 tmp.98 int <typeChecker.LocalAttributes object at 0x7f26fce40980>
tmp.99 tmp.99 int <typeChecker.LocalAttributes object at 0x7f26fce40b00>
tmp.100 tmp.100 int <typeChecker.LocalAttributes object at 0x7f26fce400b0>
tmp.101 tmp.101 int <typeChecker.LocalAttributes object at 0x7f26fce40c80>
tmp.102 tmp.102 int <typeChecker.LocalAttributes object at 0x7f26fce38830>
tmp.104 tmp.104 int <typeChecker.LocalAttributes object at 0x7f26fce410d0>
--------------LIVE for block 2-------------------
Return 0 {glob_three}
Label(tmp.103) {glob_three}
OLD ANNOT: set()
NEW ANNOT: {glob_three}
--------------LIVE for block 1-------------------
Return tmp.104 {glob_three}
tmp.104 = -1 {tmp.104, glob_three}
OLD ANNOT: set()
NEW ANNOT: {glob_three}
--------------LIVE for block 0-------------------
JumpIfZero(tmp.101, tmp.103) {glob_three}
tmp.101 = tmp.47 != 6 {tmp.101, glob_three}
tmp.100 = check_12_ints([tmp.74, tmp.75, tmp.76, tmp.77, tmp.78, tmp.79, tmp.80, tmp.81, tmp.83, tmp.84, tmp.85, tmp.86, 13]) {glob_three, tmp.47}
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_ConstantValue'>
tmp.86 = tmp.74 + 11 {tmp.83, tmp.86, tmp.85, tmp.81, tmp.77, tmp.78, tmp.79, tmp.76, tmp.84, tmp.75, glob_three, tmp.47, tmp.74, tmp.80}
tmp.85 = 6 + tmp.78 {tmp.83, tmp.85, tmp.81, tmp.77, tmp.47, tmp.79, tmp.76, tmp.84, tmp.75, glob_three, tmp.78, tmp.74, tmp.80}
tmp.84 = tmp.76 + 7 {tmp.83, tmp.81, tmp.77, tmp.47, tmp.79, tmp.76, tmp.84, tmp.75, glob_three, tmp.78, tmp.74, tmp.80}
tmp.83 = tmp.82 - 5 {tmp.83, tmp.81, tmp.77, tmp.47, tmp.79, tmp.76, tmp.75, glob_three, tmp.78, tmp.74, tmp.80}
tmp.82 = tmp.74 * 2 {tmp.81, tmp.77, tmp.82, tmp.47, tmp.79, tmp.76, tmp.75, glob_three, tmp.78, tmp.74, tmp.80}
tmp.81 = tmp.76 + 5 {tmp.81, tmp.77, tmp.47, tmp.79, tmp.76, tmp.75, glob_three, tmp.78, tmp.74, tmp.80}
tmp.80 = 35 - tmp.77 {tmp.77, tmp.47, tmp.79, tmp.76, tmp.75, glob_three, tmp.78, tmp.74, tmp.80}
tmp.79 = 32 - tmp.75 {tmp.77, tmp.47, tmp.79, tmp.76, tmp.75, glob_three, tmp.78, tmp.74}
tmp.78 = 4 + tmp.74 {tmp.76, tmp.75, glob_three, tmp.78, tmp.77, tmp.74, tmp.47}
tmp.77 = tmp.75 + 2 {tmp.76, tmp.75, glob_three, tmp.47, tmp.77, tmp.74}
tmp.76 = 28 - tmp.74 {tmp.76, tmp.75, glob_three, tmp.47, tmp.74}
tmp.75 = tmp.74 + 1 {tmp.74, tmp.75, glob_three, tmp.47}
tmp.74 = 10 + glob_three {tmp.74, glob_three, tmp.47}
tmp.73 = check_12_ints([tmp.48, tmp.49, tmp.50, tmp.51, tmp.52, tmp.53, tmp.54, tmp.55, tmp.56, tmp.57, tmp.58, tmp.59, 1]) {glob_three, tmp.47}
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_VariableValue'>
<class 'tacGenerator.TAC_ConstantValue'>
tmp.59 = tmp.53 + tmp.53 {tmp.56, tmp.50, tmp.55, tmp.51, tmp.57, tmp.59, tmp.49, tmp.52, glob_three, tmp.47, tmp.54, tmp.48, tmp.53, tmp.58}
tmp.58 = 16 - tmp.52 {tmp.56, tmp.50, tmp.55, tmp.51, tmp.57, tmp.49, tmp.52, glob_three, tmp.47, tmp.54, tmp.48, tmp.53, tmp.58}
tmp.57 = tmp.51 + tmp.53 {tmp.56, tmp.50, tmp.55, tmp.51, tmp.57, tmp.49, tmp.52, glob_three, tmp.47, tmp.54, tmp.48, tmp.53}
tmp.56 = tmp.50 * tmp.50 {tmp.56, tmp.50, tmp.55, tmp.51, tmp.49, tmp.52, glob_three, tmp.47, tmp.54, tmp.48, tmp.53}
tmp.55 = tmp.49 * 4 {tmp.50, tmp.55, tmp.51, tmp.49, tmp.52, glob_three, tmp.47, tmp.54, tmp.48, tmp.53}
tmp.54 = tmp.48 + 6 {tmp.50, tmp.51, tmp.49, tmp.52, glob_three, tmp.47, tmp.54, tmp.48, tmp.53}
tmp.53 = tmp.49 * tmp.50 {tmp.50, tmp.51, tmp.49, tmp.52, glob_three, tmp.47, tmp.48, tmp.53}
tmp.52 = 6 - tmp.48 {tmp.48, tmp.49, tmp.52, glob_three, tmp.47, tmp.50, tmp.51}
tmp.51 = tmp.49 * tmp.49 {tmp.48, tmp.49, glob_three, tmp.47, tmp.50, tmp.51}
tmp.50 = 2 + tmp.48 {tmp.49, glob_three, tmp.47, tmp.50, tmp.48}
tmp.49 = tmp.48 + tmp.48 {tmp.48, tmp.49, glob_three, tmp.47}
tmp.48 = glob_three - 2 {tmp.48, glob_three, tmp.47}
tmp.47 = glob_three + 3 {glob_three, tmp.47}
OLD ANNOT: set()
NEW ANNOT: {glob_three}
------------REMOVE DEAD STORE INSTRUCTIONS.-------------
------------AFTER DEAD STORE REMOVAL.-------------
ENTRY Entry: ENTRY {0}
0 0: [tmp.47 = glob_three + 3, tmp.48 = glob_three - 2, tmp.49 = tmp.48 + tmp.48, tmp.50 = 2 + tmp.48, tmp.51 = tmp.49 * tmp.49, tmp.52 = 6 - tmp.48, tmp.53 = tmp.49 * tmp.50, tmp.54 = tmp.48 + 6, tmp.55 = tmp.49 * 4, tmp.56 = tmp.50 * tmp.50, tmp.57 = tmp.51 + tmp.53, tmp.58 = 16 - tmp.52, tmp.59 = tmp.53 + tmp.53, tmp.73 = check_12_ints([tmp.48, tmp.49, tmp.50, tmp.51, tmp.52, tmp.53, tmp.54, tmp.55, tmp.56, tmp.57, tmp.58, tmp.59, 1]), tmp.74 = 10 + glob_three, tmp.75 = tmp.74 + 1, tmp.76 = 28 - tmp.74, tmp.77 = tmp.75 + 2, tmp.78 = 4 + tmp.74, tmp.79 = 32 - tmp.75, tmp.80 = 35 - tmp.77, tmp.81 = tmp.76 + 5, tmp.82 = tmp.74 * 2, tmp.83 = tmp.82 - 5, tmp.84 = tmp.76 + 7, tmp.85 = 6 + tmp.78, tmp.86 = tmp.74 + 11, tmp.100 = check_12_ints([tmp.74, tmp.75, tmp.76, tmp.77, tmp.78, tmp.79, tmp.80, tmp.81, tmp.83, tmp.84, tmp.85, tmp.86, 13]), tmp.101 = tmp.47 != 6, JumpIfZero(tmp.101, tmp.103)] Pred: {ENTRY} Suc: {1, 2} iMap: {tmp.47 = glob_three + 3: {glob_three, tmp.47}, tmp.48 = glob_three - 2: {tmp.48, glob_three, tmp.47}, tmp.49 = tmp.48 + tmp.48: {tmp.48, tmp.49, glob_three, tmp.47}, tmp.50 = 2 + tmp.48: {tmp.49, glob_three, tmp.47, tmp.50, tmp.48}, tmp.51 = tmp.49 * tmp.49: {tmp.48, tmp.49, glob_three, tmp.47, tmp.50, tmp.51}, tmp.52 = 6 - tmp.48: {tmp.48, tmp.49, tmp.52, glob_three, tmp.47, tmp.50, tmp.51}, tmp.53 = tmp.49 * tmp.50: {tmp.50, tmp.51, tmp.49, tmp.52, glob_three, tmp.47, tmp.48, tmp.53}, tmp.54 = tmp.48 + 6: {tmp.50, tmp.51, tmp.49, tmp.52, glob_three, tmp.47, tmp.54, tmp.48, tmp.53}, tmp.55 = tmp.49 * 4: {tmp.50, tmp.55, tmp.51, tmp.49, tmp.52, glob_three, tmp.47, tmp.54, tmp.48, tmp.53}, tmp.56 = tmp.50 * tmp.50: {tmp.56, tmp.50, tmp.55, tmp.51, tmp.49, tmp.52, glob_three, tmp.47, tmp.54, tmp.48, tmp.53}, tmp.57 = tmp.51 + tmp.53: {tmp.56, tmp.50, tmp.55, tmp.51, tmp.57, tmp.49, tmp.52, glob_three, tmp.47, tmp.54, tmp.48, tmp.53}, tmp.58 = 16 - tmp.52: {tmp.56, tmp.50, tmp.55, tmp.51, tmp.57, tmp.49, tmp.52, glob_three, tmp.47, tmp.54, tmp.48, tmp.53, tmp.58}, tmp.59 = tmp.53 + tmp.53: {tmp.56, tmp.50, tmp.55, tmp.51, tmp.57, tmp.59, tmp.49, tmp.52, glob_three, tmp.47, tmp.54, tmp.48, tmp.53, tmp.58}, tmp.73 = check_12_ints([tmp.48, tmp.49, tmp.50, tmp.51, tmp.52, tmp.53, tmp.54, tmp.55, tmp.56, tmp.57, tmp.58, tmp.59, 1]): {glob_three, tmp.47}, tmp.74 = 10 + glob_three: {tmp.74, glob_three, tmp.47}, tmp.75 = tmp.74 + 1: {tmp.74, tmp.75, glob_three, tmp.47}, tmp.76 = 28 - tmp.74: {tmp.76, tmp.75, glob_three, tmp.47, tmp.74}, tmp.77 = tmp.75 + 2: {tmp.76, tmp.75, glob_three, tmp.47, tmp.77, tmp.74}, tmp.78 = 4 + tmp.74: {tmp.76, tmp.75, glob_three, tmp.78, tmp.77, tmp.74, tmp.47}, tmp.79 = 32 - tmp.75: {tmp.77, tmp.47, tmp.79, tmp.76, tmp.75, glob_three, tmp.78, tmp.74}, tmp.80 = 35 - tmp.77: {tmp.77, tmp.47, tmp.79, tmp.76, tmp.75, glob_three, tmp.78, tmp.74, tmp.80}, tmp.81 = tmp.76 + 5: {tmp.81, tmp.77, tmp.47, tmp.79, tmp.76, tmp.75, glob_three, tmp.78, tmp.74, tmp.80}, tmp.82 = tmp.74 * 2: {tmp.81, tmp.77, tmp.82, tmp.47, tmp.79, tmp.76, tmp.75, glob_three, tmp.78, tmp.74, tmp.80}, tmp.83 = tmp.82 - 5: {tmp.83, tmp.81, tmp.77, tmp.47, tmp.79, tmp.76, tmp.75, glob_three, tmp.78, tmp.74, tmp.80}, tmp.84 = tmp.76 + 7: {tmp.83, tmp.81, tmp.77, tmp.47, tmp.79, tmp.76, tmp.84, tmp.75, glob_three, tmp.78, tmp.74, tmp.80}, tmp.85 = 6 + tmp.78: {tmp.83, tmp.85, tmp.81, tmp.77, tmp.47, tmp.79, tmp.76, tmp.84, tmp.75, glob_three, tmp.78, tmp.74, tmp.80}, tmp.86 = tmp.74 + 11: {tmp.83, tmp.86, tmp.85, tmp.81, tmp.77, tmp.78, tmp.79, tmp.76, tmp.84, tmp.75, glob_three, tmp.47, tmp.74, tmp.80}, tmp.100 = check_12_ints([tmp.74, tmp.75, tmp.76, tmp.77, tmp.78, tmp.79, tmp.80, tmp.81, tmp.83, tmp.84, tmp.85, tmp.86, 13]): {glob_three, tmp.47}, tmp.101 = tmp.47 != 6: {tmp.101, glob_three}, JumpIfZero(tmp.101, tmp.103): {glob_three}} ReachingCopies: {glob_three}
1 1: [tmp.104 = -1, Return tmp.104] Pred: {0} Suc: {EXIT} iMap: {tmp.104 = -1: {tmp.104, glob_three}, Return tmp.104: {glob_three}} ReachingCopies: {glob_three}
2 2: [Label(tmp.103), Return 0] Pred: {0} Suc: {EXIT} iMap: {Label(tmp.103): {glob_three}, Return 0: {glob_three}} ReachingCopies: {glob_three}
EXIT Exit: EXIT {1, 2}
--------------ADDRESS TAKEN ANALYSIS.------------------
{glob_three}
TAC Program:[Function: target ([]) instructions:[tmp.47 = glob_three + 3, tmp.48 = glob_three - 2, tmp.49 = tmp.48 + tmp.48, tmp.50 = 2 + tmp.48, tmp.51 = tmp.49 * tmp.49, tmp.52 = 6 - tmp.48, tmp.53 = tmp.49 * tmp.50, tmp.54 = tmp.48 + 6, tmp.55 = tmp.49 * 4, tmp.56 = tmp.50 * tmp.50, tmp.57 = tmp.51 + tmp.53, tmp.58 = 16 - tmp.52, tmp.59 = tmp.53 + tmp.53, tmp.73 = check_12_ints([tmp.48, tmp.49, tmp.50, tmp.51, tmp.52, tmp.53, tmp.54, tmp.55, tmp.56, tmp.57, tmp.58, tmp.59, 1]), tmp.74 = 10 + glob_three, tmp.75 = tmp.74 + 1, tmp.76 = 28 - tmp.74, tmp.77 = tmp.75 + 2, tmp.78 = 4 + tmp.74, tmp.79 = 32 - tmp.75, tmp.80 = 35 - tmp.77, tmp.81 = tmp.76 + 5, tmp.82 = tmp.74 * 2, tmp.83 = tmp.82 - 5, tmp.84 = tmp.76 + 7, tmp.85 = 6 + tmp.78, tmp.86 = tmp.74 + 11, tmp.100 = check_12_ints([tmp.74, tmp.75, tmp.76, tmp.77, tmp.78, tmp.79, tmp.80, tmp.81, tmp.83, tmp.84, tmp.85, tmp.86, 13]), tmp.101 = tmp.47 != 6, JumpIfZero(tmp.101, tmp.103), tmp.104 = -1, Return tmp.104, Label(tmp.103), Return 0], Global: True glob_three = [c_int(3)]]
Type Table:
 {}
Symbol Table:
 {'check_one_int': check_one_int FunType: ParamTypes: [int, int] Return Type: int Defined: False Global: True, 'check_5_ints': check_5_ints FunType: ParamTypes: [int, int, int, int, int, int] Return Type: int Defined: False Global: True, 'check_12_ints': check_12_ints FunType: ParamTypes: [int, int, int, int, int, int, int, int, int, int, int, int, int] Return Type: int Defined: False Global: True, 'id': id FunType: ParamTypes: [int] Return Type: int Defined: False Global: True, 'glob_three': glob_three int InitialVal: InitialList: [c_int(3)] Global: True, 'target': target FunType: ParamTypes: [] Return Type: int Defined: True Global: True, 'should_spill.22': should_spill.22 int <typeChecker.LocalAttributes object at 0x7f26fce31370>, 'one.23': one.23 int <typeChecker.LocalAttributes object at 0x7f26fce315b0>, 'two.24': two.24 int <typeChecker.LocalAttributes object at 0x7f26fce317f0>, 'three.25': three.25 int <typeChecker.LocalAttributes object at 0x7f26fce31a00>, 'four.26': four.26 int <typeChecker.LocalAttributes object at 0x7f26fce31c40>, 'five.27': five.27 int <typeChecker.LocalAttributes object at 0x7f26fce31e50>, 'six.28': six.28 int <typeChecker.LocalAttributes object at 0x7f26fce32090>, 'seven.29': seven.29 int <typeChecker.LocalAttributes object at 0x7f26fce322a0>, 'eight.30': eight.30 int <typeChecker.LocalAttributes object at 0x7f26fce324e0>, 'nine.31': nine.31 int <typeChecker.LocalAttributes object at 0x7f26fce32720>, 'ten.32': ten.32 int <typeChecker.LocalAttributes object at 0x7f26fce32930>, 'eleven.33': eleven.33 int <typeChecker.LocalAttributes object at 0x7f26fce32b40>, 'twelve.34': twelve.34 int <typeChecker.LocalAttributes object at 0x7f26fce32d80>, 'thirteen.35': thirteen.35 int <typeChecker.LocalAttributes object at 0x7f26fce33560>, 'fourteen.36': fourteen.36 int <typeChecker.LocalAttributes object at 0x7f26fce337a0>, 'fifteen.37': fifteen.37 int <typeChecker.LocalAttributes object at 0x7f26fce339e0>, 'sixteen.38': sixteen.38 int <typeChecker.LocalAttributes object at 0x7f26fce33c20>, 'seventeen.39': seventeen.39 int <typeChecker.LocalAttributes object at 0x7f26fce33e60>, 'eighteen.40': eighteen.40 int <typeChecker.LocalAttributes object at 0x7f26fce340e0>, 'nineteen.41': nineteen.41 int <typeChecker.LocalAttributes object at 0x7f26fce34350>, 'twenty.42': twenty.42 int <typeChecker.LocalAttributes object at 0x7f26fce345c0>, 'twenty_one.43': twenty_one.43 int <typeChecker.LocalAttributes object at 0x7f26fce34830>, 'twenty_two.44': twenty_two.44 int <typeChecker.LocalAttributes object at 0x7f26fce34b60>, 'twenty_three.45': twenty_three.45 int <typeChecker.LocalAttributes object at 0x7f26fce34dd0>, 'twenty_four.46': twenty_four.46 int <typeChecker.LocalAttributes object at 0x7f26fce35040>, 'tmp.47': tmp.47 int <typeChecker.LocalAttributes object at 0x7f26fce375c0>, 'tmp.48': tmp.48 int <typeChecker.LocalAttributes object at 0x7f26fce377a0>, 'tmp.49': tmp.49 int <typeChecker.LocalAttributes object at 0x7f26fce37980>, 'tmp.50': tmp.50 int <typeChecker.LocalAttributes object at 0x7f26fce37b60>, 'tmp.51': tmp.51 int <typeChecker.LocalAttributes object at 0x7f26fce37d40>, 'tmp.52': tmp.52 int <typeChecker.LocalAttributes object at 0x7f26fce37f20>, 'tmp.53': tmp.53 int <typeChecker.LocalAttributes object at 0x7f26fce38140>, 'tmp.54': tmp.54 int <typeChecker.LocalAttributes object at 0x7f26fce38320>, 'tmp.55': tmp.55 int <typeChecker.LocalAttributes object at 0x7f26fce386b0>, 'tmp.56': tmp.56 int <typeChecker.LocalAttributes object at 0x7f26fce386e0>, 'tmp.57': tmp.57 int <typeChecker.LocalAttributes object at 0x7f26fce388c0>, 'tmp.58': tmp.58 int <typeChecker.LocalAttributes object at 0x7f26fce38b00>, 'tmp.59': tmp.59 int <typeChecker.LocalAttributes object at 0x7f26fce38ce0>, 'tmp.60': tmp.60 int <typeChecker.LocalAttributes object at 0x7f26fce38fe0>, 'tmp.61': tmp.61 int <typeChecker.LocalAttributes object at 0x7f26fce39130>, 'tmp.62': tmp.62 int <typeChecker.LocalAttributes object at 0x7f26fce39280>, 'tmp.63': tmp.63 int <typeChecker.LocalAttributes object at 0x7f26fce393d0>, 'tmp.64': tmp.64 int <typeChecker.LocalAttributes object at 0x7f26fce39520>, 'tmp.65': tmp.65 int <typeChecker.LocalAttributes object at 0x7f26fce39670>, 'tmp.66': tmp.66 int <typeChecker.LocalAttributes object at 0x7f26fce397c0>, 'tmp.67': tmp.67 int <typeChecker.LocalAttributes object at 0x7f26fce39910>, 'tmp.68': tmp.68 int <typeChecker.LocalAttributes object at 0x7f26fce39a60>, 'tmp.69': tmp.69 int <typeChecker.LocalAttributes object at 0x7f26fce39bb0>, 'tmp.70': tmp.70 int <typeChecker.LocalAttributes object at 0x7f26fce39d00>, 'tmp.71': tmp.71 int <typeChecker.LocalAttributes object at 0x7f26fce39e50>, 'tmp.72': tmp.72 int <typeChecker.LocalAttributes object at 0x7f26fce39fa0>, 'tmp.73': tmp.73 int <typeChecker.LocalAttributes object at 0x7f26fce38ef0>, 'tmp.74': tmp.74 int <typeChecker.LocalAttributes object at 0x7f26fce3a0c0>, 'tmp.75': tmp.75 int <typeChecker.LocalAttributes object at 0x7f26fce3a2a0>, 'tmp.76': tmp.76 int <typeChecker.LocalAttributes object at 0x7f26fce3a480>, 'tmp.77': tmp.77 int <typeChecker.LocalAttributes object at 0x7f26fce3a660>, 'tmp.78': tmp.78 int <typeChecker.LocalAttributes object at 0x7f26fce3a840>, 'tmp.79': tmp.79 int <typeChecker.LocalAttributes object at 0x7f26fce3aa20>, 'tmp.80': tmp.80 int <typeChecker.LocalAttributes object at 0x7f26fce3ac00>, 'tmp.81': tmp.81 int <typeChecker.LocalAttributes object at 0x7f26fce3ade0>, 'tmp.82': tmp.82 int <typeChecker.LocalAttributes object at 0x7f26fce3b110>, 'tmp.83': tmp.83 int <typeChecker.LocalAttributes object at 0x7f26fce3aff0>, 'tmp.84': tmp.84 int <typeChecker.LocalAttributes object at 0x7f26fce3b320>, 'tmp.85': tmp.85 int <typeChecker.LocalAttributes object at 0x7f26fce3b500>, 'tmp.86': tmp.86 int <typeChecker.LocalAttributes object at 0x7f26fce3b740>, 'tmp.87': tmp.87 int <typeChecker.LocalAttributes object at 0x7f26fce3bad0>, 'tmp.88': tmp.88 int <typeChecker.LocalAttributes object at 0x7f26fce3bc20>, 'tmp.89': tmp.89 int <typeChecker.LocalAttributes object at 0x7f26fce3bd70>, 'tmp.90': tmp.90 int <typeChecker.LocalAttributes object at 0x7f26fce3bec0>, 'tmp.91': tmp.91 int <typeChecker.LocalAttributes object at 0x7f26fce3bfb0>, 'tmp.92': tmp.92 int <typeChecker.LocalAttributes object at 0x7f26fce401a0>, 'tmp.93': tmp.93 int <typeChecker.LocalAttributes object at 0x7f26fce402f0>, 'tmp.94': tmp.94 int <typeChecker.LocalAttributes object at 0x7f26fce40440>, 'tmp.95': tmp.95 int <typeChecker.LocalAttributes object at 0x7f26fce40590>, 'tmp.96': tmp.96 int <typeChecker.LocalAttributes object at 0x7f26fce406e0>, 'tmp.97': tmp.97 int <typeChecker.LocalAttributes object at 0x7f26fce40830>, 'tmp.98': tmp.98 int <typeChecker.LocalAttributes object at 0x7f26fce40980>, 'tmp.99': tmp.99 int <typeChecker.LocalAttributes object at 0x7f26fce40b00>, 'tmp.100': tmp.100 int <typeChecker.LocalAttributes object at 0x7f26fce400b0>, 'tmp.101': tmp.101 int <typeChecker.LocalAttributes object at 0x7f26fce40c80>, 'tmp.102': tmp.102 int <typeChecker.LocalAttributes object at 0x7f26fce38830>, 'tmp.104': tmp.104 int <typeChecker.LocalAttributes object at 0x7f26fce410d0>}
All Aliased Vars:
 {glob_three}
IntParams: []
IntDests: [(Longword, Pseudo(tmp.73))]
DoubleDests: []
ReturnInMemory: False
Operand: Pseudo(tmp.48)
Operand: Pseudo(tmp.49)
Operand: Pseudo(tmp.50)
Operand: Pseudo(tmp.51)
Operand: Pseudo(tmp.52)
Operand: Pseudo(tmp.53)
Operand: Pseudo(tmp.54)
Operand: Pseudo(tmp.55)
Operand: Pseudo(tmp.56)
Operand: Pseudo(tmp.57)
Operand: Pseudo(tmp.58)
Operand: Pseudo(tmp.59)
Operand: Imm(1)
IntArgs: [(Longword, Pseudo(tmp.48)), (Longword, Pseudo(tmp.49)), (Longword, Pseudo(tmp.50)), (Longword, Pseudo(tmp.51)), (Longword, Pseudo(tmp.52)), (Longword, Pseudo(tmp.53))]
DoubleArgs: []
StackArgs: [(Longword, Pseudo(tmp.54)), (Longword, Pseudo(tmp.55)), (Longword, Pseudo(tmp.56)), (Longword, Pseudo(tmp.57)), (Longword, Pseudo(tmp.58)), (Longword, Pseudo(tmp.59)), (Longword, <assemblyGenerator.ImmediateOperand object at 0x7f26fce4f4a0>)]
IntDests: [(Longword, Pseudo(tmp.100))]
DoubleDests: []
ReturnInMemory: False
Operand: Pseudo(tmp.74)
Operand: Pseudo(tmp.75)
Operand: Pseudo(tmp.76)
Operand: Pseudo(tmp.77)
Operand: Pseudo(tmp.78)
Operand: Pseudo(tmp.79)
Operand: Pseudo(tmp.80)
Operand: Pseudo(tmp.81)
Operand: Pseudo(tmp.83)
Operand: Pseudo(tmp.84)
Operand: Pseudo(tmp.85)
Operand: Pseudo(tmp.86)
Operand: Imm(13)
IntArgs: [(Longword, Pseudo(tmp.74)), (Longword, Pseudo(tmp.75)), (Longword, Pseudo(tmp.76)), (Longword, Pseudo(tmp.77)), (Longword, Pseudo(tmp.78)), (Longword, Pseudo(tmp.79))]
DoubleArgs: []
StackArgs: [(Longword, Pseudo(tmp.80)), (Longword, Pseudo(tmp.81)), (Longword, Pseudo(tmp.83)), (Longword, Pseudo(tmp.84)), (Longword, Pseudo(tmp.85)), (Longword, Pseudo(tmp.86)), (Longword, <assemblyGenerator.ImmediateOperand object at 0x7f26fce74410>)]
<class 'parser.IntType'>
ASM Program: [Function target stackOffset: None global: True instructions:[AssType: Longword Mov(Pseudo(glob_three), Pseudo(tmp.47)), AssType: Longword Binary(Add, Imm(3), Pseudo(tmp.47)), AssType: Longword Mov(Pseudo(glob_three), Pseudo(tmp.48)), AssType: Longword Binary(Sub, Imm(2), Pseudo(tmp.48)), AssType: Longword Mov(Pseudo(tmp.48), Pseudo(tmp.49)), AssType: Longword Binary(Add, Pseudo(tmp.48), Pseudo(tmp.49)), AssType: Longword Mov(Imm(2), Pseudo(tmp.50)), AssType: Longword Binary(Add, Pseudo(tmp.48), Pseudo(tmp.50)), AssType: Longword Mov(Pseudo(tmp.49), Pseudo(tmp.51)), AssType: Longword Binary(Mult, Pseudo(tmp.49), Pseudo(tmp.51)), AssType: Longword Mov(Imm(6), Pseudo(tmp.52)), AssType: Longword Binary(Sub, Pseudo(tmp.48), Pseudo(tmp.52)), AssType: Longword Mov(Pseudo(tmp.49), Pseudo(tmp.53)), AssType: Longword Binary(Mult, Pseudo(tmp.50), Pseudo(tmp.53)), AssType: Longword Mov(Pseudo(tmp.48), Pseudo(tmp.54)), AssType: Longword Binary(Add, Imm(6), Pseudo(tmp.54)), AssType: Longword Mov(Pseudo(tmp.49), Pseudo(tmp.55)), AssType: Longword Binary(Mult, Imm(4), Pseudo(tmp.55)), AssType: Longword Mov(Pseudo(tmp.50), Pseudo(tmp.56)), AssType: Longword Binary(Mult, Pseudo(tmp.50), Pseudo(tmp.56)), AssType: Longword Mov(Pseudo(tmp.51), Pseudo(tmp.57)), AssType: Longword Binary(Add, Pseudo(tmp.53), Pseudo(tmp.57)), AssType: Longword Mov(Imm(16), Pseudo(tmp.58)), AssType: Longword Binary(Sub, Pseudo(tmp.52), Pseudo(tmp.58)), AssType: Longword Mov(Pseudo(tmp.53), Pseudo(tmp.59)), AssType: Longword Binary(Add, Pseudo(tmp.53), Pseudo(tmp.59)), AssType: Quadword Binary(Sub, Imm(8), Reg(SP)), AssType: Longword Mov(Pseudo(tmp.48), Reg(DI)), AssType: Longword Mov(Pseudo(tmp.49), Reg(SI)), AssType: Longword Mov(Pseudo(tmp.50), Reg(DX)), AssType: Longword Mov(Pseudo(tmp.51), Reg(CX)), AssType: Longword Mov(Pseudo(tmp.52), Reg(R8d)), AssType: Longword Mov(Pseudo(tmp.53), Reg(R9d)), Push(Imm(1)), AssType: Longword Mov(Pseudo(tmp.59), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Pseudo(tmp.58), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Pseudo(tmp.57), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Pseudo(tmp.56), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Pseudo(tmp.55), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Pseudo(tmp.54), Reg(AX)), Push(Reg(AX)), Call(check_12_ints), AssType: Quadword Binary(Add, Imm(64), Reg(SP)), AssType: Longword Mov(Reg(AX), Pseudo(tmp.73)), AssType: Longword Mov(Imm(10), Pseudo(tmp.74)), AssType: Longword Binary(Add, Pseudo(glob_three), Pseudo(tmp.74)), AssType: Longword Mov(Pseudo(tmp.74), Pseudo(tmp.75)), AssType: Longword Binary(Add, Imm(1), Pseudo(tmp.75)), AssType: Longword Mov(Imm(28), Pseudo(tmp.76)), AssType: Longword Binary(Sub, Pseudo(tmp.74), Pseudo(tmp.76)), AssType: Longword Mov(Pseudo(tmp.75), Pseudo(tmp.77)), AssType: Longword Binary(Add, Imm(2), Pseudo(tmp.77)), AssType: Longword Mov(Imm(4), Pseudo(tmp.78)), AssType: Longword Binary(Add, Pseudo(tmp.74), Pseudo(tmp.78)), AssType: Longword Mov(Imm(32), Pseudo(tmp.79)), AssType: Longword Binary(Sub, Pseudo(tmp.75), Pseudo(tmp.79)), AssType: Longword Mov(Imm(35), Pseudo(tmp.80)), AssType: Longword Binary(Sub, Pseudo(tmp.77), Pseudo(tmp.80)), AssType: Longword Mov(Pseudo(tmp.76), Pseudo(tmp.81)), AssType: Longword Binary(Add, Imm(5), Pseudo(tmp.81)), AssType: Longword Mov(Pseudo(tmp.74), Pseudo(tmp.82)), AssType: Longword Binary(Mult, Imm(2), Pseudo(tmp.82)), AssType: Longword Mov(Pseudo(tmp.82), Pseudo(tmp.83)), AssType: Longword Binary(Sub, Imm(5), Pseudo(tmp.83)), AssType: Longword Mov(Pseudo(tmp.76), Pseudo(tmp.84)), AssType: Longword Binary(Add, Imm(7), Pseudo(tmp.84)), AssType: Longword Mov(Imm(6), Pseudo(tmp.85)), AssType: Longword Binary(Add, Pseudo(tmp.78), Pseudo(tmp.85)), AssType: Longword Mov(Pseudo(tmp.74), Pseudo(tmp.86)), AssType: Longword Binary(Add, Imm(11), Pseudo(tmp.86)), AssType: Quadword Binary(Sub, Imm(8), Reg(SP)), AssType: Longword Mov(Pseudo(tmp.74), Reg(DI)), AssType: Longword Mov(Pseudo(tmp.75), Reg(SI)), AssType: Longword Mov(Pseudo(tmp.76), Reg(DX)), AssType: Longword Mov(Pseudo(tmp.77), Reg(CX)), AssType: Longword Mov(Pseudo(tmp.78), Reg(R8d)), AssType: Longword Mov(Pseudo(tmp.79), Reg(R9d)), Push(Imm(13)), AssType: Longword Mov(Pseudo(tmp.86), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Pseudo(tmp.85), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Pseudo(tmp.84), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Pseudo(tmp.83), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Pseudo(tmp.81), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Pseudo(tmp.80), Reg(AX)), Push(Reg(AX)), Call(check_12_ints), AssType: Quadword Binary(Add, Imm(64), Reg(SP)), AssType: Longword Mov(Reg(AX), Pseudo(tmp.100)), AssType: Longword Cmp(Imm(6), Pseudo(tmp.47)), AssType: Longword Mov(Imm(0), Pseudo(tmp.101)), SetCC(ConcCodeType.NE, Pseudo(tmp.101)), AssType: Longword Cmp(Imm(0), Pseudo(tmp.101)), JmpCC(ConcCodeType.E, tmp.103), AssType: Longword Mov(Imm(1), Pseudo(tmp.104)), AssType: Longword Unary(Neg, Pseudo(tmp.104)), AssType: Longword Mov(Pseudo(tmp.104), Reg(AX)), ret, Label(tmp.103), AssType: Longword Mov(Imm(0), Reg(AX)), ret], Static Variable: Global = True Alignment = 4 : glob_three = [c_int(3)]]
Type Table:
 {}
Backend Symbol Table:
 {'check_one_int': Defined: False ReturnOnStack: False IntParams: OrderedSet() DoubleParams: OrderedSet() ReturnInt: OrderedSet() ReturnDouble: OrderedSet() CalleeSavedRegs: set(), 'check_5_ints': Defined: False ReturnOnStack: False IntParams: OrderedSet() DoubleParams: OrderedSet() ReturnInt: OrderedSet() ReturnDouble: OrderedSet() CalleeSavedRegs: set(), 'check_12_ints': Defined: False ReturnOnStack: False IntParams: OrderedSet([Reg(DI), Reg(SI), Reg(DX), Reg(CX), Reg(R8d), Reg(R9d)]) DoubleParams: OrderedSet() ReturnInt: OrderedSet([Reg(AX)]) ReturnDouble: OrderedSet() CalleeSavedRegs: set(), 'id': Defined: False ReturnOnStack: False IntParams: OrderedSet() DoubleParams: OrderedSet() ReturnInt: OrderedSet() ReturnDouble: OrderedSet() CalleeSavedRegs: set(), 'glob_three': AssType: Longword IsStatic: True IsConstant: False, 'target': Defined: True ReturnOnStack: False IntParams: OrderedSet() DoubleParams: OrderedSet() ReturnInt: OrderedSet([Reg(AX)]) ReturnDouble: OrderedSet() CalleeSavedRegs: set(), 'should_spill.22': AssType: Longword IsStatic: False IsConstant: False, 'one.23': AssType: Longword IsStatic: False IsConstant: False, 'two.24': AssType: Longword IsStatic: False IsConstant: False, 'three.25': AssType: Longword IsStatic: False IsConstant: False, 'four.26': AssType: Longword IsStatic: False IsConstant: False, 'five.27': AssType: Longword IsStatic: False IsConstant: False, 'six.28': AssType: Longword IsStatic: False IsConstant: False, 'seven.29': AssType: Longword IsStatic: False IsConstant: False, 'eight.30': AssType: Longword IsStatic: False IsConstant: False, 'nine.31': AssType: Longword IsStatic: False IsConstant: False, 'ten.32': AssType: Longword IsStatic: False IsConstant: False, 'eleven.33': AssType: Longword IsStatic: False IsConstant: False, 'twelve.34': AssType: Longword IsStatic: False IsConstant: False, 'thirteen.35': AssType: Longword IsStatic: False IsConstant: False, 'fourteen.36': AssType: Longword IsStatic: False IsConstant: False, 'fifteen.37': AssType: Longword IsStatic: False IsConstant: False, 'sixteen.38': AssType: Longword IsStatic: False IsConstant: False, 'seventeen.39': AssType: Longword IsStatic: False IsConstant: False, 'eighteen.40': AssType: Longword IsStatic: False IsConstant: False, 'nineteen.41': AssType: Longword IsStatic: False IsConstant: False, 'twenty.42': AssType: Longword IsStatic: False IsConstant: False, 'twenty_one.43': AssType: Longword IsStatic: False IsConstant: False, 'twenty_two.44': AssType: Longword IsStatic: False IsConstant: False, 'twenty_three.45': AssType: Longword IsStatic: False IsConstant: False, 'twenty_four.46': AssType: Longword IsStatic: False IsConstant: False, 'tmp.47': AssType: Longword IsStatic: False IsConstant: False, 'tmp.48': AssType: Longword IsStatic: False IsConstant: False, 'tmp.49': AssType: Longword IsStatic: False IsConstant: False, 'tmp.50': AssType: Longword IsStatic: False IsConstant: False, 'tmp.51': AssType: Longword IsStatic: False IsConstant: False, 'tmp.52': AssType: Longword IsStatic: False IsConstant: False, 'tmp.53': AssType: Longword IsStatic: False IsConstant: False, 'tmp.54': AssType: Longword IsStatic: False IsConstant: False, 'tmp.55': AssType: Longword IsStatic: False IsConstant: False, 'tmp.56': AssType: Longword IsStatic: False IsConstant: False, 'tmp.57': AssType: Longword IsStatic: False IsConstant: False, 'tmp.58': AssType: Longword IsStatic: False IsConstant: False, 'tmp.59': AssType: Longword IsStatic: False IsConstant: False, 'tmp.60': AssType: Longword IsStatic: False IsConstant: False, 'tmp.61': AssType: Longword IsStatic: False IsConstant: False, 'tmp.62': AssType: Longword IsStatic: False IsConstant: False, 'tmp.63': AssType: Longword IsStatic: False IsConstant: False, 'tmp.64': AssType: Longword IsStatic: False IsConstant: False, 'tmp.65': AssType: Longword IsStatic: False IsConstant: False, 'tmp.66': AssType: Longword IsStatic: False IsConstant: False, 'tmp.67': AssType: Longword IsStatic: False IsConstant: False, 'tmp.68': AssType: Longword IsStatic: False IsConstant: False, 'tmp.69': AssType: Longword IsStatic: False IsConstant: False, 'tmp.70': AssType: Longword IsStatic: False IsConstant: False, 'tmp.71': AssType: Longword IsStatic: False IsConstant: False, 'tmp.72': AssType: Longword IsStatic: False IsConstant: False, 'tmp.73': AssType: Longword IsStatic: False IsConstant: False, 'tmp.74': AssType: Longword IsStatic: False IsConstant: False, 'tmp.75': AssType: Longword IsStatic: False IsConstant: False, 'tmp.76': AssType: Longword IsStatic: False IsConstant: False, 'tmp.77': AssType: Longword IsStatic: False IsConstant: False, 'tmp.78': AssType: Longword IsStatic: False IsConstant: False, 'tmp.79': AssType: Longword IsStatic: False IsConstant: False, 'tmp.80': AssType: Longword IsStatic: False IsConstant: False, 'tmp.81': AssType: Longword IsStatic: False IsConstant: False, 'tmp.82': AssType: Longword IsStatic: False IsConstant: False, 'tmp.83': AssType: Longword IsStatic: False IsConstant: False, 'tmp.84': AssType: Longword IsStatic: False IsConstant: False, 'tmp.85': AssType: Longword IsStatic: False IsConstant: False, 'tmp.86': AssType: Longword IsStatic: False IsConstant: False, 'tmp.87': AssType: Longword IsStatic: False IsConstant: False, 'tmp.88': AssType: Longword IsStatic: False IsConstant: False, 'tmp.89': AssType: Longword IsStatic: False IsConstant: False, 'tmp.90': AssType: Longword IsStatic: False IsConstant: False, 'tmp.91': AssType: Longword IsStatic: False IsConstant: False, 'tmp.92': AssType: Longword IsStatic: False IsConstant: False, 'tmp.93': AssType: Longword IsStatic: False IsConstant: False, 'tmp.94': AssType: Longword IsStatic: False IsConstant: False, 'tmp.95': AssType: Longword IsStatic: False IsConstant: False, 'tmp.96': AssType: Longword IsStatic: False IsConstant: False, 'tmp.97': AssType: Longword IsStatic: False IsConstant: False, 'tmp.98': AssType: Longword IsStatic: False IsConstant: False, 'tmp.99': AssType: Longword IsStatic: False IsConstant: False, 'tmp.100': AssType: Longword IsStatic: False IsConstant: False, 'tmp.101': AssType: Longword IsStatic: False IsConstant: False, 'tmp.102': AssType: Longword IsStatic: False IsConstant: False, 'tmp.104': AssType: Longword IsStatic: False IsConstant: False}
REGISTER ALLOCATE FUNCTION target
-----------Building INTEGER interference graph.------------------
AssType: Longword Mov(Pseudo(glob_three), Pseudo(tmp.47))
AssType: Longword Mov(Imm(1), Pseudo(tmp.104))
Label(tmp.103)
-------------LABELS-----------------
tmp.103 2: [Label(tmp.103), AssType: Longword Mov(Imm(0), Reg(AX)), ret] Pred: set() Suc: set() iMap: [(Label(tmp.103), set()), (AssType: Longword Mov(Imm(0), Reg(AX)), set()), (ret, set())] ReachingCopies: set()
-------------CONNECTED BLOCKS-----------------
ENTRY Entry: ENTRY {0}
0 0: [AssType: Longword Mov(Pseudo(glob_three), Pseudo(tmp.47)), AssType: Longword Binary(Add, Imm(3), Pseudo(tmp.47)), AssType: Longword Mov(Pseudo(glob_three), Pseudo(tmp.48)), AssType: Longword Binary(Sub, Imm(2), Pseudo(tmp.48)), AssType: Longword Mov(Pseudo(tmp.48), Pseudo(tmp.49)), AssType: Longword Binary(Add, Pseudo(tmp.48), Pseudo(tmp.49)), AssType: Longword Mov(Imm(2), Pseudo(tmp.50)), AssType: Longword Binary(Add, Pseudo(tmp.48), Pseudo(tmp.50)), AssType: Longword Mov(Pseudo(tmp.49), Pseudo(tmp.51)), AssType: Longword Binary(Mult, Pseudo(tmp.49), Pseudo(tmp.51)), AssType: Longword Mov(Imm(6), Pseudo(tmp.52)), AssType: Longword Binary(Sub, Pseudo(tmp.48), Pseudo(tmp.52)), AssType: Longword Mov(Pseudo(tmp.49), Pseudo(tmp.53)), AssType: Longword Binary(Mult, Pseudo(tmp.50), Pseudo(tmp.53)), AssType: Longword Mov(Pseudo(tmp.48), Pseudo(tmp.54)), AssType: Longword Binary(Add, Imm(6), Pseudo(tmp.54)), AssType: Longword Mov(Pseudo(tmp.49), Pseudo(tmp.55)), AssType: Longword Binary(Mult, Imm(4), Pseudo(tmp.55)), AssType: Longword Mov(Pseudo(tmp.50), Pseudo(tmp.56)), AssType: Longword Binary(Mult, Pseudo(tmp.50), Pseudo(tmp.56)), AssType: Longword Mov(Pseudo(tmp.51), Pseudo(tmp.57)), AssType: Longword Binary(Add, Pseudo(tmp.53), Pseudo(tmp.57)), AssType: Longword Mov(Imm(16), Pseudo(tmp.58)), AssType: Longword Binary(Sub, Pseudo(tmp.52), Pseudo(tmp.58)), AssType: Longword Mov(Pseudo(tmp.53), Pseudo(tmp.59)), AssType: Longword Binary(Add, Pseudo(tmp.53), Pseudo(tmp.59)), AssType: Quadword Binary(Sub, Imm(8), Reg(SP)), AssType: Longword Mov(Pseudo(tmp.48), Reg(DI)), AssType: Longword Mov(Pseudo(tmp.49), Reg(SI)), AssType: Longword Mov(Pseudo(tmp.50), Reg(DX)), AssType: Longword Mov(Pseudo(tmp.51), Reg(CX)), AssType: Longword Mov(Pseudo(tmp.52), Reg(R8d)), AssType: Longword Mov(Pseudo(tmp.53), Reg(R9d)), Push(Imm(1)), AssType: Longword Mov(Pseudo(tmp.59), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Pseudo(tmp.58), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Pseudo(tmp.57), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Pseudo(tmp.56), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Pseudo(tmp.55), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Pseudo(tmp.54), Reg(AX)), Push(Reg(AX)), Call(check_12_ints), AssType: Quadword Binary(Add, Imm(64), Reg(SP)), AssType: Longword Mov(Reg(AX), Pseudo(tmp.73)), AssType: Longword Mov(Imm(10), Pseudo(tmp.74)), AssType: Longword Binary(Add, Pseudo(glob_three), Pseudo(tmp.74)), AssType: Longword Mov(Pseudo(tmp.74), Pseudo(tmp.75)), AssType: Longword Binary(Add, Imm(1), Pseudo(tmp.75)), AssType: Longword Mov(Imm(28), Pseudo(tmp.76)), AssType: Longword Binary(Sub, Pseudo(tmp.74), Pseudo(tmp.76)), AssType: Longword Mov(Pseudo(tmp.75), Pseudo(tmp.77)), AssType: Longword Binary(Add, Imm(2), Pseudo(tmp.77)), AssType: Longword Mov(Imm(4), Pseudo(tmp.78)), AssType: Longword Binary(Add, Pseudo(tmp.74), Pseudo(tmp.78)), AssType: Longword Mov(Imm(32), Pseudo(tmp.79)), AssType: Longword Binary(Sub, Pseudo(tmp.75), Pseudo(tmp.79)), AssType: Longword Mov(Imm(35), Pseudo(tmp.80)), AssType: Longword Binary(Sub, Pseudo(tmp.77), Pseudo(tmp.80)), AssType: Longword Mov(Pseudo(tmp.76), Pseudo(tmp.81)), AssType: Longword Binary(Add, Imm(5), Pseudo(tmp.81)), AssType: Longword Mov(Pseudo(tmp.74), Pseudo(tmp.82)), AssType: Longword Binary(Mult, Imm(2), Pseudo(tmp.82)), AssType: Longword Mov(Pseudo(tmp.82), Pseudo(tmp.83)), AssType: Longword Binary(Sub, Imm(5), Pseudo(tmp.83)), AssType: Longword Mov(Pseudo(tmp.76), Pseudo(tmp.84)), AssType: Longword Binary(Add, Imm(7), Pseudo(tmp.84)), AssType: Longword Mov(Imm(6), Pseudo(tmp.85)), AssType: Longword Binary(Add, Pseudo(tmp.78), Pseudo(tmp.85)), AssType: Longword Mov(Pseudo(tmp.74), Pseudo(tmp.86)), AssType: Longword Binary(Add, Imm(11), Pseudo(tmp.86)), AssType: Quadword Binary(Sub, Imm(8), Reg(SP)), AssType: Longword Mov(Pseudo(tmp.74), Reg(DI)), AssType: Longword Mov(Pseudo(tmp.75), Reg(SI)), AssType: Longword Mov(Pseudo(tmp.76), Reg(DX)), AssType: Longword Mov(Pseudo(tmp.77), Reg(CX)), AssType: Longword Mov(Pseudo(tmp.78), Reg(R8d)), AssType: Longword Mov(Pseudo(tmp.79), Reg(R9d)), Push(Imm(13)), AssType: Longword Mov(Pseudo(tmp.86), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Pseudo(tmp.85), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Pseudo(tmp.84), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Pseudo(tmp.83), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Pseudo(tmp.81), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Pseudo(tmp.80), Reg(AX)), Push(Reg(AX)), Call(check_12_ints), AssType: Quadword Binary(Add, Imm(64), Reg(SP)), AssType: Longword Mov(Reg(AX), Pseudo(tmp.100)), AssType: Longword Cmp(Imm(6), Pseudo(tmp.47)), AssType: Longword Mov(Imm(0), Pseudo(tmp.101)), SetCC(ConcCodeType.NE, Pseudo(tmp.101)), AssType: Longword Cmp(Imm(0), Pseudo(tmp.101)), JmpCC(ConcCodeType.E, tmp.103)] Pred: {ENTRY} Suc: {1, 2} iMap: [(AssType: Longword Mov(Pseudo(glob_three), Pseudo(tmp.47)), set()), (AssType: Longword Binary(Add, Imm(3), Pseudo(tmp.47)), set()), (AssType: Longword Mov(Pseudo(glob_three), Pseudo(tmp.48)), set()), (AssType: Longword Binary(Sub, Imm(2), Pseudo(tmp.48)), set()), (AssType: Longword Mov(Pseudo(tmp.48), Pseudo(tmp.49)), set()), (AssType: Longword Binary(Add, Pseudo(tmp.48), Pseudo(tmp.49)), set()), (AssType: Longword Mov(Imm(2), Pseudo(tmp.50)), set()), (AssType: Longword Binary(Add, Pseudo(tmp.48), Pseudo(tmp.50)), set()), (AssType: Longword Mov(Pseudo(tmp.49), Pseudo(tmp.51)), set()), (AssType: Longword Binary(Mult, Pseudo(tmp.49), Pseudo(tmp.51)), set()), (AssType: Longword Mov(Imm(6), Pseudo(tmp.52)), set()), (AssType: Longword Binary(Sub, Pseudo(tmp.48), Pseudo(tmp.52)), set()), (AssType: Longword Mov(Pseudo(tmp.49), Pseudo(tmp.53)), set()), (AssType: Longword Binary(Mult, Pseudo(tmp.50), Pseudo(tmp.53)), set()), (AssType: Longword Mov(Pseudo(tmp.48), Pseudo(tmp.54)), set()), (AssType: Longword Binary(Add, Imm(6), Pseudo(tmp.54)), set()), (AssType: Longword Mov(Pseudo(tmp.49), Pseudo(tmp.55)), set()), (AssType: Longword Binary(Mult, Imm(4), Pseudo(tmp.55)), set()), (AssType: Longword Mov(Pseudo(tmp.50), Pseudo(tmp.56)), set()), (AssType: Longword Binary(Mult, Pseudo(tmp.50), Pseudo(tmp.56)), set()), (AssType: Longword Mov(Pseudo(tmp.51), Pseudo(tmp.57)), set()), (AssType: Longword Binary(Add, Pseudo(tmp.53), Pseudo(tmp.57)), set()), (AssType: Longword Mov(Imm(16), Pseudo(tmp.58)), set()), (AssType: Longword Binary(Sub, Pseudo(tmp.52), Pseudo(tmp.58)), set()), (AssType: Longword Mov(Pseudo(tmp.53), Pseudo(tmp.59)), set()), (AssType: Longword Binary(Add, Pseudo(tmp.53), Pseudo(tmp.59)), set()), (AssType: Quadword Binary(Sub, Imm(8), Reg(SP)), set()), (AssType: Longword Mov(Pseudo(tmp.48), Reg(DI)), set()), (AssType: Longword Mov(Pseudo(tmp.49), Reg(SI)), set()), (AssType: Longword Mov(Pseudo(tmp.50), Reg(DX)), set()), (AssType: Longword Mov(Pseudo(tmp.51), Reg(CX)), set()), (AssType: Longword Mov(Pseudo(tmp.52), Reg(R8d)), set()), (AssType: Longword Mov(Pseudo(tmp.53), Reg(R9d)), set()), (Push(Imm(1)), set()), (AssType: Longword Mov(Pseudo(tmp.59), Reg(AX)), set()), (Push(Reg(AX)), set()), (AssType: Longword Mov(Pseudo(tmp.58), Reg(AX)), set()), (Push(Reg(AX)), set()), (AssType: Longword Mov(Pseudo(tmp.57), Reg(AX)), set()), (Push(Reg(AX)), set()), (AssType: Longword Mov(Pseudo(tmp.56), Reg(AX)), set()), (Push(Reg(AX)), set()), (AssType: Longword Mov(Pseudo(tmp.55), Reg(AX)), set()), (Push(Reg(AX)), set()), (AssType: Longword Mov(Pseudo(tmp.54), Reg(AX)), set()), (Push(Reg(AX)), set()), (Call(check_12_ints), set()), (AssType: Quadword Binary(Add, Imm(64), Reg(SP)), set()), (AssType: Longword Mov(Reg(AX), Pseudo(tmp.73)), set()), (AssType: Longword Mov(Imm(10), Pseudo(tmp.74)), set()), (AssType: Longword Binary(Add, Pseudo(glob_three), Pseudo(tmp.74)), set()), (AssType: Longword Mov(Pseudo(tmp.74), Pseudo(tmp.75)), set()), (AssType: Longword Binary(Add, Imm(1), Pseudo(tmp.75)), set()), (AssType: Longword Mov(Imm(28), Pseudo(tmp.76)), set()), (AssType: Longword Binary(Sub, Pseudo(tmp.74), Pseudo(tmp.76)), set()), (AssType: Longword Mov(Pseudo(tmp.75), Pseudo(tmp.77)), set()), (AssType: Longword Binary(Add, Imm(2), Pseudo(tmp.77)), set()), (AssType: Longword Mov(Imm(4), Pseudo(tmp.78)), set()), (AssType: Longword Binary(Add, Pseudo(tmp.74), Pseudo(tmp.78)), set()), (AssType: Longword Mov(Imm(32), Pseudo(tmp.79)), set()), (AssType: Longword Binary(Sub, Pseudo(tmp.75), Pseudo(tmp.79)), set()), (AssType: Longword Mov(Imm(35), Pseudo(tmp.80)), set()), (AssType: Longword Binary(Sub, Pseudo(tmp.77), Pseudo(tmp.80)), set()), (AssType: Longword Mov(Pseudo(tmp.76), Pseudo(tmp.81)), set()), (AssType: Longword Binary(Add, Imm(5), Pseudo(tmp.81)), set()), (AssType: Longword Mov(Pseudo(tmp.74), Pseudo(tmp.82)), set()), (AssType: Longword Binary(Mult, Imm(2), Pseudo(tmp.82)), set()), (AssType: Longword Mov(Pseudo(tmp.82), Pseudo(tmp.83)), set()), (AssType: Longword Binary(Sub, Imm(5), Pseudo(tmp.83)), set()), (AssType: Longword Mov(Pseudo(tmp.76), Pseudo(tmp.84)), set()), (AssType: Longword Binary(Add, Imm(7), Pseudo(tmp.84)), set()), (AssType: Longword Mov(Imm(6), Pseudo(tmp.85)), set()), (AssType: Longword Binary(Add, Pseudo(tmp.78), Pseudo(tmp.85)), set()), (AssType: Longword Mov(Pseudo(tmp.74), Pseudo(tmp.86)), set()), (AssType: Longword Binary(Add, Imm(11), Pseudo(tmp.86)), set()), (AssType: Quadword Binary(Sub, Imm(8), Reg(SP)), set()), (AssType: Longword Mov(Pseudo(tmp.74), Reg(DI)), set()), (AssType: Longword Mov(Pseudo(tmp.75), Reg(SI)), set()), (AssType: Longword Mov(Pseudo(tmp.76), Reg(DX)), set()), (AssType: Longword Mov(Pseudo(tmp.77), Reg(CX)), set()), (AssType: Longword Mov(Pseudo(tmp.78), Reg(R8d)), set()), (AssType: Longword Mov(Pseudo(tmp.79), Reg(R9d)), set()), (Push(Imm(13)), set()), (AssType: Longword Mov(Pseudo(tmp.86), Reg(AX)), set()), (Push(Reg(AX)), set()), (AssType: Longword Mov(Pseudo(tmp.85), Reg(AX)), set()), (Push(Reg(AX)), set()), (AssType: Longword Mov(Pseudo(tmp.84), Reg(AX)), set()), (Push(Reg(AX)), set()), (AssType: Longword Mov(Pseudo(tmp.83), Reg(AX)), set()), (Push(Reg(AX)), set()), (AssType: Longword Mov(Pseudo(tmp.81), Reg(AX)), set()), (Push(Reg(AX)), set()), (AssType: Longword Mov(Pseudo(tmp.80), Reg(AX)), set()), (Push(Reg(AX)), set()), (Call(check_12_ints), set()), (AssType: Quadword Binary(Add, Imm(64), Reg(SP)), set()), (AssType: Longword Mov(Reg(AX), Pseudo(tmp.100)), set()), (AssType: Longword Cmp(Imm(6), Pseudo(tmp.47)), set()), (AssType: Longword Mov(Imm(0), Pseudo(tmp.101)), set()), (SetCC(ConcCodeType.NE, Pseudo(tmp.101)), set()), (AssType: Longword Cmp(Imm(0), Pseudo(tmp.101)), set()), (JmpCC(ConcCodeType.E, tmp.103), set())] ReachingCopies: set()
1 1: [AssType: Longword Mov(Imm(1), Pseudo(tmp.104)), AssType: Longword Unary(Neg, Pseudo(tmp.104)), AssType: Longword Mov(Pseudo(tmp.104), Reg(AX)), ret] Pred: {0} Suc: {EXIT} iMap: [(AssType: Longword Mov(Imm(1), Pseudo(tmp.104)), set()), (AssType: Longword Unary(Neg, Pseudo(tmp.104)), set()), (AssType: Longword Mov(Pseudo(tmp.104), Reg(AX)), set()), (ret, set())] ReachingCopies: set()
2 2: [Label(tmp.103), AssType: Longword Mov(Imm(0), Reg(AX)), ret] Pred: {0} Suc: {EXIT} iMap: [(Label(tmp.103), set()), (AssType: Longword Mov(Imm(0), Reg(AX)), set()), (ret, set())] ReachingCopies: set()
EXIT Exit: EXIT {1, 2}
--------------LIVE for block 2-------------------
ret {Reg(AX)}
AssType: Longword Mov(Imm(0), Reg(AX)) {Reg(AX)}
Label(tmp.103) set()
OLD ANNOT: set()
NEW ANNOT: set()
--------------LIVE for block 1-------------------
ret {Reg(AX)}
AssType: Longword Mov(Pseudo(tmp.104), Reg(AX)) {Reg(AX)}
AssType: Longword Unary(Neg, Pseudo(tmp.104)) {Pseudo(tmp.104)}
AssType: Longword Mov(Imm(1), Pseudo(tmp.104)) {Pseudo(tmp.104)}
OLD ANNOT: set()
NEW ANNOT: set()
--------------LIVE for block 0-------------------
JmpCC(ConcCodeType.E, tmp.103) set()
AssType: Longword Cmp(Imm(0), Pseudo(tmp.101)) set()
SetCC(ConcCodeType.NE, Pseudo(tmp.101)) {Pseudo(tmp.101)}
AssType: Longword Mov(Imm(0), Pseudo(tmp.101)) set()
AssType: Longword Cmp(Imm(6), Pseudo(tmp.47)) set()
AssType: Longword Mov(Reg(AX), Pseudo(tmp.100)) {Pseudo(tmp.47)}
AssType: Quadword Binary(Add, Imm(64), Reg(SP)) {Reg(AX), Pseudo(tmp.47)}
Call(check_12_ints) {Reg(AX), Reg(SP), Pseudo(tmp.47)}
Push(Reg(AX)) {Reg(DX), Reg(CX), Reg(SP), Reg(DI), Reg(SI), Pseudo(tmp.47), Reg(R8d), Reg(R9d)}
AssType: Longword Mov(Pseudo(tmp.80), Reg(AX)) {Reg(CX), Reg(DX), Reg(SP), Reg(DI), Reg(SI), Reg(AX), Pseudo(tmp.47), Reg(R8d), Reg(R9d)}
Push(Reg(AX)) {Reg(CX), Reg(DX), Reg(SP), Reg(DI), Reg(SI), Pseudo(tmp.47), Reg(R8d), Reg(R9d), Pseudo(tmp.80)}
AssType: Longword Mov(Pseudo(tmp.81), Reg(AX)) {Reg(CX), Reg(DX), Reg(SP), Reg(DI), Reg(SI), Reg(AX), Pseudo(tmp.47), Reg(R8d), Reg(R9d), Pseudo(tmp.80)}
Push(Reg(AX)) {Reg(CX), Reg(DX), Reg(SP), Reg(DI), Pseudo(tmp.81), Reg(SI), Pseudo(tmp.47), Reg(R8d), Reg(R9d), Pseudo(tmp.80)}
AssType: Longword Mov(Pseudo(tmp.83), Reg(AX)) {Reg(CX), Reg(DX), Reg(SP), Reg(DI), Pseudo(tmp.81), Reg(SI), Reg(AX), Pseudo(tmp.47), Reg(R8d), Reg(R9d), Pseudo(tmp.80)}
Push(Reg(AX)) {Reg(CX), Pseudo(tmp.83), Reg(DX), Reg(SP), Reg(DI), Pseudo(tmp.81), Reg(SI), Pseudo(tmp.47), Reg(R8d), Reg(R9d), Pseudo(tmp.80)}
AssType: Longword Mov(Pseudo(tmp.84), Reg(AX)) {Reg(CX), Pseudo(tmp.83), Reg(DX), Reg(SP), Reg(DI), Pseudo(tmp.81), Reg(SI), Reg(AX), Pseudo(tmp.47), Reg(R8d), Reg(R9d), Pseudo(tmp.80)}
Push(Reg(AX)) {Reg(CX), Pseudo(tmp.83), Reg(DX), Reg(SP), Reg(DI), Pseudo(tmp.81), Reg(SI), Pseudo(tmp.84), Pseudo(tmp.47), Reg(R8d), Reg(R9d), Pseudo(tmp.80)}
AssType: Longword Mov(Pseudo(tmp.85), Reg(AX)) {Reg(CX), Pseudo(tmp.83), Reg(DX), Reg(SP), Reg(DI), Pseudo(tmp.81), Reg(SI), Reg(AX), Pseudo(tmp.84), Pseudo(tmp.47), Reg(R8d), Reg(R9d), Pseudo(tmp.80)}
Push(Reg(AX)) {Reg(CX), Pseudo(tmp.83), Reg(DX), Reg(SP), Pseudo(tmp.85), Reg(DI), Pseudo(tmp.81), Reg(SI), Pseudo(tmp.84), Pseudo(tmp.47), Reg(R8d), Reg(R9d), Pseudo(tmp.80)}
AssType: Longword Mov(Pseudo(tmp.86), Reg(AX)) {Reg(CX), Pseudo(tmp.83), Reg(DX), Reg(SP), Pseudo(tmp.85), Reg(DI), Pseudo(tmp.81), Reg(SI), Reg(AX), Pseudo(tmp.84), Pseudo(tmp.47), Reg(R8d), Reg(R9d), Pseudo(tmp.80)}
Push(Imm(13)) {Reg(CX), Pseudo(tmp.83), Reg(DX), Pseudo(tmp.86), Reg(SP), Pseudo(tmp.85), Pseudo(tmp.81), Reg(DI), Reg(SI), Pseudo(tmp.84), Pseudo(tmp.47), Reg(R8d), Reg(R9d), Pseudo(tmp.80)}
AssType: Longword Mov(Pseudo(tmp.79), Reg(R9d)) {Reg(CX), Pseudo(tmp.83), Reg(DX), Pseudo(tmp.86), Reg(SP), Pseudo(tmp.85), Pseudo(tmp.81), Reg(DI), Reg(SI), Pseudo(tmp.84), Pseudo(tmp.47), Reg(R8d), Reg(R9d), Pseudo(tmp.80)}
AssType: Longword Mov(Pseudo(tmp.78), Reg(R8d)) {Reg(CX), Pseudo(tmp.83), Reg(DX), Pseudo(tmp.86), Reg(SP), Pseudo(tmp.85), Pseudo(tmp.81), Reg(DI), Reg(SI), Pseudo(tmp.84), Pseudo(tmp.79), Pseudo(tmp.47), Reg(R8d), Pseudo(tmp.80)}
AssType: Longword Mov(Pseudo(tmp.77), Reg(CX)) {Reg(CX), Pseudo(tmp.83), Reg(DX), Pseudo(tmp.86), Reg(SP), Pseudo(tmp.85), Pseudo(tmp.81), Reg(DI), Reg(SI), Pseudo(tmp.47), Pseudo(tmp.84), Pseudo(tmp.79), Pseudo(tmp.78), Pseudo(tmp.80)}
AssType: Longword Mov(Pseudo(tmp.76), Reg(DX)) {Reg(DX), Pseudo(tmp.83), Pseudo(tmp.86), Reg(SP), Pseudo(tmp.85), Reg(DI), Pseudo(tmp.81), Reg(SI), Pseudo(tmp.77), Pseudo(tmp.47), Pseudo(tmp.84), Pseudo(tmp.79), Pseudo(tmp.78), Pseudo(tmp.80)}
AssType: Longword Mov(Pseudo(tmp.75), Reg(SI)) {Pseudo(tmp.83), Pseudo(tmp.86), Reg(SP), Pseudo(tmp.85), Reg(DI), Pseudo(tmp.81), Reg(SI), Pseudo(tmp.77), Pseudo(tmp.47), Pseudo(tmp.84), Pseudo(tmp.79), Pseudo(tmp.76), Pseudo(tmp.78), Pseudo(tmp.80)}
AssType: Longword Mov(Pseudo(tmp.74), Reg(DI)) {Pseudo(tmp.83), Pseudo(tmp.86), Reg(SP), Pseudo(tmp.85), Reg(DI), Pseudo(tmp.81), Pseudo(tmp.77), Pseudo(tmp.47), Pseudo(tmp.84), Pseudo(tmp.79), Pseudo(tmp.76), Pseudo(tmp.75), Pseudo(tmp.78), Pseudo(tmp.80)}
AssType: Quadword Binary(Sub, Imm(8), Reg(SP)) {Pseudo(tmp.83), Pseudo(tmp.86), Reg(SP), Pseudo(tmp.85), Pseudo(tmp.81), Pseudo(tmp.77), Pseudo(tmp.47), Pseudo(tmp.84), Pseudo(tmp.79), Pseudo(tmp.76), Pseudo(tmp.75), Pseudo(tmp.78), Pseudo(tmp.74), Pseudo(tmp.80)}
AssType: Longword Binary(Add, Imm(11), Pseudo(tmp.86)) {Pseudo(tmp.83), Pseudo(tmp.86), Reg(SP), Pseudo(tmp.85), Pseudo(tmp.81), Pseudo(tmp.77), Pseudo(tmp.47), Pseudo(tmp.84), Pseudo(tmp.79), Pseudo(tmp.76), Pseudo(tmp.75), Pseudo(tmp.78), Pseudo(tmp.74), Pseudo(tmp.80)}
AssType: Longword Mov(Pseudo(tmp.74), Pseudo(tmp.86)) {Pseudo(tmp.83), Pseudo(tmp.86), Reg(SP), Pseudo(tmp.85), Pseudo(tmp.81), Pseudo(tmp.77), Pseudo(tmp.47), Pseudo(tmp.84), Pseudo(tmp.79), Pseudo(tmp.76), Pseudo(tmp.75), Pseudo(tmp.78), Pseudo(tmp.74), Pseudo(tmp.80)}
AssType: Longword Binary(Add, Pseudo(tmp.78), Pseudo(tmp.85)) {Pseudo(tmp.83), Reg(SP), Pseudo(tmp.85), Pseudo(tmp.81), Pseudo(tmp.77), Pseudo(tmp.47), Pseudo(tmp.84), Pseudo(tmp.79), Pseudo(tmp.76), Pseudo(tmp.75), Pseudo(tmp.78), Pseudo(tmp.74), Pseudo(tmp.80)}
AssType: Longword Mov(Imm(6), Pseudo(tmp.85)) {Pseudo(tmp.83), Reg(SP), Pseudo(tmp.85), Pseudo(tmp.81), Pseudo(tmp.77), Pseudo(tmp.47), Pseudo(tmp.84), Pseudo(tmp.79), Pseudo(tmp.76), Pseudo(tmp.75), Pseudo(tmp.78), Pseudo(tmp.74), Pseudo(tmp.80)}
AssType: Longword Binary(Add, Imm(7), Pseudo(tmp.84)) {Pseudo(tmp.83), Reg(SP), Pseudo(tmp.81), Pseudo(tmp.77), Pseudo(tmp.47), Pseudo(tmp.84), Pseudo(tmp.79), Pseudo(tmp.76), Pseudo(tmp.75), Pseudo(tmp.78), Pseudo(tmp.74), Pseudo(tmp.80)}
AssType: Longword Mov(Pseudo(tmp.76), Pseudo(tmp.84)) {Pseudo(tmp.83), Reg(SP), Pseudo(tmp.81), Pseudo(tmp.77), Pseudo(tmp.47), Pseudo(tmp.84), Pseudo(tmp.79), Pseudo(tmp.76), Pseudo(tmp.75), Pseudo(tmp.78), Pseudo(tmp.74), Pseudo(tmp.80)}
AssType: Longword Binary(Sub, Imm(5), Pseudo(tmp.83)) {Pseudo(tmp.83), Reg(SP), Pseudo(tmp.81), Pseudo(tmp.77), Pseudo(tmp.47), Pseudo(tmp.79), Pseudo(tmp.76), Pseudo(tmp.75), Pseudo(tmp.78), Pseudo(tmp.74), Pseudo(tmp.80)}
AssType: Longword Mov(Pseudo(tmp.82), Pseudo(tmp.83)) {Pseudo(tmp.83), Reg(SP), Pseudo(tmp.81), Pseudo(tmp.77), Pseudo(tmp.47), Pseudo(tmp.79), Pseudo(tmp.76), Pseudo(tmp.75), Pseudo(tmp.78), Pseudo(tmp.74), Pseudo(tmp.80)}
AssType: Longword Binary(Mult, Imm(2), Pseudo(tmp.82)) {Reg(SP), Pseudo(tmp.81), Pseudo(tmp.77), Pseudo(tmp.82), Pseudo(tmp.47), Pseudo(tmp.79), Pseudo(tmp.76), Pseudo(tmp.75), Pseudo(tmp.78), Pseudo(tmp.74), Pseudo(tmp.80)}
AssType: Longword Mov(Pseudo(tmp.74), Pseudo(tmp.82)) {Reg(SP), Pseudo(tmp.81), Pseudo(tmp.77), Pseudo(tmp.82), Pseudo(tmp.47), Pseudo(tmp.79), Pseudo(tmp.76), Pseudo(tmp.75), Pseudo(tmp.78), Pseudo(tmp.74), Pseudo(tmp.80)}
AssType: Longword Binary(Add, Imm(5), Pseudo(tmp.81)) {Reg(SP), Pseudo(tmp.81), Pseudo(tmp.77), Pseudo(tmp.47), Pseudo(tmp.79), Pseudo(tmp.76), Pseudo(tmp.75), Pseudo(tmp.78), Pseudo(tmp.74), Pseudo(tmp.80)}
AssType: Longword Mov(Pseudo(tmp.76), Pseudo(tmp.81)) {Reg(SP), Pseudo(tmp.81), Pseudo(tmp.77), Pseudo(tmp.47), Pseudo(tmp.79), Pseudo(tmp.76), Pseudo(tmp.75), Pseudo(tmp.78), Pseudo(tmp.74), Pseudo(tmp.80)}
AssType: Longword Binary(Sub, Pseudo(tmp.77), Pseudo(tmp.80)) {Reg(SP), Pseudo(tmp.77), Pseudo(tmp.47), Pseudo(tmp.79), Pseudo(tmp.76), Pseudo(tmp.75), Pseudo(tmp.78), Pseudo(tmp.74), Pseudo(tmp.80)}
AssType: Longword Mov(Imm(35), Pseudo(tmp.80)) {Reg(SP), Pseudo(tmp.77), Pseudo(tmp.47), Pseudo(tmp.79), Pseudo(tmp.76), Pseudo(tmp.75), Pseudo(tmp.78), Pseudo(tmp.74), Pseudo(tmp.80)}
AssType: Longword Binary(Sub, Pseudo(tmp.75), Pseudo(tmp.79)) {Reg(SP), Pseudo(tmp.77), Pseudo(tmp.47), Pseudo(tmp.79), Pseudo(tmp.76), Pseudo(tmp.75), Pseudo(tmp.78), Pseudo(tmp.74)}
AssType: Longword Mov(Imm(32), Pseudo(tmp.79)) {Reg(SP), Pseudo(tmp.77), Pseudo(tmp.47), Pseudo(tmp.79), Pseudo(tmp.76), Pseudo(tmp.75), Pseudo(tmp.78), Pseudo(tmp.74)}
AssType: Longword Binary(Add, Pseudo(tmp.74), Pseudo(tmp.78)) {Pseudo(tmp.76), Reg(SP), Pseudo(tmp.75), Pseudo(tmp.78), Pseudo(tmp.77), Pseudo(tmp.74), Pseudo(tmp.47)}
AssType: Longword Mov(Imm(4), Pseudo(tmp.78)) {Pseudo(tmp.76), Reg(SP), Pseudo(tmp.75), Pseudo(tmp.78), Pseudo(tmp.77), Pseudo(tmp.74), Pseudo(tmp.47)}
AssType: Longword Binary(Add, Imm(2), Pseudo(tmp.77)) {Pseudo(tmp.76), Reg(SP), Pseudo(tmp.75), Pseudo(tmp.47), Pseudo(tmp.77), Pseudo(tmp.74)}
AssType: Longword Mov(Pseudo(tmp.75), Pseudo(tmp.77)) {Pseudo(tmp.76), Reg(SP), Pseudo(tmp.75), Pseudo(tmp.47), Pseudo(tmp.77), Pseudo(tmp.74)}
AssType: Longword Binary(Sub, Pseudo(tmp.74), Pseudo(tmp.76)) {Pseudo(tmp.76), Reg(SP), Pseudo(tmp.75), Pseudo(tmp.47), Pseudo(tmp.74)}
AssType: Longword Mov(Imm(28), Pseudo(tmp.76)) {Pseudo(tmp.76), Reg(SP), Pseudo(tmp.75), Pseudo(tmp.47), Pseudo(tmp.74)}
AssType: Longword Binary(Add, Imm(1), Pseudo(tmp.75)) {Pseudo(tmp.75), Reg(SP), Pseudo(tmp.74), Pseudo(tmp.47)}
AssType: Longword Mov(Pseudo(tmp.74), Pseudo(tmp.75)) {Pseudo(tmp.75), Reg(SP), Pseudo(tmp.74), Pseudo(tmp.47)}
AssType: Longword Binary(Add, Pseudo(glob_three), Pseudo(tmp.74)) {Reg(SP), Pseudo(tmp.74), Pseudo(tmp.47)}
AssType: Longword Mov(Imm(10), Pseudo(tmp.74)) {Reg(SP), Pseudo(tmp.74), Pseudo(glob_three), Pseudo(tmp.47)}
AssType: Longword Mov(Reg(AX), Pseudo(tmp.73)) {Reg(SP), Pseudo(glob_three), Pseudo(tmp.47)}
AssType: Quadword Binary(Add, Imm(64), Reg(SP)) {Reg(AX), Reg(SP), Pseudo(glob_three), Pseudo(tmp.47)}
Call(check_12_ints) {Reg(AX), Reg(SP), Pseudo(glob_three), Pseudo(tmp.47)}
Push(Reg(AX)) {Reg(CX), Reg(DX), Reg(SP), Reg(DI), Reg(SI), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d), Reg(R9d)}
AssType: Longword Mov(Pseudo(tmp.54), Reg(AX)) {Reg(CX), Reg(DX), Reg(SP), Reg(DI), Reg(SI), Reg(AX), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d), Reg(R9d)}
Push(Reg(AX)) {Reg(CX), Reg(DX), Reg(SP), Reg(DI), Reg(SI), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d), Pseudo(tmp.54), Reg(R9d)}
AssType: Longword Mov(Pseudo(tmp.55), Reg(AX)) {Reg(CX), Reg(DX), Reg(SP), Reg(DI), Reg(SI), Reg(AX), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d), Pseudo(tmp.54), Reg(R9d)}
Push(Reg(AX)) {Reg(CX), Reg(DX), Reg(SP), Reg(DI), Reg(SI), Pseudo(tmp.55), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d), Pseudo(tmp.54), Reg(R9d)}
AssType: Longword Mov(Pseudo(tmp.56), Reg(AX)) {Reg(CX), Reg(DX), Reg(SP), Reg(DI), Reg(SI), Pseudo(tmp.55), Reg(AX), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d), Pseudo(tmp.54), Reg(R9d)}
Push(Reg(AX)) {Reg(CX), Pseudo(tmp.56), Reg(DX), Reg(SP), Reg(DI), Reg(SI), Pseudo(tmp.55), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d), Pseudo(tmp.54), Reg(R9d)}
AssType: Longword Mov(Pseudo(tmp.57), Reg(AX)) {Reg(CX), Pseudo(tmp.56), Reg(DX), Reg(SP), Reg(DI), Reg(SI), Pseudo(tmp.55), Reg(AX), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d), Pseudo(tmp.54), Reg(R9d)}
Push(Reg(AX)) {Reg(CX), Pseudo(tmp.56), Reg(DX), Reg(SP), Reg(DI), Reg(SI), Pseudo(tmp.55), Pseudo(tmp.57), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d), Pseudo(tmp.54), Reg(R9d)}
AssType: Longword Mov(Pseudo(tmp.58), Reg(AX)) {Reg(CX), Pseudo(tmp.56), Reg(DX), Reg(SP), Reg(DI), Reg(SI), Pseudo(tmp.55), Pseudo(tmp.57), Reg(AX), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d), Pseudo(tmp.54), Reg(R9d)}
Push(Reg(AX)) {Reg(CX), Pseudo(tmp.56), Reg(DX), Reg(SP), Reg(DI), Reg(SI), Pseudo(tmp.55), Pseudo(tmp.57), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d), Pseudo(tmp.54), Reg(R9d), Pseudo(tmp.58)}
AssType: Longword Mov(Pseudo(tmp.59), Reg(AX)) {Reg(CX), Pseudo(tmp.56), Reg(DX), Reg(SP), Reg(DI), Reg(SI), Pseudo(tmp.55), Pseudo(tmp.57), Reg(AX), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d), Pseudo(tmp.54), Reg(R9d), Pseudo(tmp.58)}
Push(Imm(1)) {Reg(CX), Pseudo(tmp.56), Reg(DX), Reg(SP), Reg(DI), Reg(SI), Pseudo(tmp.55), Pseudo(tmp.57), Pseudo(tmp.59), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d), Pseudo(tmp.54), Reg(R9d), Pseudo(tmp.58)}
AssType: Longword Mov(Pseudo(tmp.53), Reg(R9d)) {Reg(CX), Pseudo(tmp.56), Reg(DX), Reg(SP), Reg(DI), Reg(SI), Pseudo(tmp.55), Pseudo(tmp.57), Pseudo(tmp.59), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d), Pseudo(tmp.54), Reg(R9d), Pseudo(tmp.58)}
AssType: Longword Mov(Pseudo(tmp.52), Reg(R8d)) {Reg(CX), Pseudo(tmp.56), Reg(DX), Reg(SP), Reg(DI), Reg(SI), Pseudo(tmp.55), Pseudo(tmp.57), Pseudo(tmp.59), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d), Pseudo(tmp.54), Pseudo(tmp.53), Pseudo(tmp.58)}
AssType: Longword Mov(Pseudo(tmp.51), Reg(CX)) {Reg(CX), Pseudo(tmp.56), Reg(DX), Reg(SP), Reg(DI), Reg(SI), Pseudo(tmp.55), Pseudo(tmp.57), Pseudo(tmp.59), Pseudo(tmp.52), Pseudo(glob_three), Pseudo(tmp.47), Pseudo(tmp.54), Pseudo(tmp.53), Pseudo(tmp.58)}
AssType: Longword Mov(Pseudo(tmp.50), Reg(DX)) {Pseudo(tmp.56), Reg(DX), Reg(SP), Reg(DI), Reg(SI), Pseudo(tmp.51), Pseudo(tmp.55), Pseudo(tmp.57), Pseudo(tmp.59), Pseudo(tmp.52), Pseudo(glob_three), Pseudo(tmp.47), Pseudo(tmp.54), Pseudo(tmp.53), Pseudo(tmp.58)}
AssType: Longword Mov(Pseudo(tmp.49), Reg(SI)) {Pseudo(tmp.56), Reg(SP), Reg(DI), Pseudo(tmp.50), Reg(SI), Pseudo(tmp.51), Pseudo(tmp.55), Pseudo(tmp.57), Pseudo(tmp.59), Pseudo(tmp.52), Pseudo(glob_three), Pseudo(tmp.47), Pseudo(tmp.54), Pseudo(tmp.53), Pseudo(tmp.58)}
AssType: Longword Mov(Pseudo(tmp.48), Reg(DI)) {Pseudo(tmp.56), Reg(SP), Reg(DI), Pseudo(tmp.50), Pseudo(tmp.55), Pseudo(tmp.51), Pseudo(tmp.57), Pseudo(tmp.59), Pseudo(tmp.49), Pseudo(tmp.52), Pseudo(glob_three), Pseudo(tmp.47), Pseudo(tmp.54), Pseudo(tmp.53), Pseudo(tmp.58)}
AssType: Quadword Binary(Sub, Imm(8), Reg(SP)) {Pseudo(tmp.56), Reg(SP), Pseudo(tmp.50), Pseudo(tmp.55), Pseudo(tmp.51), Pseudo(tmp.57), Pseudo(tmp.59), Pseudo(tmp.49), Pseudo(tmp.52), Pseudo(glob_three), Pseudo(tmp.47), Pseudo(tmp.54), Pseudo(tmp.48), Pseudo(tmp.53), Pseudo(tmp.58)}
AssType: Longword Binary(Add, Pseudo(tmp.53), Pseudo(tmp.59)) {Pseudo(tmp.56), Reg(SP), Pseudo(tmp.50), Pseudo(tmp.55), Pseudo(tmp.51), Pseudo(tmp.57), Pseudo(tmp.59), Pseudo(tmp.49), Pseudo(tmp.52), Pseudo(glob_three), Pseudo(tmp.47), Pseudo(tmp.54), Pseudo(tmp.48), Pseudo(tmp.53), Pseudo(tmp.58)}
AssType: Longword Mov(Pseudo(tmp.53), Pseudo(tmp.59)) {Pseudo(tmp.56), Reg(SP), Pseudo(tmp.50), Pseudo(tmp.55), Pseudo(tmp.51), Pseudo(tmp.57), Pseudo(tmp.59), Pseudo(tmp.49), Pseudo(tmp.52), Pseudo(glob_three), Pseudo(tmp.47), Pseudo(tmp.54), Pseudo(tmp.48), Pseudo(tmp.53), Pseudo(tmp.58)}
AssType: Longword Binary(Sub, Pseudo(tmp.52), Pseudo(tmp.58)) {Pseudo(tmp.56), Reg(SP), Pseudo(tmp.50), Pseudo(tmp.55), Pseudo(tmp.51), Pseudo(tmp.57), Pseudo(tmp.49), Pseudo(tmp.52), Pseudo(glob_three), Pseudo(tmp.47), Pseudo(tmp.54), Pseudo(tmp.48), Pseudo(tmp.53), Pseudo(tmp.58)}
AssType: Longword Mov(Imm(16), Pseudo(tmp.58)) {Pseudo(tmp.56), Reg(SP), Pseudo(tmp.50), Pseudo(tmp.55), Pseudo(tmp.51), Pseudo(tmp.57), Pseudo(tmp.49), Pseudo(tmp.52), Pseudo(glob_three), Pseudo(tmp.47), Pseudo(tmp.54), Pseudo(tmp.48), Pseudo(tmp.53), Pseudo(tmp.58)}
AssType: Longword Binary(Add, Pseudo(tmp.53), Pseudo(tmp.57)) {Pseudo(tmp.56), Reg(SP), Pseudo(tmp.50), Pseudo(tmp.55), Pseudo(tmp.51), Pseudo(tmp.57), Pseudo(tmp.49), Pseudo(tmp.52), Pseudo(glob_three), Pseudo(tmp.47), Pseudo(tmp.54), Pseudo(tmp.48), Pseudo(tmp.53)}
AssType: Longword Mov(Pseudo(tmp.51), Pseudo(tmp.57)) {Pseudo(tmp.56), Reg(SP), Pseudo(tmp.50), Pseudo(tmp.55), Pseudo(tmp.51), Pseudo(tmp.57), Pseudo(tmp.49), Pseudo(tmp.52), Pseudo(glob_three), Pseudo(tmp.47), Pseudo(tmp.54), Pseudo(tmp.48), Pseudo(tmp.53)}
AssType: Longword Binary(Mult, Pseudo(tmp.50), Pseudo(tmp.56)) {Pseudo(tmp.56), Reg(SP), Pseudo(tmp.50), Pseudo(tmp.55), Pseudo(tmp.51), Pseudo(tmp.49), Pseudo(tmp.52), Pseudo(glob_three), Pseudo(tmp.47), Pseudo(tmp.54), Pseudo(tmp.48), Pseudo(tmp.53)}
AssType: Longword Mov(Pseudo(tmp.50), Pseudo(tmp.56)) {Pseudo(tmp.56), Reg(SP), Pseudo(tmp.50), Pseudo(tmp.55), Pseudo(tmp.51), Pseudo(tmp.49), Pseudo(tmp.52), Pseudo(glob_three), Pseudo(tmp.47), Pseudo(tmp.54), Pseudo(tmp.48), Pseudo(tmp.53)}
AssType: Longword Binary(Mult, Imm(4), Pseudo(tmp.55)) {Reg(SP), Pseudo(tmp.50), Pseudo(tmp.55), Pseudo(tmp.51), Pseudo(tmp.49), Pseudo(tmp.52), Pseudo(glob_three), Pseudo(tmp.47), Pseudo(tmp.54), Pseudo(tmp.48), Pseudo(tmp.53)}
AssType: Longword Mov(Pseudo(tmp.49), Pseudo(tmp.55)) {Reg(SP), Pseudo(tmp.50), Pseudo(tmp.55), Pseudo(tmp.51), Pseudo(tmp.49), Pseudo(tmp.52), Pseudo(glob_three), Pseudo(tmp.47), Pseudo(tmp.54), Pseudo(tmp.48), Pseudo(tmp.53)}
AssType: Longword Binary(Add, Imm(6), Pseudo(tmp.54)) {Reg(SP), Pseudo(tmp.50), Pseudo(tmp.51), Pseudo(tmp.49), Pseudo(tmp.52), Pseudo(glob_three), Pseudo(tmp.47), Pseudo(tmp.54), Pseudo(tmp.48), Pseudo(tmp.53)}
AssType: Longword Mov(Pseudo(tmp.48), Pseudo(tmp.54)) {Reg(SP), Pseudo(tmp.50), Pseudo(tmp.51), Pseudo(tmp.49), Pseudo(tmp.52), Pseudo(glob_three), Pseudo(tmp.47), Pseudo(tmp.54), Pseudo(tmp.48), Pseudo(tmp.53)}
AssType: Longword Binary(Mult, Pseudo(tmp.50), Pseudo(tmp.53)) {Reg(SP), Pseudo(tmp.50), Pseudo(tmp.51), Pseudo(tmp.49), Pseudo(tmp.52), Pseudo(glob_three), Pseudo(tmp.47), Pseudo(tmp.48), Pseudo(tmp.53)}
AssType: Longword Mov(Pseudo(tmp.49), Pseudo(tmp.53)) {Reg(SP), Pseudo(tmp.50), Pseudo(tmp.51), Pseudo(tmp.49), Pseudo(tmp.52), Pseudo(glob_three), Pseudo(tmp.47), Pseudo(tmp.48), Pseudo(tmp.53)}
AssType: Longword Binary(Sub, Pseudo(tmp.48), Pseudo(tmp.52)) {Reg(SP), Pseudo(tmp.50), Pseudo(tmp.51), Pseudo(tmp.49), Pseudo(tmp.52), Pseudo(glob_three), Pseudo(tmp.47), Pseudo(tmp.48)}
AssType: Longword Mov(Imm(6), Pseudo(tmp.52)) {Reg(SP), Pseudo(tmp.50), Pseudo(tmp.51), Pseudo(tmp.49), Pseudo(tmp.52), Pseudo(glob_three), Pseudo(tmp.47), Pseudo(tmp.48)}
AssType: Longword Binary(Mult, Pseudo(tmp.49), Pseudo(tmp.51)) {Pseudo(tmp.48), Reg(SP), Pseudo(tmp.49), Pseudo(glob_three), Pseudo(tmp.47), Pseudo(tmp.50), Pseudo(tmp.51)}
AssType: Longword Mov(Pseudo(tmp.49), Pseudo(tmp.51)) {Pseudo(tmp.48), Reg(SP), Pseudo(tmp.49), Pseudo(glob_three), Pseudo(tmp.47), Pseudo(tmp.50), Pseudo(tmp.51)}
AssType: Longword Binary(Add, Pseudo(tmp.48), Pseudo(tmp.50)) {Reg(SP), Pseudo(tmp.49), Pseudo(glob_three), Pseudo(tmp.47), Pseudo(tmp.50), Pseudo(tmp.48)}
AssType: Longword Mov(Imm(2), Pseudo(tmp.50)) {Reg(SP), Pseudo(tmp.49), Pseudo(glob_three), Pseudo(tmp.47), Pseudo(tmp.50), Pseudo(tmp.48)}
AssType: Longword Binary(Add, Pseudo(tmp.48), Pseudo(tmp.49)) {Reg(SP), Pseudo(tmp.49), Pseudo(glob_three), Pseudo(tmp.47), Pseudo(tmp.48)}
AssType: Longword Mov(Pseudo(tmp.48), Pseudo(tmp.49)) {Reg(SP), Pseudo(tmp.49), Pseudo(glob_three), Pseudo(tmp.47), Pseudo(tmp.48)}
AssType: Longword Binary(Sub, Imm(2), Pseudo(tmp.48)) {Pseudo(tmp.48), Reg(SP), Pseudo(glob_three), Pseudo(tmp.47)}
AssType: Longword Mov(Pseudo(glob_three), Pseudo(tmp.48)) {Pseudo(tmp.48), Reg(SP), Pseudo(glob_three), Pseudo(tmp.47)}
AssType: Longword Binary(Add, Imm(3), Pseudo(tmp.47)) {Reg(SP), Pseudo(glob_three), Pseudo(tmp.47)}
AssType: Longword Mov(Pseudo(glob_three), Pseudo(tmp.47)) {Reg(SP), Pseudo(glob_three), Pseudo(tmp.47)}
OLD ANNOT: set()
NEW ANNOT: {Reg(SP), Pseudo(glob_three)}
-----------Adding edges to interference graph.------------------
Interference Graph:
Reg(AX)
    Reg(AX) spillCost: 0.0 color: None pruned: False
        Reg(BX)
        Reg(CX)
        Pseudo(tmp.83)
        Pseudo(tmp.81)
        Reg(R8d)
        Reg(R9d)
        Pseudo(tmp.58)
        Reg(DI)
        Reg(SI)
        Pseudo(tmp.55)
        Pseudo(tmp.57)
        Reg(R14d)
        Pseudo(tmp.54)
        Reg(R13d)
        Reg(R12d)
        Pseudo(tmp.84)
        Pseudo(tmp.80)
        Reg(DX)
        Reg(R15d)
        Pseudo(tmp.56)
        Pseudo(tmp.85)
        Pseudo(tmp.47)
Reg(BX)
    Reg(BX) spillCost: 0.0 color: None pruned: False
        Reg(CX)
        Reg(DX)
        Reg(R15d)
        Reg(DI)
        Reg(SI)
        Reg(R14d)
        Reg(AX)
        Reg(R12d)
        Reg(R8d)
        Reg(R13d)
        Reg(R9d)
Reg(CX)
    Reg(CX) spillCost: 0.0 color: None pruned: False
        Reg(BX)
        Pseudo(tmp.83)
        Pseudo(tmp.81)
        Pseudo(tmp.52)
        Pseudo(tmp.78)
        Reg(R8d)
        Reg(R9d)
        Pseudo(tmp.58)
        Pseudo(tmp.86)
        Reg(DI)
        Reg(SI)
        Pseudo(tmp.55)
        Pseudo(tmp.57)
        Reg(R14d)
        Pseudo(tmp.59)
        Pseudo(tmp.54)
        Reg(R13d)
        Pseudo(tmp.53)
        Reg(R12d)
        Reg(AX)
        Pseudo(tmp.84)
        Pseudo(tmp.79)
        Pseudo(tmp.80)
        Reg(DX)
        Reg(R15d)
        Pseudo(tmp.56)
        Pseudo(tmp.85)
        Pseudo(tmp.47)
Reg(DX)
    Reg(DX) spillCost: 0.0 color: None pruned: False
        Reg(BX)
        Reg(CX)
        Pseudo(tmp.83)
        Pseudo(tmp.81)
        Pseudo(tmp.52)
        Pseudo(tmp.78)
        Reg(R8d)
        Reg(R9d)
        Pseudo(tmp.58)
        Pseudo(tmp.86)
        Reg(DI)
        Reg(SI)
        Pseudo(tmp.55)
        Pseudo(tmp.57)
        Pseudo(tmp.77)
        Reg(R14d)
        Pseudo(tmp.59)
        Pseudo(tmp.54)
        Reg(R13d)
        Reg(R12d)
        Pseudo(tmp.53)
        Pseudo(tmp.51)
        Reg(AX)
        Pseudo(tmp.84)
        Pseudo(tmp.79)
        Pseudo(tmp.80)
        Pseudo(tmp.56)
        Reg(R15d)
        Pseudo(tmp.85)
        Pseudo(tmp.47)
Reg(DI)
    Reg(DI) spillCost: 0.0 color: None pruned: False
        Reg(BX)
        Reg(CX)
        Pseudo(tmp.83)
        Pseudo(tmp.81)
        Pseudo(tmp.76)
        Pseudo(tmp.52)
        Pseudo(tmp.78)
        Reg(R8d)
        Reg(R9d)
        Pseudo(tmp.58)
        Pseudo(tmp.86)
        Reg(SI)
        Pseudo(tmp.55)
        Pseudo(tmp.57)
        Pseudo(tmp.77)
        Reg(R14d)
        Pseudo(tmp.59)
        Pseudo(tmp.49)
        Pseudo(tmp.54)
        Reg(R13d)
        Reg(R12d)
        Pseudo(tmp.53)
        Pseudo(tmp.50)
        Pseudo(tmp.51)
        Reg(AX)
        Pseudo(tmp.84)
        Pseudo(tmp.79)
        Pseudo(tmp.80)
        Reg(DX)
        Reg(R15d)
        Pseudo(tmp.56)
        Pseudo(tmp.85)
        Pseudo(tmp.75)
        Pseudo(tmp.47)
Reg(SI)
    Reg(SI) spillCost: 0.0 color: None pruned: False
        Reg(BX)
        Reg(CX)
        Pseudo(tmp.83)
        Pseudo(tmp.81)
        Pseudo(tmp.76)
        Pseudo(tmp.52)
        Pseudo(tmp.78)
        Reg(R8d)
        Reg(R9d)
        Pseudo(tmp.58)
        Pseudo(tmp.86)
        Reg(DI)
        Pseudo(tmp.55)
        Pseudo(tmp.57)
        Pseudo(tmp.77)
        Reg(R14d)
        Pseudo(tmp.59)
        Pseudo(tmp.54)
        Reg(R13d)
        Reg(R12d)
        Pseudo(tmp.53)
        Pseudo(tmp.50)
        Pseudo(tmp.51)
        Reg(AX)
        Pseudo(tmp.84)
        Pseudo(tmp.79)
        Pseudo(tmp.80)
        Reg(DX)
        Reg(R15d)
        Pseudo(tmp.56)
        Pseudo(tmp.85)
        Pseudo(tmp.47)
Reg(R8d)
    Reg(R8d) spillCost: 0.0 color: None pruned: False
        Reg(BX)
        Reg(CX)
        Pseudo(tmp.83)
        Pseudo(tmp.81)
        Reg(R9d)
        Pseudo(tmp.58)
        Pseudo(tmp.86)
        Reg(DI)
        Reg(SI)
        Pseudo(tmp.55)
        Pseudo(tmp.57)
        Reg(R14d)
        Pseudo(tmp.59)
        Pseudo(tmp.54)
        Reg(R13d)
        Pseudo(tmp.53)
        Reg(R12d)
        Reg(AX)
        Pseudo(tmp.84)
        Pseudo(tmp.79)
        Pseudo(tmp.80)
        Reg(DX)
        Reg(R15d)
        Pseudo(tmp.56)
        Pseudo(tmp.85)
        Pseudo(tmp.47)
Reg(R9d)
    Reg(R9d) spillCost: 0.0 color: None pruned: False
        Reg(BX)
        Reg(CX)
        Pseudo(tmp.83)
        Pseudo(tmp.81)
        Reg(R8d)
        Pseudo(tmp.58)
        Pseudo(tmp.86)
        Reg(DI)
        Reg(SI)
        Pseudo(tmp.55)
        Pseudo(tmp.57)
        Reg(R14d)
        Pseudo(tmp.59)
        Pseudo(tmp.54)
        Reg(R13d)
        Reg(R12d)
        Reg(AX)
        Pseudo(tmp.84)
        Pseudo(tmp.80)
        Reg(DX)
        Reg(R15d)
        Pseudo(tmp.56)
        Pseudo(tmp.85)
        Pseudo(tmp.47)
Reg(R12d)
    Reg(R12d) spillCost: 0.0 color: None pruned: False
        Reg(BX)
        Reg(CX)
        Reg(DX)
        Reg(R15d)
        Reg(DI)
        Reg(SI)
        Reg(R14d)
        Reg(AX)
        Reg(R8d)
        Reg(R13d)
        Reg(R9d)
Reg(R13d)
    Reg(R13d) spillCost: 0.0 color: None pruned: False
        Reg(BX)
        Reg(CX)
        Reg(DX)
        Reg(R15d)
        Reg(DI)
        Reg(SI)
        Reg(R14d)
        Reg(AX)
        Reg(R12d)
        Reg(R8d)
        Reg(R9d)
Reg(R14d)
    Reg(R14d) spillCost: 0.0 color: None pruned: False
        Reg(BX)
        Reg(CX)
        Reg(DX)
        Reg(R15d)
        Reg(DI)
        Reg(SI)
        Reg(AX)
        Reg(R12d)
        Reg(R8d)
        Reg(R13d)
        Reg(R9d)
Reg(R15d)
    Reg(R15d) spillCost: 0.0 color: None pruned: False
        Reg(BX)
        Reg(CX)
        Reg(DX)
        Reg(DI)
        Reg(SI)
        Reg(R14d)
        Reg(AX)
        Reg(R12d)
        Reg(R8d)
        Reg(R13d)
        Reg(R9d)
Pseudo(tmp.47)
    Pseudo(tmp.47) spillCost: 0.0 color: None pruned: False
        Reg(CX)
        Pseudo(tmp.83)
        Pseudo(tmp.81)
        Pseudo(tmp.76)
        Pseudo(tmp.52)
        Pseudo(tmp.78)
        Reg(R8d)
        Pseudo(tmp.48)
        Reg(R9d)
        Pseudo(tmp.74)
        Pseudo(tmp.58)
        Pseudo(tmp.86)
        Reg(DI)
        Pseudo(tmp.55)
        Reg(SI)
        Pseudo(tmp.57)
        Pseudo(tmp.77)
        Pseudo(tmp.59)
        Pseudo(tmp.82)
        Pseudo(tmp.49)
        Pseudo(tmp.54)
        Pseudo(tmp.53)
        Pseudo(tmp.100)
        Pseudo(tmp.50)
        Pseudo(tmp.51)
        Reg(AX)
        Pseudo(tmp.79)
        Pseudo(tmp.84)
        Pseudo(tmp.73)
        Pseudo(tmp.80)
        Pseudo(tmp.56)
        Reg(DX)
        Pseudo(tmp.85)
        Pseudo(tmp.75)
Pseudo(tmp.48)
    Pseudo(tmp.48) spillCost: 0.0 color: None pruned: False
        Pseudo(tmp.56)
        Pseudo(tmp.50)
        Pseudo(tmp.55)
        Pseudo(tmp.51)
        Pseudo(tmp.57)
        Pseudo(tmp.59)
        Pseudo(tmp.49)
        Pseudo(tmp.52)
        Pseudo(tmp.47)
        Pseudo(tmp.54)
        Pseudo(tmp.53)
        Pseudo(tmp.58)
Pseudo(tmp.49)
    Pseudo(tmp.49) spillCost: 0.0 color: None pruned: False
        Pseudo(tmp.56)
        Reg(DI)
        Pseudo(tmp.50)
        Pseudo(tmp.55)
        Pseudo(tmp.51)
        Pseudo(tmp.57)
        Pseudo(tmp.59)
        Pseudo(tmp.52)
        Pseudo(tmp.47)
        Pseudo(tmp.54)
        Pseudo(tmp.48)
        Pseudo(tmp.53)
        Pseudo(tmp.58)
Pseudo(tmp.50)
    Pseudo(tmp.50) spillCost: 0.0 color: None pruned: False
        Pseudo(tmp.56)
        Reg(DI)
        Pseudo(tmp.55)
        Pseudo(tmp.51)
        Pseudo(tmp.57)
        Reg(SI)
        Pseudo(tmp.59)
        Pseudo(tmp.49)
        Pseudo(tmp.52)
        Pseudo(tmp.47)
        Pseudo(tmp.54)
        Pseudo(tmp.48)
        Pseudo(tmp.53)
        Pseudo(tmp.58)
Pseudo(tmp.51)
    Pseudo(tmp.51) spillCost: 0.0 color: None pruned: False
        Pseudo(tmp.56)
        Reg(DX)
        Reg(DI)
        Pseudo(tmp.50)
        Pseudo(tmp.55)
        Reg(SI)
        Pseudo(tmp.57)
        Pseudo(tmp.59)
        Pseudo(tmp.49)
        Pseudo(tmp.52)
        Pseudo(tmp.47)
        Pseudo(tmp.54)
        Pseudo(tmp.48)
        Pseudo(tmp.53)
        Pseudo(tmp.58)
Pseudo(tmp.52)
    Pseudo(tmp.52) spillCost: 0.0 color: None pruned: False
        Pseudo(tmp.56)
        Reg(DX)
        Reg(CX)
        Reg(DI)
        Pseudo(tmp.50)
        Pseudo(tmp.55)
        Pseudo(tmp.51)
        Pseudo(tmp.57)
        Reg(SI)
        Pseudo(tmp.59)
        Pseudo(tmp.49)
        Pseudo(tmp.47)
        Pseudo(tmp.54)
        Pseudo(tmp.48)
        Pseudo(tmp.53)
        Pseudo(tmp.58)
Pseudo(tmp.53)
    Pseudo(tmp.53) spillCost: 0.0 color: None pruned: False
        Pseudo(tmp.56)
        Reg(DX)
        Reg(CX)
        Reg(DI)
        Pseudo(tmp.50)
        Pseudo(tmp.55)
        Pseudo(tmp.51)
        Pseudo(tmp.57)
        Reg(SI)
        Pseudo(tmp.59)
        Pseudo(tmp.49)
        Pseudo(tmp.52)
        Pseudo(tmp.47)
        Reg(R8d)
        Pseudo(tmp.54)
        Pseudo(tmp.48)
        Pseudo(tmp.58)
Pseudo(tmp.54)
    Pseudo(tmp.54) spillCost: 0.0 color: None pruned: False
        Reg(CX)
        Pseudo(tmp.52)
        Reg(R8d)
        Pseudo(tmp.48)
        Reg(R9d)
        Pseudo(tmp.58)
        Reg(DI)
        Pseudo(tmp.55)
        Reg(SI)
        Pseudo(tmp.57)
        Pseudo(tmp.59)
        Pseudo(tmp.49)
        Pseudo(tmp.53)
        Pseudo(tmp.50)
        Pseudo(tmp.51)
        Reg(AX)
        Pseudo(tmp.56)
        Reg(DX)
        Pseudo(tmp.47)
Pseudo(tmp.55)
    Pseudo(tmp.55) spillCost: 0.0 color: None pruned: False
        Reg(CX)
        Pseudo(tmp.52)
        Reg(R8d)
        Pseudo(tmp.48)
        Reg(R9d)
        Pseudo(tmp.58)
        Reg(DI)
        Reg(SI)
        Pseudo(tmp.57)
        Pseudo(tmp.59)
        Pseudo(tmp.49)
        Pseudo(tmp.54)
        Pseudo(tmp.53)
        Pseudo(tmp.50)
        Pseudo(tmp.51)
        Reg(AX)
        Pseudo(tmp.56)
        Reg(DX)
        Pseudo(tmp.47)
Pseudo(tmp.56)
    Pseudo(tmp.56) spillCost: 0.0 color: None pruned: False
        Reg(CX)
        Pseudo(tmp.52)
        Reg(R8d)
        Pseudo(tmp.48)
        Reg(R9d)
        Pseudo(tmp.58)
        Reg(DI)
        Pseudo(tmp.55)
        Reg(SI)
        Pseudo(tmp.57)
        Pseudo(tmp.59)
        Pseudo(tmp.49)
        Pseudo(tmp.54)
        Pseudo(tmp.53)
        Pseudo(tmp.50)
        Pseudo(tmp.51)
        Reg(AX)
        Reg(DX)
        Pseudo(tmp.47)
Pseudo(tmp.57)
    Pseudo(tmp.57) spillCost: 0.0 color: None pruned: False
        Reg(CX)
        Pseudo(tmp.52)
        Reg(R8d)
        Pseudo(tmp.48)
        Reg(R9d)
        Pseudo(tmp.58)
        Reg(DI)
        Pseudo(tmp.55)
        Reg(SI)
        Pseudo(tmp.59)
        Pseudo(tmp.49)
        Pseudo(tmp.54)
        Pseudo(tmp.53)
        Pseudo(tmp.50)
        Pseudo(tmp.51)
        Reg(AX)
        Pseudo(tmp.56)
        Reg(DX)
        Pseudo(tmp.47)
Pseudo(tmp.58)
    Pseudo(tmp.58) spillCost: 0.0 color: None pruned: False
        Reg(CX)
        Pseudo(tmp.52)
        Reg(R8d)
        Pseudo(tmp.48)
        Reg(R9d)
        Reg(DI)
        Pseudo(tmp.55)
        Reg(SI)
        Pseudo(tmp.57)
        Pseudo(tmp.59)
        Pseudo(tmp.49)
        Pseudo(tmp.54)
        Pseudo(tmp.53)
        Pseudo(tmp.50)
        Pseudo(tmp.51)
        Reg(AX)
        Pseudo(tmp.56)
        Reg(DX)
        Pseudo(tmp.47)
Pseudo(tmp.59)
    Pseudo(tmp.59) spillCost: 0.0 color: None pruned: False
        Pseudo(tmp.56)
        Reg(DX)
        Reg(CX)
        Reg(R9d)
        Reg(DI)
        Pseudo(tmp.50)
        Pseudo(tmp.55)
        Pseudo(tmp.51)
        Pseudo(tmp.57)
        Reg(SI)
        Pseudo(tmp.49)
        Pseudo(tmp.52)
        Pseudo(tmp.47)
        Reg(R8d)
        Pseudo(tmp.54)
        Pseudo(tmp.48)
        Pseudo(tmp.53)
        Pseudo(tmp.58)
Pseudo(tmp.73)
    Pseudo(tmp.73) spillCost: 0.0 color: None pruned: False
        Pseudo(tmp.47)
Pseudo(tmp.74)
    Pseudo(tmp.74) spillCost: 0.0 color: None pruned: False
        Pseudo(tmp.83)
        Pseudo(tmp.86)
        Pseudo(tmp.85)
        Pseudo(tmp.81)
        Pseudo(tmp.77)
        Pseudo(tmp.47)
        Pseudo(tmp.82)
        Pseudo(tmp.79)
        Pseudo(tmp.76)
        Pseudo(tmp.84)
        Pseudo(tmp.75)
        Pseudo(tmp.78)
        Pseudo(tmp.80)
Pseudo(tmp.75)
    Pseudo(tmp.75) spillCost: 0.0 color: None pruned: False
        Pseudo(tmp.83)
        Pseudo(tmp.86)
        Pseudo(tmp.85)
        Reg(DI)
        Pseudo(tmp.81)
        Pseudo(tmp.77)
        Pseudo(tmp.47)
        Pseudo(tmp.82)
        Pseudo(tmp.79)
        Pseudo(tmp.76)
        Pseudo(tmp.84)
        Pseudo(tmp.78)
        Pseudo(tmp.74)
        Pseudo(tmp.80)
Pseudo(tmp.76)
    Pseudo(tmp.76) spillCost: 0.0 color: None pruned: False
        Pseudo(tmp.83)
        Pseudo(tmp.86)
        Pseudo(tmp.85)
        Reg(DI)
        Pseudo(tmp.81)
        Reg(SI)
        Pseudo(tmp.77)
        Pseudo(tmp.47)
        Pseudo(tmp.82)
        Pseudo(tmp.79)
        Pseudo(tmp.84)
        Pseudo(tmp.75)
        Pseudo(tmp.78)
        Pseudo(tmp.74)
        Pseudo(tmp.80)
Pseudo(tmp.77)
    Pseudo(tmp.77) spillCost: 0.0 color: None pruned: False
        Reg(DX)
        Pseudo(tmp.83)
        Pseudo(tmp.86)
        Pseudo(tmp.85)
        Reg(DI)
        Pseudo(tmp.81)
        Reg(SI)
        Pseudo(tmp.47)
        Pseudo(tmp.82)
        Pseudo(tmp.79)
        Pseudo(tmp.76)
        Pseudo(tmp.84)
        Pseudo(tmp.75)
        Pseudo(tmp.78)
        Pseudo(tmp.74)
        Pseudo(tmp.80)
Pseudo(tmp.78)
    Pseudo(tmp.78) spillCost: 0.0 color: None pruned: False
        Reg(DX)
        Pseudo(tmp.83)
        Pseudo(tmp.86)
        Reg(CX)
        Pseudo(tmp.85)
        Reg(DI)
        Pseudo(tmp.81)
        Reg(SI)
        Pseudo(tmp.77)
        Pseudo(tmp.82)
        Pseudo(tmp.79)
        Pseudo(tmp.76)
        Pseudo(tmp.84)
        Pseudo(tmp.75)
        Pseudo(tmp.47)
        Pseudo(tmp.74)
        Pseudo(tmp.80)
Pseudo(tmp.79)
    Pseudo(tmp.79) spillCost: 0.0 color: None pruned: False
        Reg(DX)
        Pseudo(tmp.83)
        Pseudo(tmp.86)
        Reg(CX)
        Pseudo(tmp.85)
        Reg(DI)
        Pseudo(tmp.81)
        Reg(SI)
        Pseudo(tmp.77)
        Pseudo(tmp.47)
        Pseudo(tmp.82)
        Pseudo(tmp.84)
        Pseudo(tmp.76)
        Pseudo(tmp.75)
        Pseudo(tmp.78)
        Reg(R8d)
        Pseudo(tmp.74)
        Pseudo(tmp.80)
Pseudo(tmp.80)
    Pseudo(tmp.80) spillCost: 0.0 color: None pruned: False
        Reg(CX)
        Pseudo(tmp.83)
        Pseudo(tmp.81)
        Pseudo(tmp.76)
        Pseudo(tmp.78)
        Reg(R8d)
        Reg(R9d)
        Pseudo(tmp.74)
        Pseudo(tmp.86)
        Reg(DI)
        Reg(SI)
        Pseudo(tmp.77)
        Pseudo(tmp.82)
        Reg(AX)
        Pseudo(tmp.79)
        Pseudo(tmp.84)
        Reg(DX)
        Pseudo(tmp.85)
        Pseudo(tmp.75)
        Pseudo(tmp.47)
Pseudo(tmp.81)
    Pseudo(tmp.81) spillCost: 0.0 color: None pruned: False
        Reg(CX)
        Pseudo(tmp.83)
        Pseudo(tmp.76)
        Pseudo(tmp.78)
        Reg(R8d)
        Reg(R9d)
        Pseudo(tmp.74)
        Pseudo(tmp.86)
        Reg(DI)
        Reg(SI)
        Pseudo(tmp.77)
        Pseudo(tmp.82)
        Reg(AX)
        Pseudo(tmp.79)
        Pseudo(tmp.84)
        Pseudo(tmp.80)
        Reg(DX)
        Pseudo(tmp.85)
        Pseudo(tmp.75)
        Pseudo(tmp.47)
Pseudo(tmp.82)
    Pseudo(tmp.82) spillCost: 0.0 color: None pruned: False
        Pseudo(tmp.81)
        Pseudo(tmp.77)
        Pseudo(tmp.78)
        Pseudo(tmp.79)
        Pseudo(tmp.76)
        Pseudo(tmp.75)
        Pseudo(tmp.47)
        Pseudo(tmp.74)
        Pseudo(tmp.80)
Pseudo(tmp.83)
    Pseudo(tmp.83) spillCost: 0.0 color: None pruned: False
        Reg(CX)
        Pseudo(tmp.81)
        Pseudo(tmp.76)
        Pseudo(tmp.78)
        Reg(R8d)
        Reg(R9d)
        Pseudo(tmp.74)
        Pseudo(tmp.86)
        Reg(DI)
        Reg(SI)
        Pseudo(tmp.77)
        Reg(AX)
        Pseudo(tmp.79)
        Pseudo(tmp.84)
        Pseudo(tmp.80)
        Reg(DX)
        Pseudo(tmp.85)
        Pseudo(tmp.75)
        Pseudo(tmp.47)
Pseudo(tmp.84)
    Pseudo(tmp.84) spillCost: 0.0 color: None pruned: False
        Reg(CX)
        Pseudo(tmp.83)
        Pseudo(tmp.81)
        Pseudo(tmp.76)
        Pseudo(tmp.78)
        Reg(R8d)
        Reg(R9d)
        Pseudo(tmp.74)
        Pseudo(tmp.86)
        Reg(DI)
        Reg(SI)
        Pseudo(tmp.77)
        Reg(AX)
        Pseudo(tmp.79)
        Pseudo(tmp.80)
        Reg(DX)
        Pseudo(tmp.85)
        Pseudo(tmp.75)
        Pseudo(tmp.47)
Pseudo(tmp.85)
    Pseudo(tmp.85) spillCost: 0.0 color: None pruned: False
        Reg(CX)
        Pseudo(tmp.83)
        Pseudo(tmp.81)
        Pseudo(tmp.76)
        Pseudo(tmp.78)
        Reg(R8d)
        Reg(R9d)
        Pseudo(tmp.74)
        Pseudo(tmp.86)
        Reg(DI)
        Reg(SI)
        Pseudo(tmp.77)
        Reg(AX)
        Pseudo(tmp.84)
        Pseudo(tmp.79)
        Pseudo(tmp.80)
        Reg(DX)
        Pseudo(tmp.75)
        Pseudo(tmp.47)
Pseudo(tmp.86)
    Pseudo(tmp.86) spillCost: 0.0 color: None pruned: False
        Reg(DX)
        Pseudo(tmp.83)
        Reg(CX)
        Reg(R9d)
        Pseudo(tmp.85)
        Reg(DI)
        Pseudo(tmp.81)
        Reg(SI)
        Pseudo(tmp.77)
        Pseudo(tmp.78)
        Pseudo(tmp.84)
        Pseudo(tmp.79)
        Pseudo(tmp.76)
        Pseudo(tmp.75)
        Pseudo(tmp.47)
        Reg(R8d)
        Pseudo(tmp.74)
        Pseudo(tmp.80)
Pseudo(tmp.100)
    Pseudo(tmp.100) spillCost: 0.0 color: None pruned: False
        Pseudo(tmp.47)
Pseudo(tmp.101)
    Pseudo(tmp.101) spillCost: 0.0 color: None pruned: False
Pseudo(tmp.104)
    Pseudo(tmp.104) spillCost: 0.0 color: None pruned: False
----------------ADD SPILL COSTS INTEGER.-------------------
Reg(AX) Reg(AX) spillCost: inf color: None pruned: False
Reg(BX) Reg(BX) spillCost: inf color: None pruned: False
Reg(CX) Reg(CX) spillCost: inf color: None pruned: False
Reg(DX) Reg(DX) spillCost: inf color: None pruned: False
Reg(DI) Reg(DI) spillCost: inf color: None pruned: False
Reg(SI) Reg(SI) spillCost: inf color: None pruned: False
Reg(R8d) Reg(R8d) spillCost: inf color: None pruned: False
Reg(R9d) Reg(R9d) spillCost: inf color: None pruned: False
Reg(R12d) Reg(R12d) spillCost: inf color: None pruned: False
Reg(R13d) Reg(R13d) spillCost: inf color: None pruned: False
Reg(R14d) Reg(R14d) spillCost: inf color: None pruned: False
Reg(R15d) Reg(R15d) spillCost: inf color: None pruned: False
Pseudo(tmp.47) Pseudo(tmp.47) spillCost: 3.0 color: None pruned: False
Pseudo(tmp.48) Pseudo(tmp.48) spillCost: 8.0 color: None pruned: False
Pseudo(tmp.49) Pseudo(tmp.49) spillCost: 7.0 color: None pruned: False
Pseudo(tmp.50) Pseudo(tmp.50) spillCost: 6.0 color: None pruned: False
Pseudo(tmp.51) Pseudo(tmp.51) spillCost: 4.0 color: None pruned: False
Pseudo(tmp.52) Pseudo(tmp.52) spillCost: 4.0 color: None pruned: False
Pseudo(tmp.53) Pseudo(tmp.53) spillCost: 6.0 color: None pruned: False
Pseudo(tmp.54) Pseudo(tmp.54) spillCost: 3.0 color: None pruned: False
Pseudo(tmp.55) Pseudo(tmp.55) spillCost: 3.0 color: None pruned: False
Pseudo(tmp.56) Pseudo(tmp.56) spillCost: 3.0 color: None pruned: False
Pseudo(tmp.57) Pseudo(tmp.57) spillCost: 3.0 color: None pruned: False
Pseudo(tmp.58) Pseudo(tmp.58) spillCost: 3.0 color: None pruned: False
Pseudo(tmp.59) Pseudo(tmp.59) spillCost: 3.0 color: None pruned: False
Pseudo(tmp.73) Pseudo(tmp.73) spillCost: 1.0 color: None pruned: False
Pseudo(tmp.74) Pseudo(tmp.74) spillCost: 8.0 color: None pruned: False
Pseudo(tmp.75) Pseudo(tmp.75) spillCost: 5.0 color: None pruned: False
Pseudo(tmp.76) Pseudo(tmp.76) spillCost: 5.0 color: None pruned: False
Pseudo(tmp.77) Pseudo(tmp.77) spillCost: 4.0 color: None pruned: False
Pseudo(tmp.78) Pseudo(tmp.78) spillCost: 4.0 color: None pruned: False
Pseudo(tmp.79) Pseudo(tmp.79) spillCost: 3.0 color: None pruned: False
Pseudo(tmp.80) Pseudo(tmp.80) spillCost: 3.0 color: None pruned: False
Pseudo(tmp.81) Pseudo(tmp.81) spillCost: 3.0 color: None pruned: False
Pseudo(tmp.82) Pseudo(tmp.82) spillCost: 3.0 color: None pruned: False
Pseudo(tmp.83) Pseudo(tmp.83) spillCost: 3.0 color: None pruned: False
Pseudo(tmp.84) Pseudo(tmp.84) spillCost: 3.0 color: None pruned: False
Pseudo(tmp.85) Pseudo(tmp.85) spillCost: 3.0 color: None pruned: False
Pseudo(tmp.86) Pseudo(tmp.86) spillCost: 3.0 color: None pruned: False
Pseudo(tmp.100) Pseudo(tmp.100) spillCost: 1.0 color: None pruned: False
Pseudo(tmp.101) Pseudo(tmp.101) spillCost: 3.0 color: None pruned: False
Pseudo(tmp.104) Pseudo(tmp.104) spillCost: 3.0 color: None pruned: False
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce64680>, <RegisterAllocation.Node object at 0x7f26fce46630>, <RegisterAllocation.Node object at 0x7f26fce9d6d0>, <RegisterAllocation.Node object at 0x7f26fce9d7c0>, <RegisterAllocation.Node object at 0x7f26fce9d8b0>, <RegisterAllocation.Node object at 0x7f26fce9d9a0>, <RegisterAllocation.Node object at 0x7f26fce9da90>, <RegisterAllocation.Node object at 0x7f26fce9db80>, <RegisterAllocation.Node object at 0x7f26fce9dc70>, <RegisterAllocation.Node object at 0x7f26fce9dd30>, <RegisterAllocation.Node object at 0x7f26fce9de20>, <RegisterAllocation.Node object at 0x7f26fce9df10>, <RegisterAllocation.Node object at 0x7f26fce64a40>, <RegisterAllocation.Node object at 0x7f26fce4d400>, <RegisterAllocation.Node object at 0x7f26fce3a780>, <RegisterAllocation.Node object at 0x7f26fce4bf20>, <RegisterAllocation.Node object at 0x7f26fce49df0>, <RegisterAllocation.Node object at 0x7f26fce49610>, <RegisterAllocation.Node object at 0x7f26fce8d1c0>, <RegisterAllocation.Node object at 0x7f26fce4a720>, <RegisterAllocation.Node object at 0x7f26fce65040>, <RegisterAllocation.Node object at 0x7f26fce42d80>, <RegisterAllocation.Node object at 0x7f26fce3a7b0>, <RegisterAllocation.Node object at 0x7f26fce7df40>, <RegisterAllocation.Node object at 0x7f26fce7ac30>, <RegisterAllocation.Node object at 0x7f26fcfae3f0>, <RegisterAllocation.Node object at 0x7f26fce4e090>, <RegisterAllocation.Node object at 0x7f26fce41f70>, <RegisterAllocation.Node object at 0x7f26fce49460>, <RegisterAllocation.Node object at 0x7f26fce8d190>, <RegisterAllocation.Node object at 0x7f26fce45310>, <RegisterAllocation.Node object at 0x7f26fce8d280>, <RegisterAllocation.Node object at 0x7f26fce8d1f0>, <RegisterAllocation.Node object at 0x7f26fce8d220>, <RegisterAllocation.Node object at 0x7f26fce480b0>, <RegisterAllocation.Node object at 0x7f26fce8d250>, <RegisterAllocation.Node object at 0x7f26fce7d220>, <RegisterAllocation.Node object at 0x7f26fce8d2b0>, <RegisterAllocation.Node object at 0x7f26fce41ac0>, <RegisterAllocation.Node object at 0x7f26fce4b950>, <RegisterAllocation.Node object at 0x7f26fce651f0>, <RegisterAllocation.Node object at 0x7f26fce35310>]
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce64680>, <RegisterAllocation.Node object at 0x7f26fce9d6d0>, <RegisterAllocation.Node object at 0x7f26fce9d7c0>, <RegisterAllocation.Node object at 0x7f26fce9d8b0>, <RegisterAllocation.Node object at 0x7f26fce9d9a0>, <RegisterAllocation.Node object at 0x7f26fce9da90>, <RegisterAllocation.Node object at 0x7f26fce9db80>, <RegisterAllocation.Node object at 0x7f26fce9dc70>, <RegisterAllocation.Node object at 0x7f26fce9dd30>, <RegisterAllocation.Node object at 0x7f26fce9de20>, <RegisterAllocation.Node object at 0x7f26fce9df10>, <RegisterAllocation.Node object at 0x7f26fce64a40>, <RegisterAllocation.Node object at 0x7f26fce4d400>, <RegisterAllocation.Node object at 0x7f26fce3a780>, <RegisterAllocation.Node object at 0x7f26fce4bf20>, <RegisterAllocation.Node object at 0x7f26fce49df0>, <RegisterAllocation.Node object at 0x7f26fce49610>, <RegisterAllocation.Node object at 0x7f26fce8d1c0>, <RegisterAllocation.Node object at 0x7f26fce4a720>, <RegisterAllocation.Node object at 0x7f26fce65040>, <RegisterAllocation.Node object at 0x7f26fce42d80>, <RegisterAllocation.Node object at 0x7f26fce3a7b0>, <RegisterAllocation.Node object at 0x7f26fce7df40>, <RegisterAllocation.Node object at 0x7f26fce7ac30>, <RegisterAllocation.Node object at 0x7f26fcfae3f0>, <RegisterAllocation.Node object at 0x7f26fce4e090>, <RegisterAllocation.Node object at 0x7f26fce41f70>, <RegisterAllocation.Node object at 0x7f26fce49460>, <RegisterAllocation.Node object at 0x7f26fce8d190>, <RegisterAllocation.Node object at 0x7f26fce45310>, <RegisterAllocation.Node object at 0x7f26fce8d280>, <RegisterAllocation.Node object at 0x7f26fce8d1f0>, <RegisterAllocation.Node object at 0x7f26fce8d220>, <RegisterAllocation.Node object at 0x7f26fce480b0>, <RegisterAllocation.Node object at 0x7f26fce8d250>, <RegisterAllocation.Node object at 0x7f26fce7d220>, <RegisterAllocation.Node object at 0x7f26fce8d2b0>, <RegisterAllocation.Node object at 0x7f26fce41ac0>, <RegisterAllocation.Node object at 0x7f26fce4b950>, <RegisterAllocation.Node object at 0x7f26fce651f0>, <RegisterAllocation.Node object at 0x7f26fce35310>]
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce64680>, <RegisterAllocation.Node object at 0x7f26fce9d6d0>, <RegisterAllocation.Node object at 0x7f26fce9d7c0>, <RegisterAllocation.Node object at 0x7f26fce9d8b0>, <RegisterAllocation.Node object at 0x7f26fce9d9a0>, <RegisterAllocation.Node object at 0x7f26fce9da90>, <RegisterAllocation.Node object at 0x7f26fce9db80>, <RegisterAllocation.Node object at 0x7f26fce9dd30>, <RegisterAllocation.Node object at 0x7f26fce9de20>, <RegisterAllocation.Node object at 0x7f26fce9df10>, <RegisterAllocation.Node object at 0x7f26fce64a40>, <RegisterAllocation.Node object at 0x7f26fce4d400>, <RegisterAllocation.Node object at 0x7f26fce3a780>, <RegisterAllocation.Node object at 0x7f26fce4bf20>, <RegisterAllocation.Node object at 0x7f26fce49df0>, <RegisterAllocation.Node object at 0x7f26fce49610>, <RegisterAllocation.Node object at 0x7f26fce8d1c0>, <RegisterAllocation.Node object at 0x7f26fce4a720>, <RegisterAllocation.Node object at 0x7f26fce65040>, <RegisterAllocation.Node object at 0x7f26fce42d80>, <RegisterAllocation.Node object at 0x7f26fce3a7b0>, <RegisterAllocation.Node object at 0x7f26fce7df40>, <RegisterAllocation.Node object at 0x7f26fce7ac30>, <RegisterAllocation.Node object at 0x7f26fcfae3f0>, <RegisterAllocation.Node object at 0x7f26fce4e090>, <RegisterAllocation.Node object at 0x7f26fce41f70>, <RegisterAllocation.Node object at 0x7f26fce49460>, <RegisterAllocation.Node object at 0x7f26fce8d190>, <RegisterAllocation.Node object at 0x7f26fce45310>, <RegisterAllocation.Node object at 0x7f26fce8d280>, <RegisterAllocation.Node object at 0x7f26fce8d1f0>, <RegisterAllocation.Node object at 0x7f26fce8d220>, <RegisterAllocation.Node object at 0x7f26fce480b0>, <RegisterAllocation.Node object at 0x7f26fce8d250>, <RegisterAllocation.Node object at 0x7f26fce7d220>, <RegisterAllocation.Node object at 0x7f26fce8d2b0>, <RegisterAllocation.Node object at 0x7f26fce41ac0>, <RegisterAllocation.Node object at 0x7f26fce4b950>, <RegisterAllocation.Node object at 0x7f26fce651f0>, <RegisterAllocation.Node object at 0x7f26fce35310>]
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce64680>, <RegisterAllocation.Node object at 0x7f26fce9d6d0>, <RegisterAllocation.Node object at 0x7f26fce9d7c0>, <RegisterAllocation.Node object at 0x7f26fce9d8b0>, <RegisterAllocation.Node object at 0x7f26fce9d9a0>, <RegisterAllocation.Node object at 0x7f26fce9da90>, <RegisterAllocation.Node object at 0x7f26fce9db80>, <RegisterAllocation.Node object at 0x7f26fce9de20>, <RegisterAllocation.Node object at 0x7f26fce9df10>, <RegisterAllocation.Node object at 0x7f26fce64a40>, <RegisterAllocation.Node object at 0x7f26fce4d400>, <RegisterAllocation.Node object at 0x7f26fce3a780>, <RegisterAllocation.Node object at 0x7f26fce4bf20>, <RegisterAllocation.Node object at 0x7f26fce49df0>, <RegisterAllocation.Node object at 0x7f26fce49610>, <RegisterAllocation.Node object at 0x7f26fce8d1c0>, <RegisterAllocation.Node object at 0x7f26fce4a720>, <RegisterAllocation.Node object at 0x7f26fce65040>, <RegisterAllocation.Node object at 0x7f26fce42d80>, <RegisterAllocation.Node object at 0x7f26fce3a7b0>, <RegisterAllocation.Node object at 0x7f26fce7df40>, <RegisterAllocation.Node object at 0x7f26fce7ac30>, <RegisterAllocation.Node object at 0x7f26fcfae3f0>, <RegisterAllocation.Node object at 0x7f26fce4e090>, <RegisterAllocation.Node object at 0x7f26fce41f70>, <RegisterAllocation.Node object at 0x7f26fce49460>, <RegisterAllocation.Node object at 0x7f26fce8d190>, <RegisterAllocation.Node object at 0x7f26fce45310>, <RegisterAllocation.Node object at 0x7f26fce8d280>, <RegisterAllocation.Node object at 0x7f26fce8d1f0>, <RegisterAllocation.Node object at 0x7f26fce8d220>, <RegisterAllocation.Node object at 0x7f26fce480b0>, <RegisterAllocation.Node object at 0x7f26fce8d250>, <RegisterAllocation.Node object at 0x7f26fce7d220>, <RegisterAllocation.Node object at 0x7f26fce8d2b0>, <RegisterAllocation.Node object at 0x7f26fce41ac0>, <RegisterAllocation.Node object at 0x7f26fce4b950>, <RegisterAllocation.Node object at 0x7f26fce651f0>, <RegisterAllocation.Node object at 0x7f26fce35310>]
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce64680>, <RegisterAllocation.Node object at 0x7f26fce9d6d0>, <RegisterAllocation.Node object at 0x7f26fce9d7c0>, <RegisterAllocation.Node object at 0x7f26fce9d8b0>, <RegisterAllocation.Node object at 0x7f26fce9d9a0>, <RegisterAllocation.Node object at 0x7f26fce9da90>, <RegisterAllocation.Node object at 0x7f26fce9db80>, <RegisterAllocation.Node object at 0x7f26fce9df10>, <RegisterAllocation.Node object at 0x7f26fce64a40>, <RegisterAllocation.Node object at 0x7f26fce4d400>, <RegisterAllocation.Node object at 0x7f26fce3a780>, <RegisterAllocation.Node object at 0x7f26fce4bf20>, <RegisterAllocation.Node object at 0x7f26fce49df0>, <RegisterAllocation.Node object at 0x7f26fce49610>, <RegisterAllocation.Node object at 0x7f26fce8d1c0>, <RegisterAllocation.Node object at 0x7f26fce4a720>, <RegisterAllocation.Node object at 0x7f26fce65040>, <RegisterAllocation.Node object at 0x7f26fce42d80>, <RegisterAllocation.Node object at 0x7f26fce3a7b0>, <RegisterAllocation.Node object at 0x7f26fce7df40>, <RegisterAllocation.Node object at 0x7f26fce7ac30>, <RegisterAllocation.Node object at 0x7f26fcfae3f0>, <RegisterAllocation.Node object at 0x7f26fce4e090>, <RegisterAllocation.Node object at 0x7f26fce41f70>, <RegisterAllocation.Node object at 0x7f26fce49460>, <RegisterAllocation.Node object at 0x7f26fce8d190>, <RegisterAllocation.Node object at 0x7f26fce45310>, <RegisterAllocation.Node object at 0x7f26fce8d280>, <RegisterAllocation.Node object at 0x7f26fce8d1f0>, <RegisterAllocation.Node object at 0x7f26fce8d220>, <RegisterAllocation.Node object at 0x7f26fce480b0>, <RegisterAllocation.Node object at 0x7f26fce8d250>, <RegisterAllocation.Node object at 0x7f26fce7d220>, <RegisterAllocation.Node object at 0x7f26fce8d2b0>, <RegisterAllocation.Node object at 0x7f26fce41ac0>, <RegisterAllocation.Node object at 0x7f26fce4b950>, <RegisterAllocation.Node object at 0x7f26fce651f0>, <RegisterAllocation.Node object at 0x7f26fce35310>]
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce64680>, <RegisterAllocation.Node object at 0x7f26fce9d6d0>, <RegisterAllocation.Node object at 0x7f26fce9d7c0>, <RegisterAllocation.Node object at 0x7f26fce9d8b0>, <RegisterAllocation.Node object at 0x7f26fce9d9a0>, <RegisterAllocation.Node object at 0x7f26fce9da90>, <RegisterAllocation.Node object at 0x7f26fce9db80>, <RegisterAllocation.Node object at 0x7f26fce64a40>, <RegisterAllocation.Node object at 0x7f26fce4d400>, <RegisterAllocation.Node object at 0x7f26fce3a780>, <RegisterAllocation.Node object at 0x7f26fce4bf20>, <RegisterAllocation.Node object at 0x7f26fce49df0>, <RegisterAllocation.Node object at 0x7f26fce49610>, <RegisterAllocation.Node object at 0x7f26fce8d1c0>, <RegisterAllocation.Node object at 0x7f26fce4a720>, <RegisterAllocation.Node object at 0x7f26fce65040>, <RegisterAllocation.Node object at 0x7f26fce42d80>, <RegisterAllocation.Node object at 0x7f26fce3a7b0>, <RegisterAllocation.Node object at 0x7f26fce7df40>, <RegisterAllocation.Node object at 0x7f26fce7ac30>, <RegisterAllocation.Node object at 0x7f26fcfae3f0>, <RegisterAllocation.Node object at 0x7f26fce4e090>, <RegisterAllocation.Node object at 0x7f26fce41f70>, <RegisterAllocation.Node object at 0x7f26fce49460>, <RegisterAllocation.Node object at 0x7f26fce8d190>, <RegisterAllocation.Node object at 0x7f26fce45310>, <RegisterAllocation.Node object at 0x7f26fce8d280>, <RegisterAllocation.Node object at 0x7f26fce8d1f0>, <RegisterAllocation.Node object at 0x7f26fce8d220>, <RegisterAllocation.Node object at 0x7f26fce480b0>, <RegisterAllocation.Node object at 0x7f26fce8d250>, <RegisterAllocation.Node object at 0x7f26fce7d220>, <RegisterAllocation.Node object at 0x7f26fce8d2b0>, <RegisterAllocation.Node object at 0x7f26fce41ac0>, <RegisterAllocation.Node object at 0x7f26fce4b950>, <RegisterAllocation.Node object at 0x7f26fce651f0>, <RegisterAllocation.Node object at 0x7f26fce35310>]
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce64680>, <RegisterAllocation.Node object at 0x7f26fce9d6d0>, <RegisterAllocation.Node object at 0x7f26fce9d7c0>, <RegisterAllocation.Node object at 0x7f26fce9d8b0>, <RegisterAllocation.Node object at 0x7f26fce9d9a0>, <RegisterAllocation.Node object at 0x7f26fce9da90>, <RegisterAllocation.Node object at 0x7f26fce9db80>, <RegisterAllocation.Node object at 0x7f26fce64a40>, <RegisterAllocation.Node object at 0x7f26fce4d400>, <RegisterAllocation.Node object at 0x7f26fce3a780>, <RegisterAllocation.Node object at 0x7f26fce4bf20>, <RegisterAllocation.Node object at 0x7f26fce49df0>, <RegisterAllocation.Node object at 0x7f26fce49610>, <RegisterAllocation.Node object at 0x7f26fce8d1c0>, <RegisterAllocation.Node object at 0x7f26fce4a720>, <RegisterAllocation.Node object at 0x7f26fce65040>, <RegisterAllocation.Node object at 0x7f26fce42d80>, <RegisterAllocation.Node object at 0x7f26fce3a7b0>, <RegisterAllocation.Node object at 0x7f26fce7df40>, <RegisterAllocation.Node object at 0x7f26fce7ac30>, <RegisterAllocation.Node object at 0x7f26fce4e090>, <RegisterAllocation.Node object at 0x7f26fce41f70>, <RegisterAllocation.Node object at 0x7f26fce49460>, <RegisterAllocation.Node object at 0x7f26fce8d190>, <RegisterAllocation.Node object at 0x7f26fce45310>, <RegisterAllocation.Node object at 0x7f26fce8d280>, <RegisterAllocation.Node object at 0x7f26fce8d1f0>, <RegisterAllocation.Node object at 0x7f26fce8d220>, <RegisterAllocation.Node object at 0x7f26fce480b0>, <RegisterAllocation.Node object at 0x7f26fce8d250>, <RegisterAllocation.Node object at 0x7f26fce7d220>, <RegisterAllocation.Node object at 0x7f26fce8d2b0>, <RegisterAllocation.Node object at 0x7f26fce41ac0>, <RegisterAllocation.Node object at 0x7f26fce4b950>, <RegisterAllocation.Node object at 0x7f26fce651f0>, <RegisterAllocation.Node object at 0x7f26fce35310>]
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce64680>, <RegisterAllocation.Node object at 0x7f26fce9d6d0>, <RegisterAllocation.Node object at 0x7f26fce9d7c0>, <RegisterAllocation.Node object at 0x7f26fce9d8b0>, <RegisterAllocation.Node object at 0x7f26fce9d9a0>, <RegisterAllocation.Node object at 0x7f26fce9da90>, <RegisterAllocation.Node object at 0x7f26fce9db80>, <RegisterAllocation.Node object at 0x7f26fce64a40>, <RegisterAllocation.Node object at 0x7f26fce4d400>, <RegisterAllocation.Node object at 0x7f26fce3a780>, <RegisterAllocation.Node object at 0x7f26fce4bf20>, <RegisterAllocation.Node object at 0x7f26fce49df0>, <RegisterAllocation.Node object at 0x7f26fce49610>, <RegisterAllocation.Node object at 0x7f26fce8d1c0>, <RegisterAllocation.Node object at 0x7f26fce4a720>, <RegisterAllocation.Node object at 0x7f26fce65040>, <RegisterAllocation.Node object at 0x7f26fce42d80>, <RegisterAllocation.Node object at 0x7f26fce3a7b0>, <RegisterAllocation.Node object at 0x7f26fce7df40>, <RegisterAllocation.Node object at 0x7f26fce7ac30>, <RegisterAllocation.Node object at 0x7f26fce4e090>, <RegisterAllocation.Node object at 0x7f26fce41f70>, <RegisterAllocation.Node object at 0x7f26fce49460>, <RegisterAllocation.Node object at 0x7f26fce8d190>, <RegisterAllocation.Node object at 0x7f26fce45310>, <RegisterAllocation.Node object at 0x7f26fce8d280>, <RegisterAllocation.Node object at 0x7f26fce8d1f0>, <RegisterAllocation.Node object at 0x7f26fce8d220>, <RegisterAllocation.Node object at 0x7f26fce8d250>, <RegisterAllocation.Node object at 0x7f26fce7d220>, <RegisterAllocation.Node object at 0x7f26fce8d2b0>, <RegisterAllocation.Node object at 0x7f26fce41ac0>, <RegisterAllocation.Node object at 0x7f26fce4b950>, <RegisterAllocation.Node object at 0x7f26fce651f0>, <RegisterAllocation.Node object at 0x7f26fce35310>]
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce64680>, <RegisterAllocation.Node object at 0x7f26fce9d6d0>, <RegisterAllocation.Node object at 0x7f26fce9d7c0>, <RegisterAllocation.Node object at 0x7f26fce9d8b0>, <RegisterAllocation.Node object at 0x7f26fce9d9a0>, <RegisterAllocation.Node object at 0x7f26fce9da90>, <RegisterAllocation.Node object at 0x7f26fce9db80>, <RegisterAllocation.Node object at 0x7f26fce64a40>, <RegisterAllocation.Node object at 0x7f26fce4d400>, <RegisterAllocation.Node object at 0x7f26fce3a780>, <RegisterAllocation.Node object at 0x7f26fce4bf20>, <RegisterAllocation.Node object at 0x7f26fce49df0>, <RegisterAllocation.Node object at 0x7f26fce49610>, <RegisterAllocation.Node object at 0x7f26fce8d1c0>, <RegisterAllocation.Node object at 0x7f26fce4a720>, <RegisterAllocation.Node object at 0x7f26fce65040>, <RegisterAllocation.Node object at 0x7f26fce42d80>, <RegisterAllocation.Node object at 0x7f26fce3a7b0>, <RegisterAllocation.Node object at 0x7f26fce7df40>, <RegisterAllocation.Node object at 0x7f26fce7ac30>, <RegisterAllocation.Node object at 0x7f26fce4e090>, <RegisterAllocation.Node object at 0x7f26fce41f70>, <RegisterAllocation.Node object at 0x7f26fce49460>, <RegisterAllocation.Node object at 0x7f26fce8d190>, <RegisterAllocation.Node object at 0x7f26fce45310>, <RegisterAllocation.Node object at 0x7f26fce8d280>, <RegisterAllocation.Node object at 0x7f26fce8d1f0>, <RegisterAllocation.Node object at 0x7f26fce8d220>, <RegisterAllocation.Node object at 0x7f26fce8d250>, <RegisterAllocation.Node object at 0x7f26fce7d220>, <RegisterAllocation.Node object at 0x7f26fce8d2b0>, <RegisterAllocation.Node object at 0x7f26fce41ac0>, <RegisterAllocation.Node object at 0x7f26fce651f0>, <RegisterAllocation.Node object at 0x7f26fce35310>]
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce64680>, <RegisterAllocation.Node object at 0x7f26fce9d6d0>, <RegisterAllocation.Node object at 0x7f26fce9d7c0>, <RegisterAllocation.Node object at 0x7f26fce9d8b0>, <RegisterAllocation.Node object at 0x7f26fce9d9a0>, <RegisterAllocation.Node object at 0x7f26fce9da90>, <RegisterAllocation.Node object at 0x7f26fce9db80>, <RegisterAllocation.Node object at 0x7f26fce64a40>, <RegisterAllocation.Node object at 0x7f26fce4d400>, <RegisterAllocation.Node object at 0x7f26fce3a780>, <RegisterAllocation.Node object at 0x7f26fce4bf20>, <RegisterAllocation.Node object at 0x7f26fce49df0>, <RegisterAllocation.Node object at 0x7f26fce49610>, <RegisterAllocation.Node object at 0x7f26fce8d1c0>, <RegisterAllocation.Node object at 0x7f26fce4a720>, <RegisterAllocation.Node object at 0x7f26fce65040>, <RegisterAllocation.Node object at 0x7f26fce42d80>, <RegisterAllocation.Node object at 0x7f26fce3a7b0>, <RegisterAllocation.Node object at 0x7f26fce7df40>, <RegisterAllocation.Node object at 0x7f26fce7ac30>, <RegisterAllocation.Node object at 0x7f26fce4e090>, <RegisterAllocation.Node object at 0x7f26fce41f70>, <RegisterAllocation.Node object at 0x7f26fce49460>, <RegisterAllocation.Node object at 0x7f26fce8d190>, <RegisterAllocation.Node object at 0x7f26fce45310>, <RegisterAllocation.Node object at 0x7f26fce8d280>, <RegisterAllocation.Node object at 0x7f26fce8d1f0>, <RegisterAllocation.Node object at 0x7f26fce8d220>, <RegisterAllocation.Node object at 0x7f26fce8d250>, <RegisterAllocation.Node object at 0x7f26fce7d220>, <RegisterAllocation.Node object at 0x7f26fce8d2b0>, <RegisterAllocation.Node object at 0x7f26fce41ac0>, <RegisterAllocation.Node object at 0x7f26fce35310>]
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce64680>, <RegisterAllocation.Node object at 0x7f26fce9d6d0>, <RegisterAllocation.Node object at 0x7f26fce9d7c0>, <RegisterAllocation.Node object at 0x7f26fce9d8b0>, <RegisterAllocation.Node object at 0x7f26fce9d9a0>, <RegisterAllocation.Node object at 0x7f26fce9da90>, <RegisterAllocation.Node object at 0x7f26fce9db80>, <RegisterAllocation.Node object at 0x7f26fce64a40>, <RegisterAllocation.Node object at 0x7f26fce4d400>, <RegisterAllocation.Node object at 0x7f26fce3a780>, <RegisterAllocation.Node object at 0x7f26fce4bf20>, <RegisterAllocation.Node object at 0x7f26fce49df0>, <RegisterAllocation.Node object at 0x7f26fce49610>, <RegisterAllocation.Node object at 0x7f26fce8d1c0>, <RegisterAllocation.Node object at 0x7f26fce4a720>, <RegisterAllocation.Node object at 0x7f26fce65040>, <RegisterAllocation.Node object at 0x7f26fce42d80>, <RegisterAllocation.Node object at 0x7f26fce3a7b0>, <RegisterAllocation.Node object at 0x7f26fce7df40>, <RegisterAllocation.Node object at 0x7f26fce7ac30>, <RegisterAllocation.Node object at 0x7f26fce4e090>, <RegisterAllocation.Node object at 0x7f26fce41f70>, <RegisterAllocation.Node object at 0x7f26fce49460>, <RegisterAllocation.Node object at 0x7f26fce8d190>, <RegisterAllocation.Node object at 0x7f26fce45310>, <RegisterAllocation.Node object at 0x7f26fce8d280>, <RegisterAllocation.Node object at 0x7f26fce8d1f0>, <RegisterAllocation.Node object at 0x7f26fce8d220>, <RegisterAllocation.Node object at 0x7f26fce8d250>, <RegisterAllocation.Node object at 0x7f26fce7d220>, <RegisterAllocation.Node object at 0x7f26fce8d2b0>, <RegisterAllocation.Node object at 0x7f26fce41ac0>]
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce64680>, <RegisterAllocation.Node object at 0x7f26fce9d6d0>, <RegisterAllocation.Node object at 0x7f26fce9d7c0>, <RegisterAllocation.Node object at 0x7f26fce9d8b0>, <RegisterAllocation.Node object at 0x7f26fce9d9a0>, <RegisterAllocation.Node object at 0x7f26fce9da90>, <RegisterAllocation.Node object at 0x7f26fce9db80>, <RegisterAllocation.Node object at 0x7f26fce4d400>, <RegisterAllocation.Node object at 0x7f26fce3a780>, <RegisterAllocation.Node object at 0x7f26fce4bf20>, <RegisterAllocation.Node object at 0x7f26fce49df0>, <RegisterAllocation.Node object at 0x7f26fce49610>, <RegisterAllocation.Node object at 0x7f26fce8d1c0>, <RegisterAllocation.Node object at 0x7f26fce4a720>, <RegisterAllocation.Node object at 0x7f26fce65040>, <RegisterAllocation.Node object at 0x7f26fce42d80>, <RegisterAllocation.Node object at 0x7f26fce3a7b0>, <RegisterAllocation.Node object at 0x7f26fce7df40>, <RegisterAllocation.Node object at 0x7f26fce7ac30>, <RegisterAllocation.Node object at 0x7f26fce4e090>, <RegisterAllocation.Node object at 0x7f26fce41f70>, <RegisterAllocation.Node object at 0x7f26fce49460>, <RegisterAllocation.Node object at 0x7f26fce8d190>, <RegisterAllocation.Node object at 0x7f26fce45310>, <RegisterAllocation.Node object at 0x7f26fce8d280>, <RegisterAllocation.Node object at 0x7f26fce8d1f0>, <RegisterAllocation.Node object at 0x7f26fce8d220>, <RegisterAllocation.Node object at 0x7f26fce8d250>, <RegisterAllocation.Node object at 0x7f26fce7d220>, <RegisterAllocation.Node object at 0x7f26fce8d2b0>, <RegisterAllocation.Node object at 0x7f26fce41ac0>]
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce64680>, <RegisterAllocation.Node object at 0x7f26fce9d6d0>, <RegisterAllocation.Node object at 0x7f26fce9d7c0>, <RegisterAllocation.Node object at 0x7f26fce9d8b0>, <RegisterAllocation.Node object at 0x7f26fce9d9a0>, <RegisterAllocation.Node object at 0x7f26fce9da90>, <RegisterAllocation.Node object at 0x7f26fce9db80>, <RegisterAllocation.Node object at 0x7f26fce3a780>, <RegisterAllocation.Node object at 0x7f26fce4bf20>, <RegisterAllocation.Node object at 0x7f26fce49df0>, <RegisterAllocation.Node object at 0x7f26fce49610>, <RegisterAllocation.Node object at 0x7f26fce8d1c0>, <RegisterAllocation.Node object at 0x7f26fce4a720>, <RegisterAllocation.Node object at 0x7f26fce65040>, <RegisterAllocation.Node object at 0x7f26fce42d80>, <RegisterAllocation.Node object at 0x7f26fce3a7b0>, <RegisterAllocation.Node object at 0x7f26fce7df40>, <RegisterAllocation.Node object at 0x7f26fce7ac30>, <RegisterAllocation.Node object at 0x7f26fce4e090>, <RegisterAllocation.Node object at 0x7f26fce41f70>, <RegisterAllocation.Node object at 0x7f26fce49460>, <RegisterAllocation.Node object at 0x7f26fce8d190>, <RegisterAllocation.Node object at 0x7f26fce45310>, <RegisterAllocation.Node object at 0x7f26fce8d280>, <RegisterAllocation.Node object at 0x7f26fce8d1f0>, <RegisterAllocation.Node object at 0x7f26fce8d220>, <RegisterAllocation.Node object at 0x7f26fce8d250>, <RegisterAllocation.Node object at 0x7f26fce7d220>, <RegisterAllocation.Node object at 0x7f26fce8d2b0>, <RegisterAllocation.Node object at 0x7f26fce41ac0>]
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce64680>, <RegisterAllocation.Node object at 0x7f26fce9d6d0>, <RegisterAllocation.Node object at 0x7f26fce9d7c0>, <RegisterAllocation.Node object at 0x7f26fce9d8b0>, <RegisterAllocation.Node object at 0x7f26fce9d9a0>, <RegisterAllocation.Node object at 0x7f26fce9da90>, <RegisterAllocation.Node object at 0x7f26fce9db80>, <RegisterAllocation.Node object at 0x7f26fce4bf20>, <RegisterAllocation.Node object at 0x7f26fce49df0>, <RegisterAllocation.Node object at 0x7f26fce49610>, <RegisterAllocation.Node object at 0x7f26fce8d1c0>, <RegisterAllocation.Node object at 0x7f26fce4a720>, <RegisterAllocation.Node object at 0x7f26fce65040>, <RegisterAllocation.Node object at 0x7f26fce42d80>, <RegisterAllocation.Node object at 0x7f26fce3a7b0>, <RegisterAllocation.Node object at 0x7f26fce7df40>, <RegisterAllocation.Node object at 0x7f26fce7ac30>, <RegisterAllocation.Node object at 0x7f26fce4e090>, <RegisterAllocation.Node object at 0x7f26fce41f70>, <RegisterAllocation.Node object at 0x7f26fce49460>, <RegisterAllocation.Node object at 0x7f26fce8d190>, <RegisterAllocation.Node object at 0x7f26fce45310>, <RegisterAllocation.Node object at 0x7f26fce8d280>, <RegisterAllocation.Node object at 0x7f26fce8d1f0>, <RegisterAllocation.Node object at 0x7f26fce8d220>, <RegisterAllocation.Node object at 0x7f26fce8d250>, <RegisterAllocation.Node object at 0x7f26fce7d220>, <RegisterAllocation.Node object at 0x7f26fce8d2b0>, <RegisterAllocation.Node object at 0x7f26fce41ac0>]
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce64680>, <RegisterAllocation.Node object at 0x7f26fce9d6d0>, <RegisterAllocation.Node object at 0x7f26fce9d7c0>, <RegisterAllocation.Node object at 0x7f26fce9d8b0>, <RegisterAllocation.Node object at 0x7f26fce9d9a0>, <RegisterAllocation.Node object at 0x7f26fce9da90>, <RegisterAllocation.Node object at 0x7f26fce9db80>, <RegisterAllocation.Node object at 0x7f26fce49df0>, <RegisterAllocation.Node object at 0x7f26fce49610>, <RegisterAllocation.Node object at 0x7f26fce8d1c0>, <RegisterAllocation.Node object at 0x7f26fce4a720>, <RegisterAllocation.Node object at 0x7f26fce65040>, <RegisterAllocation.Node object at 0x7f26fce42d80>, <RegisterAllocation.Node object at 0x7f26fce3a7b0>, <RegisterAllocation.Node object at 0x7f26fce7df40>, <RegisterAllocation.Node object at 0x7f26fce7ac30>, <RegisterAllocation.Node object at 0x7f26fce4e090>, <RegisterAllocation.Node object at 0x7f26fce41f70>, <RegisterAllocation.Node object at 0x7f26fce49460>, <RegisterAllocation.Node object at 0x7f26fce8d190>, <RegisterAllocation.Node object at 0x7f26fce45310>, <RegisterAllocation.Node object at 0x7f26fce8d280>, <RegisterAllocation.Node object at 0x7f26fce8d1f0>, <RegisterAllocation.Node object at 0x7f26fce8d220>, <RegisterAllocation.Node object at 0x7f26fce8d250>, <RegisterAllocation.Node object at 0x7f26fce7d220>, <RegisterAllocation.Node object at 0x7f26fce8d2b0>, <RegisterAllocation.Node object at 0x7f26fce41ac0>]
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce64680>, <RegisterAllocation.Node object at 0x7f26fce9d6d0>, <RegisterAllocation.Node object at 0x7f26fce9d7c0>, <RegisterAllocation.Node object at 0x7f26fce9d8b0>, <RegisterAllocation.Node object at 0x7f26fce9d9a0>, <RegisterAllocation.Node object at 0x7f26fce9da90>, <RegisterAllocation.Node object at 0x7f26fce9db80>, <RegisterAllocation.Node object at 0x7f26fce49610>, <RegisterAllocation.Node object at 0x7f26fce8d1c0>, <RegisterAllocation.Node object at 0x7f26fce4a720>, <RegisterAllocation.Node object at 0x7f26fce65040>, <RegisterAllocation.Node object at 0x7f26fce42d80>, <RegisterAllocation.Node object at 0x7f26fce3a7b0>, <RegisterAllocation.Node object at 0x7f26fce7df40>, <RegisterAllocation.Node object at 0x7f26fce7ac30>, <RegisterAllocation.Node object at 0x7f26fce4e090>, <RegisterAllocation.Node object at 0x7f26fce41f70>, <RegisterAllocation.Node object at 0x7f26fce49460>, <RegisterAllocation.Node object at 0x7f26fce8d190>, <RegisterAllocation.Node object at 0x7f26fce45310>, <RegisterAllocation.Node object at 0x7f26fce8d280>, <RegisterAllocation.Node object at 0x7f26fce8d1f0>, <RegisterAllocation.Node object at 0x7f26fce8d220>, <RegisterAllocation.Node object at 0x7f26fce8d250>, <RegisterAllocation.Node object at 0x7f26fce7d220>, <RegisterAllocation.Node object at 0x7f26fce8d2b0>, <RegisterAllocation.Node object at 0x7f26fce41ac0>]
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce64680>, <RegisterAllocation.Node object at 0x7f26fce9d6d0>, <RegisterAllocation.Node object at 0x7f26fce9d7c0>, <RegisterAllocation.Node object at 0x7f26fce9d8b0>, <RegisterAllocation.Node object at 0x7f26fce9d9a0>, <RegisterAllocation.Node object at 0x7f26fce9da90>, <RegisterAllocation.Node object at 0x7f26fce9db80>, <RegisterAllocation.Node object at 0x7f26fce8d1c0>, <RegisterAllocation.Node object at 0x7f26fce4a720>, <RegisterAllocation.Node object at 0x7f26fce65040>, <RegisterAllocation.Node object at 0x7f26fce42d80>, <RegisterAllocation.Node object at 0x7f26fce3a7b0>, <RegisterAllocation.Node object at 0x7f26fce7df40>, <RegisterAllocation.Node object at 0x7f26fce7ac30>, <RegisterAllocation.Node object at 0x7f26fce4e090>, <RegisterAllocation.Node object at 0x7f26fce41f70>, <RegisterAllocation.Node object at 0x7f26fce49460>, <RegisterAllocation.Node object at 0x7f26fce8d190>, <RegisterAllocation.Node object at 0x7f26fce45310>, <RegisterAllocation.Node object at 0x7f26fce8d280>, <RegisterAllocation.Node object at 0x7f26fce8d1f0>, <RegisterAllocation.Node object at 0x7f26fce8d220>, <RegisterAllocation.Node object at 0x7f26fce8d250>, <RegisterAllocation.Node object at 0x7f26fce7d220>, <RegisterAllocation.Node object at 0x7f26fce8d2b0>, <RegisterAllocation.Node object at 0x7f26fce41ac0>]
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce64680>, <RegisterAllocation.Node object at 0x7f26fce9d6d0>, <RegisterAllocation.Node object at 0x7f26fce9d7c0>, <RegisterAllocation.Node object at 0x7f26fce9d8b0>, <RegisterAllocation.Node object at 0x7f26fce9d9a0>, <RegisterAllocation.Node object at 0x7f26fce9da90>, <RegisterAllocation.Node object at 0x7f26fce9db80>, <RegisterAllocation.Node object at 0x7f26fce4a720>, <RegisterAllocation.Node object at 0x7f26fce65040>, <RegisterAllocation.Node object at 0x7f26fce42d80>, <RegisterAllocation.Node object at 0x7f26fce3a7b0>, <RegisterAllocation.Node object at 0x7f26fce7df40>, <RegisterAllocation.Node object at 0x7f26fce7ac30>, <RegisterAllocation.Node object at 0x7f26fce4e090>, <RegisterAllocation.Node object at 0x7f26fce41f70>, <RegisterAllocation.Node object at 0x7f26fce49460>, <RegisterAllocation.Node object at 0x7f26fce8d190>, <RegisterAllocation.Node object at 0x7f26fce45310>, <RegisterAllocation.Node object at 0x7f26fce8d280>, <RegisterAllocation.Node object at 0x7f26fce8d1f0>, <RegisterAllocation.Node object at 0x7f26fce8d220>, <RegisterAllocation.Node object at 0x7f26fce8d250>, <RegisterAllocation.Node object at 0x7f26fce7d220>, <RegisterAllocation.Node object at 0x7f26fce8d2b0>, <RegisterAllocation.Node object at 0x7f26fce41ac0>]
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce64680>, <RegisterAllocation.Node object at 0x7f26fce9d6d0>, <RegisterAllocation.Node object at 0x7f26fce9d7c0>, <RegisterAllocation.Node object at 0x7f26fce9d8b0>, <RegisterAllocation.Node object at 0x7f26fce9d9a0>, <RegisterAllocation.Node object at 0x7f26fce9da90>, <RegisterAllocation.Node object at 0x7f26fce9db80>, <RegisterAllocation.Node object at 0x7f26fce4a720>, <RegisterAllocation.Node object at 0x7f26fce65040>, <RegisterAllocation.Node object at 0x7f26fce42d80>, <RegisterAllocation.Node object at 0x7f26fce3a7b0>, <RegisterAllocation.Node object at 0x7f26fce7df40>, <RegisterAllocation.Node object at 0x7f26fce4e090>, <RegisterAllocation.Node object at 0x7f26fce41f70>, <RegisterAllocation.Node object at 0x7f26fce49460>, <RegisterAllocation.Node object at 0x7f26fce8d190>, <RegisterAllocation.Node object at 0x7f26fce45310>, <RegisterAllocation.Node object at 0x7f26fce8d280>, <RegisterAllocation.Node object at 0x7f26fce8d1f0>, <RegisterAllocation.Node object at 0x7f26fce8d220>, <RegisterAllocation.Node object at 0x7f26fce8d250>, <RegisterAllocation.Node object at 0x7f26fce7d220>, <RegisterAllocation.Node object at 0x7f26fce8d2b0>, <RegisterAllocation.Node object at 0x7f26fce41ac0>]
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce64680>, <RegisterAllocation.Node object at 0x7f26fce9d6d0>, <RegisterAllocation.Node object at 0x7f26fce9d7c0>, <RegisterAllocation.Node object at 0x7f26fce9d8b0>, <RegisterAllocation.Node object at 0x7f26fce9d9a0>, <RegisterAllocation.Node object at 0x7f26fce9da90>, <RegisterAllocation.Node object at 0x7f26fce9db80>, <RegisterAllocation.Node object at 0x7f26fce65040>, <RegisterAllocation.Node object at 0x7f26fce42d80>, <RegisterAllocation.Node object at 0x7f26fce3a7b0>, <RegisterAllocation.Node object at 0x7f26fce7df40>, <RegisterAllocation.Node object at 0x7f26fce4e090>, <RegisterAllocation.Node object at 0x7f26fce41f70>, <RegisterAllocation.Node object at 0x7f26fce49460>, <RegisterAllocation.Node object at 0x7f26fce8d190>, <RegisterAllocation.Node object at 0x7f26fce45310>, <RegisterAllocation.Node object at 0x7f26fce8d280>, <RegisterAllocation.Node object at 0x7f26fce8d1f0>, <RegisterAllocation.Node object at 0x7f26fce8d220>, <RegisterAllocation.Node object at 0x7f26fce8d250>, <RegisterAllocation.Node object at 0x7f26fce7d220>, <RegisterAllocation.Node object at 0x7f26fce8d2b0>, <RegisterAllocation.Node object at 0x7f26fce41ac0>]
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce64680>, <RegisterAllocation.Node object at 0x7f26fce9d6d0>, <RegisterAllocation.Node object at 0x7f26fce9d7c0>, <RegisterAllocation.Node object at 0x7f26fce9d8b0>, <RegisterAllocation.Node object at 0x7f26fce9d9a0>, <RegisterAllocation.Node object at 0x7f26fce9da90>, <RegisterAllocation.Node object at 0x7f26fce9db80>, <RegisterAllocation.Node object at 0x7f26fce42d80>, <RegisterAllocation.Node object at 0x7f26fce3a7b0>, <RegisterAllocation.Node object at 0x7f26fce7df40>, <RegisterAllocation.Node object at 0x7f26fce4e090>, <RegisterAllocation.Node object at 0x7f26fce41f70>, <RegisterAllocation.Node object at 0x7f26fce49460>, <RegisterAllocation.Node object at 0x7f26fce8d190>, <RegisterAllocation.Node object at 0x7f26fce45310>, <RegisterAllocation.Node object at 0x7f26fce8d280>, <RegisterAllocation.Node object at 0x7f26fce8d1f0>, <RegisterAllocation.Node object at 0x7f26fce8d220>, <RegisterAllocation.Node object at 0x7f26fce8d250>, <RegisterAllocation.Node object at 0x7f26fce7d220>, <RegisterAllocation.Node object at 0x7f26fce8d2b0>, <RegisterAllocation.Node object at 0x7f26fce41ac0>]
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce64680>, <RegisterAllocation.Node object at 0x7f26fce9d6d0>, <RegisterAllocation.Node object at 0x7f26fce9d7c0>, <RegisterAllocation.Node object at 0x7f26fce9d8b0>, <RegisterAllocation.Node object at 0x7f26fce9d9a0>, <RegisterAllocation.Node object at 0x7f26fce9da90>, <RegisterAllocation.Node object at 0x7f26fce9db80>, <RegisterAllocation.Node object at 0x7f26fce3a7b0>, <RegisterAllocation.Node object at 0x7f26fce7df40>, <RegisterAllocation.Node object at 0x7f26fce4e090>, <RegisterAllocation.Node object at 0x7f26fce41f70>, <RegisterAllocation.Node object at 0x7f26fce49460>, <RegisterAllocation.Node object at 0x7f26fce8d190>, <RegisterAllocation.Node object at 0x7f26fce45310>, <RegisterAllocation.Node object at 0x7f26fce8d280>, <RegisterAllocation.Node object at 0x7f26fce8d1f0>, <RegisterAllocation.Node object at 0x7f26fce8d220>, <RegisterAllocation.Node object at 0x7f26fce8d250>, <RegisterAllocation.Node object at 0x7f26fce7d220>, <RegisterAllocation.Node object at 0x7f26fce8d2b0>, <RegisterAllocation.Node object at 0x7f26fce41ac0>]
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce64680>, <RegisterAllocation.Node object at 0x7f26fce9d6d0>, <RegisterAllocation.Node object at 0x7f26fce9d7c0>, <RegisterAllocation.Node object at 0x7f26fce9d8b0>, <RegisterAllocation.Node object at 0x7f26fce9d9a0>, <RegisterAllocation.Node object at 0x7f26fce9da90>, <RegisterAllocation.Node object at 0x7f26fce9db80>, <RegisterAllocation.Node object at 0x7f26fce7df40>, <RegisterAllocation.Node object at 0x7f26fce4e090>, <RegisterAllocation.Node object at 0x7f26fce41f70>, <RegisterAllocation.Node object at 0x7f26fce49460>, <RegisterAllocation.Node object at 0x7f26fce8d190>, <RegisterAllocation.Node object at 0x7f26fce45310>, <RegisterAllocation.Node object at 0x7f26fce8d280>, <RegisterAllocation.Node object at 0x7f26fce8d1f0>, <RegisterAllocation.Node object at 0x7f26fce8d220>, <RegisterAllocation.Node object at 0x7f26fce8d250>, <RegisterAllocation.Node object at 0x7f26fce7d220>, <RegisterAllocation.Node object at 0x7f26fce8d2b0>, <RegisterAllocation.Node object at 0x7f26fce41ac0>]
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce64680>, <RegisterAllocation.Node object at 0x7f26fce9d6d0>, <RegisterAllocation.Node object at 0x7f26fce9d7c0>, <RegisterAllocation.Node object at 0x7f26fce9d8b0>, <RegisterAllocation.Node object at 0x7f26fce9d9a0>, <RegisterAllocation.Node object at 0x7f26fce9da90>, <RegisterAllocation.Node object at 0x7f26fce9db80>, <RegisterAllocation.Node object at 0x7f26fce4e090>, <RegisterAllocation.Node object at 0x7f26fce41f70>, <RegisterAllocation.Node object at 0x7f26fce49460>, <RegisterAllocation.Node object at 0x7f26fce8d190>, <RegisterAllocation.Node object at 0x7f26fce45310>, <RegisterAllocation.Node object at 0x7f26fce8d280>, <RegisterAllocation.Node object at 0x7f26fce8d1f0>, <RegisterAllocation.Node object at 0x7f26fce8d220>, <RegisterAllocation.Node object at 0x7f26fce8d250>, <RegisterAllocation.Node object at 0x7f26fce7d220>, <RegisterAllocation.Node object at 0x7f26fce8d2b0>, <RegisterAllocation.Node object at 0x7f26fce41ac0>]
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce9d6d0>, <RegisterAllocation.Node object at 0x7f26fce9d7c0>, <RegisterAllocation.Node object at 0x7f26fce9d8b0>, <RegisterAllocation.Node object at 0x7f26fce9d9a0>, <RegisterAllocation.Node object at 0x7f26fce9da90>, <RegisterAllocation.Node object at 0x7f26fce9db80>, <RegisterAllocation.Node object at 0x7f26fce4e090>, <RegisterAllocation.Node object at 0x7f26fce41f70>, <RegisterAllocation.Node object at 0x7f26fce49460>, <RegisterAllocation.Node object at 0x7f26fce8d190>, <RegisterAllocation.Node object at 0x7f26fce45310>, <RegisterAllocation.Node object at 0x7f26fce8d280>, <RegisterAllocation.Node object at 0x7f26fce8d1f0>, <RegisterAllocation.Node object at 0x7f26fce8d220>, <RegisterAllocation.Node object at 0x7f26fce8d250>, <RegisterAllocation.Node object at 0x7f26fce7d220>, <RegisterAllocation.Node object at 0x7f26fce8d2b0>, <RegisterAllocation.Node object at 0x7f26fce41ac0>]
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce9d6d0>, <RegisterAllocation.Node object at 0x7f26fce9d7c0>, <RegisterAllocation.Node object at 0x7f26fce9d8b0>, <RegisterAllocation.Node object at 0x7f26fce9d9a0>, <RegisterAllocation.Node object at 0x7f26fce9da90>, <RegisterAllocation.Node object at 0x7f26fce4e090>, <RegisterAllocation.Node object at 0x7f26fce41f70>, <RegisterAllocation.Node object at 0x7f26fce49460>, <RegisterAllocation.Node object at 0x7f26fce8d190>, <RegisterAllocation.Node object at 0x7f26fce45310>, <RegisterAllocation.Node object at 0x7f26fce8d280>, <RegisterAllocation.Node object at 0x7f26fce8d1f0>, <RegisterAllocation.Node object at 0x7f26fce8d220>, <RegisterAllocation.Node object at 0x7f26fce8d250>, <RegisterAllocation.Node object at 0x7f26fce7d220>, <RegisterAllocation.Node object at 0x7f26fce8d2b0>, <RegisterAllocation.Node object at 0x7f26fce41ac0>]
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce9d6d0>, <RegisterAllocation.Node object at 0x7f26fce9d7c0>, <RegisterAllocation.Node object at 0x7f26fce9d8b0>, <RegisterAllocation.Node object at 0x7f26fce9d9a0>, <RegisterAllocation.Node object at 0x7f26fce4e090>, <RegisterAllocation.Node object at 0x7f26fce41f70>, <RegisterAllocation.Node object at 0x7f26fce49460>, <RegisterAllocation.Node object at 0x7f26fce8d190>, <RegisterAllocation.Node object at 0x7f26fce45310>, <RegisterAllocation.Node object at 0x7f26fce8d280>, <RegisterAllocation.Node object at 0x7f26fce8d1f0>, <RegisterAllocation.Node object at 0x7f26fce8d220>, <RegisterAllocation.Node object at 0x7f26fce8d250>, <RegisterAllocation.Node object at 0x7f26fce7d220>, <RegisterAllocation.Node object at 0x7f26fce8d2b0>, <RegisterAllocation.Node object at 0x7f26fce41ac0>]
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce9d7c0>, <RegisterAllocation.Node object at 0x7f26fce9d8b0>, <RegisterAllocation.Node object at 0x7f26fce9d9a0>, <RegisterAllocation.Node object at 0x7f26fce4e090>, <RegisterAllocation.Node object at 0x7f26fce41f70>, <RegisterAllocation.Node object at 0x7f26fce49460>, <RegisterAllocation.Node object at 0x7f26fce8d190>, <RegisterAllocation.Node object at 0x7f26fce45310>, <RegisterAllocation.Node object at 0x7f26fce8d280>, <RegisterAllocation.Node object at 0x7f26fce8d1f0>, <RegisterAllocation.Node object at 0x7f26fce8d220>, <RegisterAllocation.Node object at 0x7f26fce8d250>, <RegisterAllocation.Node object at 0x7f26fce7d220>, <RegisterAllocation.Node object at 0x7f26fce8d2b0>, <RegisterAllocation.Node object at 0x7f26fce41ac0>]
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce9d8b0>, <RegisterAllocation.Node object at 0x7f26fce9d9a0>, <RegisterAllocation.Node object at 0x7f26fce4e090>, <RegisterAllocation.Node object at 0x7f26fce41f70>, <RegisterAllocation.Node object at 0x7f26fce49460>, <RegisterAllocation.Node object at 0x7f26fce8d190>, <RegisterAllocation.Node object at 0x7f26fce45310>, <RegisterAllocation.Node object at 0x7f26fce8d280>, <RegisterAllocation.Node object at 0x7f26fce8d1f0>, <RegisterAllocation.Node object at 0x7f26fce8d220>, <RegisterAllocation.Node object at 0x7f26fce8d250>, <RegisterAllocation.Node object at 0x7f26fce7d220>, <RegisterAllocation.Node object at 0x7f26fce8d2b0>, <RegisterAllocation.Node object at 0x7f26fce41ac0>]
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce9d8b0>, <RegisterAllocation.Node object at 0x7f26fce4e090>, <RegisterAllocation.Node object at 0x7f26fce41f70>, <RegisterAllocation.Node object at 0x7f26fce49460>, <RegisterAllocation.Node object at 0x7f26fce8d190>, <RegisterAllocation.Node object at 0x7f26fce45310>, <RegisterAllocation.Node object at 0x7f26fce8d280>, <RegisterAllocation.Node object at 0x7f26fce8d1f0>, <RegisterAllocation.Node object at 0x7f26fce8d220>, <RegisterAllocation.Node object at 0x7f26fce8d250>, <RegisterAllocation.Node object at 0x7f26fce7d220>, <RegisterAllocation.Node object at 0x7f26fce8d2b0>, <RegisterAllocation.Node object at 0x7f26fce41ac0>]
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce4e090>, <RegisterAllocation.Node object at 0x7f26fce41f70>, <RegisterAllocation.Node object at 0x7f26fce49460>, <RegisterAllocation.Node object at 0x7f26fce8d190>, <RegisterAllocation.Node object at 0x7f26fce45310>, <RegisterAllocation.Node object at 0x7f26fce8d280>, <RegisterAllocation.Node object at 0x7f26fce8d1f0>, <RegisterAllocation.Node object at 0x7f26fce8d220>, <RegisterAllocation.Node object at 0x7f26fce8d250>, <RegisterAllocation.Node object at 0x7f26fce7d220>, <RegisterAllocation.Node object at 0x7f26fce8d2b0>, <RegisterAllocation.Node object at 0x7f26fce41ac0>]
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce41f70>, <RegisterAllocation.Node object at 0x7f26fce49460>, <RegisterAllocation.Node object at 0x7f26fce8d190>, <RegisterAllocation.Node object at 0x7f26fce45310>, <RegisterAllocation.Node object at 0x7f26fce8d280>, <RegisterAllocation.Node object at 0x7f26fce8d1f0>, <RegisterAllocation.Node object at 0x7f26fce8d220>, <RegisterAllocation.Node object at 0x7f26fce8d250>, <RegisterAllocation.Node object at 0x7f26fce7d220>, <RegisterAllocation.Node object at 0x7f26fce8d2b0>, <RegisterAllocation.Node object at 0x7f26fce41ac0>]
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce49460>, <RegisterAllocation.Node object at 0x7f26fce8d190>, <RegisterAllocation.Node object at 0x7f26fce45310>, <RegisterAllocation.Node object at 0x7f26fce8d280>, <RegisterAllocation.Node object at 0x7f26fce8d1f0>, <RegisterAllocation.Node object at 0x7f26fce8d220>, <RegisterAllocation.Node object at 0x7f26fce8d250>, <RegisterAllocation.Node object at 0x7f26fce7d220>, <RegisterAllocation.Node object at 0x7f26fce8d2b0>, <RegisterAllocation.Node object at 0x7f26fce41ac0>]
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce8d190>, <RegisterAllocation.Node object at 0x7f26fce45310>, <RegisterAllocation.Node object at 0x7f26fce8d280>, <RegisterAllocation.Node object at 0x7f26fce8d1f0>, <RegisterAllocation.Node object at 0x7f26fce8d220>, <RegisterAllocation.Node object at 0x7f26fce8d250>, <RegisterAllocation.Node object at 0x7f26fce7d220>, <RegisterAllocation.Node object at 0x7f26fce8d2b0>, <RegisterAllocation.Node object at 0x7f26fce41ac0>]
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce45310>, <RegisterAllocation.Node object at 0x7f26fce8d280>, <RegisterAllocation.Node object at 0x7f26fce8d1f0>, <RegisterAllocation.Node object at 0x7f26fce8d220>, <RegisterAllocation.Node object at 0x7f26fce8d250>, <RegisterAllocation.Node object at 0x7f26fce7d220>, <RegisterAllocation.Node object at 0x7f26fce8d2b0>, <RegisterAllocation.Node object at 0x7f26fce41ac0>]
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce8d280>, <RegisterAllocation.Node object at 0x7f26fce8d1f0>, <RegisterAllocation.Node object at 0x7f26fce8d220>, <RegisterAllocation.Node object at 0x7f26fce8d250>, <RegisterAllocation.Node object at 0x7f26fce7d220>, <RegisterAllocation.Node object at 0x7f26fce8d2b0>, <RegisterAllocation.Node object at 0x7f26fce41ac0>]
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce8d1f0>, <RegisterAllocation.Node object at 0x7f26fce8d220>, <RegisterAllocation.Node object at 0x7f26fce8d250>, <RegisterAllocation.Node object at 0x7f26fce7d220>, <RegisterAllocation.Node object at 0x7f26fce8d2b0>, <RegisterAllocation.Node object at 0x7f26fce41ac0>]
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce8d220>, <RegisterAllocation.Node object at 0x7f26fce8d250>, <RegisterAllocation.Node object at 0x7f26fce7d220>, <RegisterAllocation.Node object at 0x7f26fce8d2b0>, <RegisterAllocation.Node object at 0x7f26fce41ac0>]
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce8d250>, <RegisterAllocation.Node object at 0x7f26fce7d220>, <RegisterAllocation.Node object at 0x7f26fce8d2b0>, <RegisterAllocation.Node object at 0x7f26fce41ac0>]
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce7d220>, <RegisterAllocation.Node object at 0x7f26fce8d2b0>, <RegisterAllocation.Node object at 0x7f26fce41ac0>]
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce8d2b0>, <RegisterAllocation.Node object at 0x7f26fce41ac0>]
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce41ac0>]
------------------COLOR GRAPH INTEGER.---------------------
Reamining Nodes: []
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
-----------------COLORED INTEGER INTER GRAPH.------------------
Reg(AX) Reg(AX) spillCost: inf color: 1 pruned: False
Reg(BX) Reg(BX) spillCost: inf color: 2 pruned: False
Reg(CX) Reg(CX) spillCost: inf color: 9 pruned: False
Reg(DX) Reg(DX) spillCost: inf color: 10 pruned: False
Reg(DI) Reg(DI) spillCost: inf color: 12 pruned: False
Reg(SI) Reg(SI) spillCost: inf color: 11 pruned: False
Reg(R8d) Reg(R8d) spillCost: inf color: 8 pruned: False
Reg(R9d) Reg(R9d) spillCost: inf color: 7 pruned: False
Reg(R12d) Reg(R12d) spillCost: inf color: 3 pruned: False
Reg(R13d) Reg(R13d) spillCost: inf color: 4 pruned: False
Reg(R14d) Reg(R14d) spillCost: inf color: 5 pruned: False
Reg(R15d) Reg(R15d) spillCost: inf color: 6 pruned: False
Pseudo(tmp.47) Pseudo(tmp.47) spillCost: 3.0 color: None pruned: True
Pseudo(tmp.48) Pseudo(tmp.48) spillCost: 8.0 color: 12 pruned: False
Pseudo(tmp.49) Pseudo(tmp.49) spillCost: 7.0 color: 11 pruned: False
Pseudo(tmp.50) Pseudo(tmp.50) spillCost: 6.0 color: 10 pruned: False
Pseudo(tmp.51) Pseudo(tmp.51) spillCost: 4.0 color: 9 pruned: False
Pseudo(tmp.52) Pseudo(tmp.52) spillCost: 4.0 color: 8 pruned: False
Pseudo(tmp.53) Pseudo(tmp.53) spillCost: 6.0 color: 7 pruned: False
Pseudo(tmp.54) Pseudo(tmp.54) spillCost: 3.0 color: 6 pruned: False
Pseudo(tmp.55) Pseudo(tmp.55) spillCost: 3.0 color: 5 pruned: False
Pseudo(tmp.56) Pseudo(tmp.56) spillCost: 3.0 color: 4 pruned: False
Pseudo(tmp.57) Pseudo(tmp.57) spillCost: 3.0 color: 3 pruned: False
Pseudo(tmp.58) Pseudo(tmp.58) spillCost: 3.0 color: 2 pruned: False
Pseudo(tmp.59) Pseudo(tmp.59) spillCost: 3.0 color: 1 pruned: False
Pseudo(tmp.73) Pseudo(tmp.73) spillCost: 1.0 color: 1 pruned: False
Pseudo(tmp.74) Pseudo(tmp.74) spillCost: 8.0 color: 12 pruned: False
Pseudo(tmp.75) Pseudo(tmp.75) spillCost: 5.0 color: 11 pruned: False
Pseudo(tmp.76) Pseudo(tmp.76) spillCost: 5.0 color: 10 pruned: False
Pseudo(tmp.77) Pseudo(tmp.77) spillCost: 4.0 color: 9 pruned: False
Pseudo(tmp.78) Pseudo(tmp.78) spillCost: 4.0 color: 8 pruned: False
Pseudo(tmp.79) Pseudo(tmp.79) spillCost: 3.0 color: 7 pruned: False
Pseudo(tmp.80) Pseudo(tmp.80) spillCost: 3.0 color: 6 pruned: False
Pseudo(tmp.81) Pseudo(tmp.81) spillCost: 3.0 color: 5 pruned: False
Pseudo(tmp.82) Pseudo(tmp.82) spillCost: 3.0 color: 1 pruned: False
Pseudo(tmp.83) Pseudo(tmp.83) spillCost: 3.0 color: 4 pruned: False
Pseudo(tmp.84) Pseudo(tmp.84) spillCost: 3.0 color: 3 pruned: False
Pseudo(tmp.85) Pseudo(tmp.85) spillCost: 3.0 color: 2 pruned: False
Pseudo(tmp.86) Pseudo(tmp.86) spillCost: 3.0 color: 1 pruned: False
Pseudo(tmp.100) Pseudo(tmp.100) spillCost: 1.0 color: 1 pruned: False
Pseudo(tmp.101) Pseudo(tmp.101) spillCost: 3.0 color: 1 pruned: False
Pseudo(tmp.104) Pseudo(tmp.104) spillCost: 3.0 color: 1 pruned: False
---------------CREATE REGISTER MAP.-------------------
{1: Reg(AX), 2: Reg(BX), 9: Reg(CX), 10: Reg(DX), 12: Reg(DI), 11: Reg(SI), 8: Reg(R8d), 7: Reg(R9d), 3: Reg(R12d), 4: Reg(R13d), 5: Reg(R14d), 6: Reg(R15d)}
Calle Saved Registers for target: {Reg(BX), Reg(R15d), Reg(R13d), Reg(R12d), Reg(R14d)}
------------------REGISTER INTEGER MAP.--------------------
{Pseudo(tmp.48): Reg(DI), Pseudo(tmp.49): Reg(SI), Pseudo(tmp.50): Reg(DX), Pseudo(tmp.51): Reg(CX), Pseudo(tmp.52): Reg(R8d), Pseudo(tmp.53): Reg(R9d), Pseudo(tmp.54): Reg(R15d), Pseudo(tmp.55): Reg(R14d), Pseudo(tmp.56): Reg(R13d), Pseudo(tmp.57): Reg(R12d), Pseudo(tmp.58): Reg(BX), Pseudo(tmp.59): Reg(AX), Pseudo(tmp.73): Reg(AX), Pseudo(tmp.74): Reg(DI), Pseudo(tmp.75): Reg(SI), Pseudo(tmp.76): Reg(DX), Pseudo(tmp.77): Reg(CX), Pseudo(tmp.78): Reg(R8d), Pseudo(tmp.79): Reg(R9d), Pseudo(tmp.80): Reg(R15d), Pseudo(tmp.81): Reg(R14d), Pseudo(tmp.82): Reg(AX), Pseudo(tmp.83): Reg(R13d), Pseudo(tmp.84): Reg(R12d), Pseudo(tmp.85): Reg(BX), Pseudo(tmp.86): Reg(AX), Pseudo(tmp.100): Reg(AX), Pseudo(tmp.101): Reg(AX), Pseudo(tmp.104): Reg(AX)}
------------------REPLACED INTEGER INTRUCTIONS.--------------------
AssType: Longword Mov(Pseudo(glob_three), Pseudo(tmp.47))              AssType: Longword Mov(Pseudo(glob_three), Pseudo(tmp.47))
AssType: Longword Binary(Add, Imm(3), Pseudo(tmp.47))                  AssType: Longword Binary(Add, Imm(3), Pseudo(tmp.47))
AssType: Longword Mov(Pseudo(glob_three), Reg(DI))                     AssType: Longword Mov(Pseudo(glob_three), Pseudo(tmp.48))
AssType: Longword Binary(Sub, Imm(2), Reg(DI))                         AssType: Longword Binary(Sub, Imm(2), Pseudo(tmp.48))
AssType: Longword Mov(Reg(DI), Reg(SI))                                AssType: Longword Mov(Pseudo(tmp.48), Pseudo(tmp.49))
AssType: Longword Binary(Add, Reg(DI), Reg(SI))                        AssType: Longword Binary(Add, Pseudo(tmp.48), Pseudo(tmp.49))
AssType: Longword Mov(Imm(2), Reg(DX))                                 AssType: Longword Mov(Imm(2), Pseudo(tmp.50))
AssType: Longword Binary(Add, Reg(DI), Reg(DX))                        AssType: Longword Binary(Add, Pseudo(tmp.48), Pseudo(tmp.50))
AssType: Longword Mov(Reg(SI), Reg(CX))                                AssType: Longword Mov(Pseudo(tmp.49), Pseudo(tmp.51))
AssType: Longword Binary(Mult, Reg(SI), Reg(CX))                       AssType: Longword Binary(Mult, Pseudo(tmp.49), Pseudo(tmp.51))
AssType: Longword Mov(Imm(6), Reg(R8d))                                AssType: Longword Mov(Imm(6), Pseudo(tmp.52))
AssType: Longword Binary(Sub, Reg(DI), Reg(R8d))                       AssType: Longword Binary(Sub, Pseudo(tmp.48), Pseudo(tmp.52))
AssType: Longword Mov(Reg(SI), Reg(R9d))                               AssType: Longword Mov(Pseudo(tmp.49), Pseudo(tmp.53))
AssType: Longword Binary(Mult, Reg(DX), Reg(R9d))                      AssType: Longword Binary(Mult, Pseudo(tmp.50), Pseudo(tmp.53))
AssType: Longword Mov(Reg(DI), Reg(R15d))                              AssType: Longword Mov(Pseudo(tmp.48), Pseudo(tmp.54))
AssType: Longword Binary(Add, Imm(6), Reg(R15d))                       AssType: Longword Binary(Add, Imm(6), Pseudo(tmp.54))
AssType: Longword Mov(Reg(SI), Reg(R14d))                              AssType: Longword Mov(Pseudo(tmp.49), Pseudo(tmp.55))
AssType: Longword Binary(Mult, Imm(4), Reg(R14d))                      AssType: Longword Binary(Mult, Imm(4), Pseudo(tmp.55))
AssType: Longword Mov(Reg(DX), Reg(R13d))                              AssType: Longword Mov(Pseudo(tmp.50), Pseudo(tmp.56))
AssType: Longword Binary(Mult, Reg(DX), Reg(R13d))                     AssType: Longword Binary(Mult, Pseudo(tmp.50), Pseudo(tmp.56))
AssType: Longword Mov(Reg(CX), Reg(R12d))                              AssType: Longword Mov(Pseudo(tmp.51), Pseudo(tmp.57))
AssType: Longword Binary(Add, Reg(R9d), Reg(R12d))                     AssType: Longword Binary(Add, Pseudo(tmp.53), Pseudo(tmp.57))
AssType: Longword Mov(Imm(16), Reg(BX))                                AssType: Longword Mov(Imm(16), Pseudo(tmp.58))
AssType: Longword Binary(Sub, Reg(R8d), Reg(BX))                       AssType: Longword Binary(Sub, Pseudo(tmp.52), Pseudo(tmp.58))
AssType: Longword Mov(Reg(R9d), Reg(AX))                               AssType: Longword Mov(Pseudo(tmp.53), Pseudo(tmp.59))
AssType: Longword Binary(Add, Reg(R9d), Reg(AX))                       AssType: Longword Binary(Add, Pseudo(tmp.53), Pseudo(tmp.59))
AssType: Quadword Binary(Sub, Imm(8), Reg(SP))                         AssType: Quadword Binary(Sub, Imm(8), Reg(SP))
Push(Imm(1))                                                           AssType: Longword Mov(Pseudo(tmp.48), Reg(DI))
Push(Reg(AX))                                                          AssType: Longword Mov(Pseudo(tmp.49), Reg(SI))
AssType: Longword Mov(Reg(BX), Reg(AX))                                AssType: Longword Mov(Pseudo(tmp.50), Reg(DX))
Push(Reg(AX))                                                          AssType: Longword Mov(Pseudo(tmp.51), Reg(CX))
AssType: Longword Mov(Reg(R12d), Reg(AX))                              AssType: Longword Mov(Pseudo(tmp.52), Reg(R8d))
Push(Reg(AX))                                                          AssType: Longword Mov(Pseudo(tmp.53), Reg(R9d))
AssType: Longword Mov(Reg(R13d), Reg(AX))                              Push(Imm(1))
Push(Reg(AX))                                                          AssType: Longword Mov(Pseudo(tmp.59), Reg(AX))
AssType: Longword Mov(Reg(R14d), Reg(AX))                              Push(Reg(AX))
Push(Reg(AX))                                                          AssType: Longword Mov(Pseudo(tmp.58), Reg(AX))
AssType: Longword Mov(Reg(R15d), Reg(AX))                              Push(Reg(AX))
Push(Reg(AX))                                                          AssType: Longword Mov(Pseudo(tmp.57), Reg(AX))
Call(check_12_ints)                                                    Push(Reg(AX))
AssType: Quadword Binary(Add, Imm(64), Reg(SP))                        AssType: Longword Mov(Pseudo(tmp.56), Reg(AX))
AssType: Longword Mov(Imm(10), Reg(DI))                                Push(Reg(AX))
AssType: Longword Binary(Add, Pseudo(glob_three), Reg(DI))             AssType: Longword Mov(Pseudo(tmp.55), Reg(AX))
AssType: Longword Mov(Reg(DI), Reg(SI))                                Push(Reg(AX))
AssType: Longword Binary(Add, Imm(1), Reg(SI))                         AssType: Longword Mov(Pseudo(tmp.54), Reg(AX))
AssType: Longword Mov(Imm(28), Reg(DX))                                Push(Reg(AX))
AssType: Longword Binary(Sub, Reg(DI), Reg(DX))                        Call(check_12_ints)
AssType: Longword Mov(Reg(SI), Reg(CX))                                AssType: Quadword Binary(Add, Imm(64), Reg(SP))
AssType: Longword Binary(Add, Imm(2), Reg(CX))                         AssType: Longword Mov(Reg(AX), Pseudo(tmp.73))
AssType: Longword Mov(Imm(4), Reg(R8d))                                AssType: Longword Mov(Imm(10), Pseudo(tmp.74))
AssType: Longword Binary(Add, Reg(DI), Reg(R8d))                       AssType: Longword Binary(Add, Pseudo(glob_three), Pseudo(tmp.74))
AssType: Longword Mov(Imm(32), Reg(R9d))                               AssType: Longword Mov(Pseudo(tmp.74), Pseudo(tmp.75))
AssType: Longword Binary(Sub, Reg(SI), Reg(R9d))                       AssType: Longword Binary(Add, Imm(1), Pseudo(tmp.75))
AssType: Longword Mov(Imm(35), Reg(R15d))                              AssType: Longword Mov(Imm(28), Pseudo(tmp.76))
AssType: Longword Binary(Sub, Reg(CX), Reg(R15d))                      AssType: Longword Binary(Sub, Pseudo(tmp.74), Pseudo(tmp.76))
AssType: Longword Mov(Reg(DX), Reg(R14d))                              AssType: Longword Mov(Pseudo(tmp.75), Pseudo(tmp.77))
AssType: Longword Binary(Add, Imm(5), Reg(R14d))                       AssType: Longword Binary(Add, Imm(2), Pseudo(tmp.77))
AssType: Longword Mov(Reg(DI), Reg(AX))                                AssType: Longword Mov(Imm(4), Pseudo(tmp.78))
AssType: Longword Binary(Mult, Imm(2), Reg(AX))                        AssType: Longword Binary(Add, Pseudo(tmp.74), Pseudo(tmp.78))
AssType: Longword Mov(Reg(AX), Reg(R13d))                              AssType: Longword Mov(Imm(32), Pseudo(tmp.79))
AssType: Longword Binary(Sub, Imm(5), Reg(R13d))                       AssType: Longword Binary(Sub, Pseudo(tmp.75), Pseudo(tmp.79))
AssType: Longword Mov(Reg(DX), Reg(R12d))                              AssType: Longword Mov(Imm(35), Pseudo(tmp.80))
AssType: Longword Binary(Add, Imm(7), Reg(R12d))                       AssType: Longword Binary(Sub, Pseudo(tmp.77), Pseudo(tmp.80))
AssType: Longword Mov(Imm(6), Reg(BX))                                 AssType: Longword Mov(Pseudo(tmp.76), Pseudo(tmp.81))
AssType: Longword Binary(Add, Reg(R8d), Reg(BX))                       AssType: Longword Binary(Add, Imm(5), Pseudo(tmp.81))
AssType: Longword Mov(Reg(DI), Reg(AX))                                AssType: Longword Mov(Pseudo(tmp.74), Pseudo(tmp.82))
AssType: Longword Binary(Add, Imm(11), Reg(AX))                        AssType: Longword Binary(Mult, Imm(2), Pseudo(tmp.82))
AssType: Quadword Binary(Sub, Imm(8), Reg(SP))                         AssType: Longword Mov(Pseudo(tmp.82), Pseudo(tmp.83))
Push(Imm(13))                                                          AssType: Longword Binary(Sub, Imm(5), Pseudo(tmp.83))
Push(Reg(AX))                                                          AssType: Longword Mov(Pseudo(tmp.76), Pseudo(tmp.84))
AssType: Longword Mov(Reg(BX), Reg(AX))                                AssType: Longword Binary(Add, Imm(7), Pseudo(tmp.84))
Push(Reg(AX))                                                          AssType: Longword Mov(Imm(6), Pseudo(tmp.85))
AssType: Longword Mov(Reg(R12d), Reg(AX))                              AssType: Longword Binary(Add, Pseudo(tmp.78), Pseudo(tmp.85))
Push(Reg(AX))                                                          AssType: Longword Mov(Pseudo(tmp.74), Pseudo(tmp.86))
AssType: Longword Mov(Reg(R13d), Reg(AX))                              AssType: Longword Binary(Add, Imm(11), Pseudo(tmp.86))
Push(Reg(AX))                                                          AssType: Quadword Binary(Sub, Imm(8), Reg(SP))
AssType: Longword Mov(Reg(R14d), Reg(AX))                              AssType: Longword Mov(Pseudo(tmp.74), Reg(DI))
Push(Reg(AX))                                                          AssType: Longword Mov(Pseudo(tmp.75), Reg(SI))
AssType: Longword Mov(Reg(R15d), Reg(AX))                              AssType: Longword Mov(Pseudo(tmp.76), Reg(DX))
Push(Reg(AX))                                                          AssType: Longword Mov(Pseudo(tmp.77), Reg(CX))
Call(check_12_ints)                                                    AssType: Longword Mov(Pseudo(tmp.78), Reg(R8d))
AssType: Quadword Binary(Add, Imm(64), Reg(SP))                        AssType: Longword Mov(Pseudo(tmp.79), Reg(R9d))
AssType: Longword Cmp(Imm(6), Pseudo(tmp.47))                          Push(Imm(13))
AssType: Longword Mov(Imm(0), Reg(AX))                                 AssType: Longword Mov(Pseudo(tmp.86), Reg(AX))
SetCC(ConcCodeType.NE, Reg(AX))                                        Push(Reg(AX))
AssType: Longword Cmp(Imm(0), Reg(AX))                                 AssType: Longword Mov(Pseudo(tmp.85), Reg(AX))
JmpCC(ConcCodeType.E, tmp.103)                                         Push(Reg(AX))
AssType: Longword Mov(Imm(1), Reg(AX))                                 AssType: Longword Mov(Pseudo(tmp.84), Reg(AX))
AssType: Longword Unary(Neg, Reg(AX))                                  Push(Reg(AX))
ret                                                                    AssType: Longword Mov(Pseudo(tmp.83), Reg(AX))
Label(tmp.103)                                                         Push(Reg(AX))
AssType: Longword Mov(Imm(0), Reg(AX))                                 AssType: Longword Mov(Pseudo(tmp.81), Reg(AX))
ret                                                                    Push(Reg(AX))
-----------Building DOUBLE interference graph.------------------
AssType: Longword Mov(Pseudo(glob_three), Pseudo(tmp.47))
AssType: Longword Mov(Imm(1), Reg(AX))
Label(tmp.103)
-------------LABELS-----------------
tmp.103 2: [Label(tmp.103), AssType: Longword Mov(Imm(0), Reg(AX)), ret] Pred: set() Suc: set() iMap: [(Label(tmp.103), set()), (AssType: Longword Mov(Imm(0), Reg(AX)), set()), (ret, set())] ReachingCopies: set()
-------------CONNECTED BLOCKS-----------------
ENTRY Entry: ENTRY {0}
0 0: [AssType: Longword Mov(Pseudo(glob_three), Pseudo(tmp.47)), AssType: Longword Binary(Add, Imm(3), Pseudo(tmp.47)), AssType: Longword Mov(Pseudo(glob_three), Reg(DI)), AssType: Longword Binary(Sub, Imm(2), Reg(DI)), AssType: Longword Mov(Reg(DI), Reg(SI)), AssType: Longword Binary(Add, Reg(DI), Reg(SI)), AssType: Longword Mov(Imm(2), Reg(DX)), AssType: Longword Binary(Add, Reg(DI), Reg(DX)), AssType: Longword Mov(Reg(SI), Reg(CX)), AssType: Longword Binary(Mult, Reg(SI), Reg(CX)), AssType: Longword Mov(Imm(6), Reg(R8d)), AssType: Longword Binary(Sub, Reg(DI), Reg(R8d)), AssType: Longword Mov(Reg(SI), Reg(R9d)), AssType: Longword Binary(Mult, Reg(DX), Reg(R9d)), AssType: Longword Mov(Reg(DI), Reg(R15d)), AssType: Longword Binary(Add, Imm(6), Reg(R15d)), AssType: Longword Mov(Reg(SI), Reg(R14d)), AssType: Longword Binary(Mult, Imm(4), Reg(R14d)), AssType: Longword Mov(Reg(DX), Reg(R13d)), AssType: Longword Binary(Mult, Reg(DX), Reg(R13d)), AssType: Longword Mov(Reg(CX), Reg(R12d)), AssType: Longword Binary(Add, Reg(R9d), Reg(R12d)), AssType: Longword Mov(Imm(16), Reg(BX)), AssType: Longword Binary(Sub, Reg(R8d), Reg(BX)), AssType: Longword Mov(Reg(R9d), Reg(AX)), AssType: Longword Binary(Add, Reg(R9d), Reg(AX)), AssType: Quadword Binary(Sub, Imm(8), Reg(SP)), Push(Imm(1)), Push(Reg(AX)), AssType: Longword Mov(Reg(BX), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Reg(R12d), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Reg(R13d), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Reg(R14d), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Reg(R15d), Reg(AX)), Push(Reg(AX)), Call(check_12_ints), AssType: Quadword Binary(Add, Imm(64), Reg(SP)), AssType: Longword Mov(Imm(10), Reg(DI)), AssType: Longword Binary(Add, Pseudo(glob_three), Reg(DI)), AssType: Longword Mov(Reg(DI), Reg(SI)), AssType: Longword Binary(Add, Imm(1), Reg(SI)), AssType: Longword Mov(Imm(28), Reg(DX)), AssType: Longword Binary(Sub, Reg(DI), Reg(DX)), AssType: Longword Mov(Reg(SI), Reg(CX)), AssType: Longword Binary(Add, Imm(2), Reg(CX)), AssType: Longword Mov(Imm(4), Reg(R8d)), AssType: Longword Binary(Add, Reg(DI), Reg(R8d)), AssType: Longword Mov(Imm(32), Reg(R9d)), AssType: Longword Binary(Sub, Reg(SI), Reg(R9d)), AssType: Longword Mov(Imm(35), Reg(R15d)), AssType: Longword Binary(Sub, Reg(CX), Reg(R15d)), AssType: Longword Mov(Reg(DX), Reg(R14d)), AssType: Longword Binary(Add, Imm(5), Reg(R14d)), AssType: Longword Mov(Reg(DI), Reg(AX)), AssType: Longword Binary(Mult, Imm(2), Reg(AX)), AssType: Longword Mov(Reg(AX), Reg(R13d)), AssType: Longword Binary(Sub, Imm(5), Reg(R13d)), AssType: Longword Mov(Reg(DX), Reg(R12d)), AssType: Longword Binary(Add, Imm(7), Reg(R12d)), AssType: Longword Mov(Imm(6), Reg(BX)), AssType: Longword Binary(Add, Reg(R8d), Reg(BX)), AssType: Longword Mov(Reg(DI), Reg(AX)), AssType: Longword Binary(Add, Imm(11), Reg(AX)), AssType: Quadword Binary(Sub, Imm(8), Reg(SP)), Push(Imm(13)), Push(Reg(AX)), AssType: Longword Mov(Reg(BX), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Reg(R12d), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Reg(R13d), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Reg(R14d), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Reg(R15d), Reg(AX)), Push(Reg(AX)), Call(check_12_ints), AssType: Quadword Binary(Add, Imm(64), Reg(SP)), AssType: Longword Cmp(Imm(6), Pseudo(tmp.47)), AssType: Longword Mov(Imm(0), Reg(AX)), SetCC(ConcCodeType.NE, Reg(AX)), AssType: Longword Cmp(Imm(0), Reg(AX)), JmpCC(ConcCodeType.E, tmp.103)] Pred: {ENTRY} Suc: {1, 2} iMap: [(AssType: Longword Mov(Pseudo(glob_three), Pseudo(tmp.47)), set()), (AssType: Longword Binary(Add, Imm(3), Pseudo(tmp.47)), set()), (AssType: Longword Mov(Pseudo(glob_three), Reg(DI)), set()), (AssType: Longword Binary(Sub, Imm(2), Reg(DI)), set()), (AssType: Longword Mov(Reg(DI), Reg(SI)), set()), (AssType: Longword Binary(Add, Reg(DI), Reg(SI)), set()), (AssType: Longword Mov(Imm(2), Reg(DX)), set()), (AssType: Longword Binary(Add, Reg(DI), Reg(DX)), set()), (AssType: Longword Mov(Reg(SI), Reg(CX)), set()), (AssType: Longword Binary(Mult, Reg(SI), Reg(CX)), set()), (AssType: Longword Mov(Imm(6), Reg(R8d)), set()), (AssType: Longword Binary(Sub, Reg(DI), Reg(R8d)), set()), (AssType: Longword Mov(Reg(SI), Reg(R9d)), set()), (AssType: Longword Binary(Mult, Reg(DX), Reg(R9d)), set()), (AssType: Longword Mov(Reg(DI), Reg(R15d)), set()), (AssType: Longword Binary(Add, Imm(6), Reg(R15d)), set()), (AssType: Longword Mov(Reg(SI), Reg(R14d)), set()), (AssType: Longword Binary(Mult, Imm(4), Reg(R14d)), set()), (AssType: Longword Mov(Reg(DX), Reg(R13d)), set()), (AssType: Longword Binary(Mult, Reg(DX), Reg(R13d)), set()), (AssType: Longword Mov(Reg(CX), Reg(R12d)), set()), (AssType: Longword Binary(Add, Reg(R9d), Reg(R12d)), set()), (AssType: Longword Mov(Imm(16), Reg(BX)), set()), (AssType: Longword Binary(Sub, Reg(R8d), Reg(BX)), set()), (AssType: Longword Mov(Reg(R9d), Reg(AX)), set()), (AssType: Longword Binary(Add, Reg(R9d), Reg(AX)), set()), (AssType: Quadword Binary(Sub, Imm(8), Reg(SP)), set()), (Push(Imm(1)), set()), (Push(Reg(AX)), set()), (AssType: Longword Mov(Reg(BX), Reg(AX)), set()), (Push(Reg(AX)), set()), (AssType: Longword Mov(Reg(R12d), Reg(AX)), set()), (Push(Reg(AX)), set()), (AssType: Longword Mov(Reg(R13d), Reg(AX)), set()), (Push(Reg(AX)), set()), (AssType: Longword Mov(Reg(R14d), Reg(AX)), set()), (Push(Reg(AX)), set()), (AssType: Longword Mov(Reg(R15d), Reg(AX)), set()), (Push(Reg(AX)), set()), (Call(check_12_ints), set()), (AssType: Quadword Binary(Add, Imm(64), Reg(SP)), set()), (AssType: Longword Mov(Imm(10), Reg(DI)), set()), (AssType: Longword Binary(Add, Pseudo(glob_three), Reg(DI)), set()), (AssType: Longword Mov(Reg(DI), Reg(SI)), set()), (AssType: Longword Binary(Add, Imm(1), Reg(SI)), set()), (AssType: Longword Mov(Imm(28), Reg(DX)), set()), (AssType: Longword Binary(Sub, Reg(DI), Reg(DX)), set()), (AssType: Longword Mov(Reg(SI), Reg(CX)), set()), (AssType: Longword Binary(Add, Imm(2), Reg(CX)), set()), (AssType: Longword Mov(Imm(4), Reg(R8d)), set()), (AssType: Longword Binary(Add, Reg(DI), Reg(R8d)), set()), (AssType: Longword Mov(Imm(32), Reg(R9d)), set()), (AssType: Longword Binary(Sub, Reg(SI), Reg(R9d)), set()), (AssType: Longword Mov(Imm(35), Reg(R15d)), set()), (AssType: Longword Binary(Sub, Reg(CX), Reg(R15d)), set()), (AssType: Longword Mov(Reg(DX), Reg(R14d)), set()), (AssType: Longword Binary(Add, Imm(5), Reg(R14d)), set()), (AssType: Longword Mov(Reg(DI), Reg(AX)), set()), (AssType: Longword Binary(Mult, Imm(2), Reg(AX)), set()), (AssType: Longword Mov(Reg(AX), Reg(R13d)), set()), (AssType: Longword Binary(Sub, Imm(5), Reg(R13d)), set()), (AssType: Longword Mov(Reg(DX), Reg(R12d)), set()), (AssType: Longword Binary(Add, Imm(7), Reg(R12d)), set()), (AssType: Longword Mov(Imm(6), Reg(BX)), set()), (AssType: Longword Binary(Add, Reg(R8d), Reg(BX)), set()), (AssType: Longword Mov(Reg(DI), Reg(AX)), set()), (AssType: Longword Binary(Add, Imm(11), Reg(AX)), set()), (AssType: Quadword Binary(Sub, Imm(8), Reg(SP)), set()), (Push(Imm(13)), set()), (Push(Reg(AX)), set()), (AssType: Longword Mov(Reg(BX), Reg(AX)), set()), (Push(Reg(AX)), set()), (AssType: Longword Mov(Reg(R12d), Reg(AX)), set()), (Push(Reg(AX)), set()), (AssType: Longword Mov(Reg(R13d), Reg(AX)), set()), (Push(Reg(AX)), set()), (AssType: Longword Mov(Reg(R14d), Reg(AX)), set()), (Push(Reg(AX)), set()), (AssType: Longword Mov(Reg(R15d), Reg(AX)), set()), (Push(Reg(AX)), set()), (Call(check_12_ints), set()), (AssType: Quadword Binary(Add, Imm(64), Reg(SP)), set()), (AssType: Longword Cmp(Imm(6), Pseudo(tmp.47)), set()), (AssType: Longword Mov(Imm(0), Reg(AX)), set()), (SetCC(ConcCodeType.NE, Reg(AX)), set()), (AssType: Longword Cmp(Imm(0), Reg(AX)), set()), (JmpCC(ConcCodeType.E, tmp.103), set())] ReachingCopies: set()
1 1: [AssType: Longword Mov(Imm(1), Reg(AX)), AssType: Longword Unary(Neg, Reg(AX)), ret] Pred: {0} Suc: {EXIT} iMap: [(AssType: Longword Mov(Imm(1), Reg(AX)), set()), (AssType: Longword Unary(Neg, Reg(AX)), set()), (ret, set())] ReachingCopies: set()
2 2: [Label(tmp.103), AssType: Longword Mov(Imm(0), Reg(AX)), ret] Pred: {0} Suc: {EXIT} iMap: [(Label(tmp.103), set()), (AssType: Longword Mov(Imm(0), Reg(AX)), set()), (ret, set())] ReachingCopies: set()
EXIT Exit: EXIT {1, 2}
--------------LIVE for block 2-------------------
ret {Reg(AX)}
AssType: Longword Mov(Imm(0), Reg(AX)) {Reg(AX)}
Label(tmp.103) set()
OLD ANNOT: set()
NEW ANNOT: set()
--------------LIVE for block 1-------------------
ret {Reg(AX)}
AssType: Longword Unary(Neg, Reg(AX)) {Reg(AX)}
AssType: Longword Mov(Imm(1), Reg(AX)) {Reg(AX)}
OLD ANNOT: set()
NEW ANNOT: set()
--------------LIVE for block 0-------------------
JmpCC(ConcCodeType.E, tmp.103) set()
AssType: Longword Cmp(Imm(0), Reg(AX)) set()
SetCC(ConcCodeType.NE, Reg(AX)) {Reg(AX)}
AssType: Longword Mov(Imm(0), Reg(AX)) set()
AssType: Longword Cmp(Imm(6), Pseudo(tmp.47)) set()
AssType: Quadword Binary(Add, Imm(64), Reg(SP)) {Pseudo(tmp.47)}
Call(check_12_ints) {Reg(SP), Pseudo(tmp.47)}
Push(Reg(AX)) {Reg(DX), Reg(CX), Reg(SP), Reg(DI), Reg(SI), Pseudo(tmp.47), Reg(R8d), Reg(R9d)}
AssType: Longword Mov(Reg(R15d), Reg(AX)) {Reg(DX), Reg(CX), Reg(SP), Reg(DI), Reg(SI), Reg(AX), Pseudo(tmp.47), Reg(R8d), Reg(R9d)}
Push(Reg(AX)) {Reg(DX), Reg(CX), Reg(SP), Reg(R15d), Reg(DI), Reg(SI), Pseudo(tmp.47), Reg(R8d), Reg(R9d)}
AssType: Longword Mov(Reg(R14d), Reg(AX)) {Reg(DX), Reg(CX), Reg(SP), Reg(R15d), Reg(DI), Reg(SI), Reg(AX), Pseudo(tmp.47), Reg(R8d), Reg(R9d)}
Push(Reg(AX)) {Reg(DX), Reg(CX), Reg(SP), Reg(R15d), Reg(DI), Reg(SI), Reg(R14d), Pseudo(tmp.47), Reg(R8d), Reg(R9d)}
AssType: Longword Mov(Reg(R13d), Reg(AX)) {Reg(DX), Reg(CX), Reg(SP), Reg(R15d), Reg(DI), Reg(SI), Reg(R14d), Reg(AX), Pseudo(tmp.47), Reg(R8d), Reg(R9d)}
Push(Reg(AX)) {Reg(DX), Reg(CX), Reg(SP), Reg(R15d), Reg(DI), Reg(SI), Reg(R14d), Pseudo(tmp.47), Reg(R8d), Reg(R13d), Reg(R9d)}
AssType: Longword Mov(Reg(R12d), Reg(AX)) {Reg(DX), Reg(CX), Reg(SP), Reg(R15d), Reg(DI), Reg(SI), Reg(R14d), Reg(AX), Pseudo(tmp.47), Reg(R8d), Reg(R13d), Reg(R9d)}
Push(Reg(AX)) {Reg(DX), Reg(CX), Reg(SP), Reg(R15d), Reg(R9d), Reg(DI), Reg(SI), Reg(R14d), Pseudo(tmp.47), Reg(R8d), Reg(R13d), Reg(R12d)}
AssType: Longword Mov(Reg(BX), Reg(AX)) {Reg(DX), Reg(CX), Reg(SP), Reg(R15d), Reg(R12d), Reg(DI), Reg(SI), Reg(R14d), Reg(AX), Pseudo(tmp.47), Reg(R8d), Reg(R13d), Reg(R9d)}
Push(Reg(AX)) {Reg(DX), Reg(CX), Reg(SP), Reg(R15d), Reg(BX), Reg(DI), Reg(R9d), Reg(SI), Reg(R14d), Pseudo(tmp.47), Reg(R8d), Reg(R13d), Reg(R12d)}
Push(Imm(13)) {Reg(DX), Reg(CX), Reg(SP), Reg(R15d), Reg(R12d), Reg(DI), Reg(BX), Reg(SI), Reg(R14d), Reg(AX), Pseudo(tmp.47), Reg(R8d), Reg(R13d), Reg(R9d)}
AssType: Quadword Binary(Sub, Imm(8), Reg(SP)) {Reg(DX), Reg(CX), Reg(SP), Reg(R15d), Reg(R12d), Reg(DI), Reg(BX), Reg(SI), Reg(R14d), Reg(AX), Pseudo(tmp.47), Reg(R8d), Reg(R13d), Reg(R9d)}
AssType: Longword Binary(Add, Imm(11), Reg(AX)) {Reg(DX), Reg(CX), Reg(SP), Reg(R15d), Reg(R12d), Reg(DI), Reg(BX), Reg(SI), Reg(R14d), Reg(AX), Pseudo(tmp.47), Reg(R8d), Reg(R13d), Reg(R9d)}
AssType: Longword Mov(Reg(DI), Reg(AX)) {Reg(DX), Reg(CX), Reg(SP), Reg(R15d), Reg(R12d), Reg(DI), Reg(BX), Reg(SI), Reg(R14d), Reg(AX), Pseudo(tmp.47), Reg(R8d), Reg(R13d), Reg(R9d)}
AssType: Longword Binary(Add, Reg(R8d), Reg(BX)) {Reg(DX), Reg(CX), Reg(SP), Reg(R15d), Reg(BX), Reg(DI), Reg(R9d), Reg(SI), Reg(R14d), Pseudo(tmp.47), Reg(R8d), Reg(R13d), Reg(R12d)}
AssType: Longword Mov(Imm(6), Reg(BX)) {Reg(DX), Reg(CX), Reg(SP), Reg(R15d), Reg(BX), Reg(DI), Reg(R9d), Reg(SI), Reg(R14d), Pseudo(tmp.47), Reg(R8d), Reg(R13d), Reg(R12d)}
AssType: Longword Binary(Add, Imm(7), Reg(R12d)) {Reg(DX), Reg(CX), Reg(SP), Reg(R15d), Reg(R9d), Reg(DI), Reg(SI), Reg(R14d), Pseudo(tmp.47), Reg(R8d), Reg(R13d), Reg(R12d)}
AssType: Longword Mov(Reg(DX), Reg(R12d)) {Reg(DX), Reg(CX), Reg(SP), Reg(R15d), Reg(R9d), Reg(DI), Reg(SI), Reg(R14d), Pseudo(tmp.47), Reg(R8d), Reg(R13d), Reg(R12d)}
AssType: Longword Binary(Sub, Imm(5), Reg(R13d)) {Reg(DX), Reg(CX), Reg(SP), Reg(R15d), Reg(DI), Reg(SI), Reg(R14d), Pseudo(tmp.47), Reg(R8d), Reg(R13d), Reg(R9d)}
AssType: Longword Mov(Reg(AX), Reg(R13d)) {Reg(DX), Reg(CX), Reg(SP), Reg(R15d), Reg(DI), Reg(SI), Reg(R14d), Pseudo(tmp.47), Reg(R8d), Reg(R13d), Reg(R9d)}
AssType: Longword Binary(Mult, Imm(2), Reg(AX)) {Reg(DX), Reg(CX), Reg(SP), Reg(R15d), Reg(DI), Reg(SI), Reg(R14d), Reg(AX), Pseudo(tmp.47), Reg(R8d), Reg(R9d)}
AssType: Longword Mov(Reg(DI), Reg(AX)) {Reg(DX), Reg(CX), Reg(SP), Reg(R15d), Reg(DI), Reg(SI), Reg(R14d), Reg(AX), Pseudo(tmp.47), Reg(R8d), Reg(R9d)}
AssType: Longword Binary(Add, Imm(5), Reg(R14d)) {Reg(DX), Reg(CX), Reg(SP), Reg(R15d), Reg(DI), Reg(SI), Reg(R14d), Pseudo(tmp.47), Reg(R8d), Reg(R9d)}
AssType: Longword Mov(Reg(DX), Reg(R14d)) {Reg(DX), Reg(CX), Reg(SP), Reg(R15d), Reg(DI), Reg(SI), Reg(R14d), Pseudo(tmp.47), Reg(R8d), Reg(R9d)}
AssType: Longword Binary(Sub, Reg(CX), Reg(R15d)) {Reg(DX), Reg(CX), Reg(SP), Reg(R15d), Reg(DI), Reg(SI), Pseudo(tmp.47), Reg(R8d), Reg(R9d)}
AssType: Longword Mov(Imm(35), Reg(R15d)) {Reg(DX), Reg(CX), Reg(SP), Reg(R15d), Reg(DI), Reg(SI), Pseudo(tmp.47), Reg(R8d), Reg(R9d)}
AssType: Longword Binary(Sub, Reg(SI), Reg(R9d)) {Reg(DX), Reg(CX), Reg(SP), Reg(DI), Reg(SI), Pseudo(tmp.47), Reg(R8d), Reg(R9d)}
AssType: Longword Mov(Imm(32), Reg(R9d)) {Reg(DX), Reg(CX), Reg(SP), Reg(DI), Reg(SI), Pseudo(tmp.47), Reg(R8d), Reg(R9d)}
AssType: Longword Binary(Add, Reg(DI), Reg(R8d)) {Reg(DX), Reg(CX), Reg(SP), Reg(DI), Pseudo(tmp.47), Reg(R8d), Reg(SI)}
AssType: Longword Mov(Imm(4), Reg(R8d)) {Reg(DX), Reg(CX), Reg(SP), Reg(DI), Pseudo(tmp.47), Reg(R8d), Reg(SI)}
AssType: Longword Binary(Add, Imm(2), Reg(CX)) {Reg(DX), Reg(CX), Reg(SP), Reg(DI), Pseudo(tmp.47), Reg(SI)}
AssType: Longword Mov(Reg(SI), Reg(CX)) {Reg(DX), Reg(CX), Reg(SP), Reg(DI), Pseudo(tmp.47), Reg(SI)}
AssType: Longword Binary(Sub, Reg(DI), Reg(DX)) {Reg(DX), Reg(SP), Reg(DI), Pseudo(tmp.47), Reg(SI)}
AssType: Longword Mov(Imm(28), Reg(DX)) {Reg(DX), Reg(SP), Reg(DI), Pseudo(tmp.47), Reg(SI)}
AssType: Longword Binary(Add, Imm(1), Reg(SI)) {Reg(SI), Reg(SP), Reg(DI), Pseudo(tmp.47)}
AssType: Longword Mov(Reg(DI), Reg(SI)) {Reg(SI), Reg(SP), Reg(DI), Pseudo(tmp.47)}
AssType: Longword Binary(Add, Pseudo(glob_three), Reg(DI)) {Reg(SP), Reg(DI), Pseudo(tmp.47)}
AssType: Longword Mov(Imm(10), Reg(DI)) {Pseudo(glob_three), Reg(SP), Reg(DI), Pseudo(tmp.47)}
AssType: Quadword Binary(Add, Imm(64), Reg(SP)) {Reg(SP), Pseudo(glob_three), Pseudo(tmp.47)}
Call(check_12_ints) {Reg(SP), Pseudo(glob_three), Pseudo(tmp.47)}
Push(Reg(AX)) {Reg(CX), Reg(DX), Reg(SP), Reg(DI), Reg(SI), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d), Reg(R9d)}
AssType: Longword Mov(Reg(R15d), Reg(AX)) {Reg(CX), Reg(DX), Reg(SP), Reg(DI), Reg(SI), Reg(AX), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d), Reg(R9d)}
Push(Reg(AX)) {Reg(CX), Reg(DX), Reg(SP), Reg(R15d), Reg(DI), Reg(SI), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d), Reg(R9d)}
AssType: Longword Mov(Reg(R14d), Reg(AX)) {Reg(CX), Reg(DX), Reg(SP), Reg(R15d), Reg(DI), Reg(SI), Reg(AX), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d), Reg(R9d)}
Push(Reg(AX)) {Reg(CX), Reg(DX), Reg(SP), Reg(R15d), Reg(DI), Reg(SI), Reg(R14d), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d), Reg(R9d)}
AssType: Longword Mov(Reg(R13d), Reg(AX)) {Reg(CX), Reg(DX), Reg(SP), Reg(R15d), Reg(DI), Reg(SI), Reg(R14d), Reg(AX), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d), Reg(R9d)}
Push(Reg(AX)) {Reg(CX), Reg(DX), Reg(SP), Reg(R15d), Reg(DI), Reg(SI), Reg(R14d), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d), Reg(R13d), Reg(R9d)}
AssType: Longword Mov(Reg(R12d), Reg(AX)) {Reg(CX), Reg(DX), Reg(SP), Reg(R15d), Reg(DI), Reg(SI), Reg(R14d), Reg(AX), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d), Reg(R13d), Reg(R9d)}
Push(Reg(AX)) {Reg(CX), Reg(DX), Reg(SP), Reg(R15d), Reg(R12d), Reg(DI), Reg(SI), Reg(R14d), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d), Reg(R13d), Reg(R9d)}
AssType: Longword Mov(Reg(BX), Reg(AX)) {Reg(CX), Reg(DX), Reg(SP), Reg(R15d), Reg(R12d), Reg(DI), Reg(SI), Reg(R14d), Reg(AX), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d), Reg(R13d), Reg(R9d)}
Push(Reg(AX)) {Reg(BX), Reg(CX), Reg(DX), Reg(SP), Reg(R15d), Reg(DI), Reg(R12d), Reg(SI), Reg(R14d), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d), Reg(R13d), Reg(R9d)}
Push(Imm(1)) {Reg(BX), Reg(CX), Reg(DX), Reg(SP), Reg(R15d), Reg(DI), Reg(R12d), Reg(SI), Reg(R14d), Reg(AX), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d), Reg(R13d), Reg(R9d)}
AssType: Quadword Binary(Sub, Imm(8), Reg(SP)) {Reg(BX), Reg(CX), Reg(DX), Reg(SP), Reg(R15d), Reg(DI), Reg(R12d), Reg(SI), Reg(R14d), Reg(AX), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d), Reg(R13d), Reg(R9d)}
AssType: Longword Binary(Add, Reg(R9d), Reg(AX)) {Reg(BX), Reg(CX), Reg(DX), Reg(SP), Reg(R15d), Reg(DI), Reg(R12d), Reg(SI), Reg(R14d), Reg(AX), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d), Reg(R13d), Reg(R9d)}
AssType: Longword Mov(Reg(R9d), Reg(AX)) {Reg(BX), Reg(CX), Reg(DX), Reg(SP), Reg(R15d), Reg(DI), Reg(R12d), Reg(SI), Reg(R14d), Reg(AX), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d), Reg(R13d), Reg(R9d)}
AssType: Longword Binary(Sub, Reg(R8d), Reg(BX)) {Reg(BX), Reg(CX), Reg(DX), Reg(SP), Reg(R15d), Reg(DI), Reg(R12d), Reg(SI), Reg(R14d), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d), Reg(R13d), Reg(R9d)}
AssType: Longword Mov(Imm(16), Reg(BX)) {Reg(BX), Reg(CX), Reg(DX), Reg(SP), Reg(R15d), Reg(DI), Reg(R12d), Reg(SI), Reg(R14d), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d), Reg(R13d), Reg(R9d)}
AssType: Longword Binary(Add, Reg(R9d), Reg(R12d)) {Reg(CX), Reg(DX), Reg(SP), Reg(R15d), Reg(R12d), Reg(DI), Reg(SI), Reg(R14d), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d), Reg(R13d), Reg(R9d)}
AssType: Longword Mov(Reg(CX), Reg(R12d)) {Reg(CX), Reg(DX), Reg(SP), Reg(R15d), Reg(R12d), Reg(DI), Reg(SI), Reg(R14d), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d), Reg(R13d), Reg(R9d)}
AssType: Longword Binary(Mult, Reg(DX), Reg(R13d)) {Reg(CX), Reg(DX), Reg(SP), Reg(R15d), Reg(DI), Reg(SI), Reg(R14d), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d), Reg(R13d), Reg(R9d)}
AssType: Longword Mov(Reg(DX), Reg(R13d)) {Reg(CX), Reg(DX), Reg(SP), Reg(R15d), Reg(DI), Reg(SI), Reg(R14d), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d), Reg(R13d), Reg(R9d)}
AssType: Longword Binary(Mult, Imm(4), Reg(R14d)) {Reg(CX), Reg(DX), Reg(SP), Reg(R15d), Reg(DI), Reg(SI), Reg(R14d), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d), Reg(R9d)}
AssType: Longword Mov(Reg(SI), Reg(R14d)) {Reg(CX), Reg(DX), Reg(SP), Reg(R15d), Reg(DI), Reg(SI), Reg(R14d), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d), Reg(R9d)}
AssType: Longword Binary(Add, Imm(6), Reg(R15d)) {Reg(CX), Reg(DX), Reg(SP), Reg(R15d), Reg(DI), Reg(SI), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d), Reg(R9d)}
AssType: Longword Mov(Reg(DI), Reg(R15d)) {Reg(CX), Reg(DX), Reg(SP), Reg(R15d), Reg(DI), Reg(SI), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d), Reg(R9d)}
AssType: Longword Binary(Mult, Reg(DX), Reg(R9d)) {Reg(CX), Reg(DX), Reg(SP), Reg(DI), Reg(SI), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d), Reg(R9d)}
AssType: Longword Mov(Reg(SI), Reg(R9d)) {Reg(CX), Reg(DX), Reg(SP), Reg(DI), Reg(SI), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d), Reg(R9d)}
AssType: Longword Binary(Sub, Reg(DI), Reg(R8d)) {Reg(CX), Reg(DX), Reg(SP), Reg(DI), Reg(SI), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d)}
AssType: Longword Mov(Imm(6), Reg(R8d)) {Reg(CX), Reg(DX), Reg(SP), Reg(DI), Reg(SI), Pseudo(glob_three), Pseudo(tmp.47), Reg(R8d)}
AssType: Longword Binary(Mult, Reg(SI), Reg(CX)) {Reg(CX), Reg(DX), Reg(SP), Reg(DI), Pseudo(glob_three), Reg(SI), Pseudo(tmp.47)}
AssType: Longword Mov(Reg(SI), Reg(CX)) {Reg(DX), Reg(CX), Reg(SP), Reg(DI), Pseudo(glob_three), Reg(SI), Pseudo(tmp.47)}
AssType: Longword Binary(Add, Reg(DI), Reg(DX)) {Reg(DX), Reg(SP), Reg(DI), Pseudo(glob_three), Reg(SI), Pseudo(tmp.47)}
AssType: Longword Mov(Imm(2), Reg(DX)) {Reg(DX), Reg(SP), Reg(DI), Pseudo(glob_three), Reg(SI), Pseudo(tmp.47)}
AssType: Longword Binary(Add, Reg(DI), Reg(SI)) {Reg(SP), Reg(DI), Pseudo(glob_three), Reg(SI), Pseudo(tmp.47)}
AssType: Longword Mov(Reg(DI), Reg(SI)) {Reg(SP), Reg(DI), Pseudo(glob_three), Reg(SI), Pseudo(tmp.47)}
AssType: Longword Binary(Sub, Imm(2), Reg(DI)) {Pseudo(glob_three), Reg(SP), Reg(DI), Pseudo(tmp.47)}
AssType: Longword Mov(Pseudo(glob_three), Reg(DI)) {Pseudo(glob_three), Reg(SP), Reg(DI), Pseudo(tmp.47)}
AssType: Longword Binary(Add, Imm(3), Pseudo(tmp.47)) {Reg(SP), Pseudo(glob_three), Pseudo(tmp.47)}
AssType: Longword Mov(Pseudo(glob_three), Pseudo(tmp.47)) {Reg(SP), Pseudo(glob_three), Pseudo(tmp.47)}
OLD ANNOT: set()
NEW ANNOT: {Reg(SP), Pseudo(glob_three)}
-----------Adding edges to interference graph.------------------
Interference Graph:
Reg(XMM0)
    Reg(XMM0) spillCost: 0.0 color: None pruned: False
        Reg(XMM5)
        Reg(XMM6)
        Reg(XMM4)
        Reg(XMM11)
        Reg(XMM10)
        Reg(XMM7)
        Reg(XMM13)
        Reg(XMM9)
        Reg(XMM2)
        Reg(XMM1)
        Reg(XMM12)
        Reg(XMM8)
        Reg(XMM3)
Reg(XMM1)
    Reg(XMM1) spillCost: 0.0 color: None pruned: False
        Reg(XMM5)
        Reg(XMM6)
        Reg(XMM4)
        Reg(XMM11)
        Reg(XMM10)
        Reg(XMM7)
        Reg(XMM13)
        Reg(XMM0)
        Reg(XMM9)
        Reg(XMM2)
        Reg(XMM12)
        Reg(XMM8)
        Reg(XMM3)
Reg(XMM2)
    Reg(XMM2) spillCost: 0.0 color: None pruned: False
        Reg(XMM5)
        Reg(XMM6)
        Reg(XMM4)
        Reg(XMM11)
        Reg(XMM10)
        Reg(XMM7)
        Reg(XMM13)
        Reg(XMM0)
        Reg(XMM9)
        Reg(XMM1)
        Reg(XMM12)
        Reg(XMM8)
        Reg(XMM3)
Reg(XMM3)
    Reg(XMM3) spillCost: 0.0 color: None pruned: False
        Reg(XMM5)
        Reg(XMM6)
        Reg(XMM4)
        Reg(XMM11)
        Reg(XMM10)
        Reg(XMM7)
        Reg(XMM13)
        Reg(XMM0)
        Reg(XMM9)
        Reg(XMM2)
        Reg(XMM1)
        Reg(XMM12)
        Reg(XMM8)
Reg(XMM4)
    Reg(XMM4) spillCost: 0.0 color: None pruned: False
        Reg(XMM5)
        Reg(XMM6)
        Reg(XMM11)
        Reg(XMM10)
        Reg(XMM7)
        Reg(XMM13)
        Reg(XMM0)
        Reg(XMM9)
        Reg(XMM2)
        Reg(XMM1)
        Reg(XMM12)
        Reg(XMM8)
        Reg(XMM3)
Reg(XMM5)
    Reg(XMM5) spillCost: 0.0 color: None pruned: False
        Reg(XMM6)
        Reg(XMM4)
        Reg(XMM11)
        Reg(XMM10)
        Reg(XMM7)
        Reg(XMM13)
        Reg(XMM0)
        Reg(XMM9)
        Reg(XMM2)
        Reg(XMM1)
        Reg(XMM12)
        Reg(XMM8)
        Reg(XMM3)
Reg(XMM6)
    Reg(XMM6) spillCost: 0.0 color: None pruned: False
        Reg(XMM5)
        Reg(XMM4)
        Reg(XMM11)
        Reg(XMM10)
        Reg(XMM7)
        Reg(XMM13)
        Reg(XMM0)
        Reg(XMM9)
        Reg(XMM2)
        Reg(XMM1)
        Reg(XMM12)
        Reg(XMM8)
        Reg(XMM3)
Reg(XMM7)
    Reg(XMM7) spillCost: 0.0 color: None pruned: False
        Reg(XMM5)
        Reg(XMM6)
        Reg(XMM4)
        Reg(XMM11)
        Reg(XMM10)
        Reg(XMM13)
        Reg(XMM0)
        Reg(XMM9)
        Reg(XMM2)
        Reg(XMM1)
        Reg(XMM12)
        Reg(XMM8)
        Reg(XMM3)
Reg(XMM8)
    Reg(XMM8) spillCost: 0.0 color: None pruned: False
        Reg(XMM5)
        Reg(XMM6)
        Reg(XMM4)
        Reg(XMM11)
        Reg(XMM10)
        Reg(XMM7)
        Reg(XMM13)
        Reg(XMM0)
        Reg(XMM9)
        Reg(XMM2)
        Reg(XMM1)
        Reg(XMM12)
        Reg(XMM3)
Reg(XMM9)
    Reg(XMM9) spillCost: 0.0 color: None pruned: False
        Reg(XMM5)
        Reg(XMM6)
        Reg(XMM4)
        Reg(XMM11)
        Reg(XMM10)
        Reg(XMM7)
        Reg(XMM13)
        Reg(XMM0)
        Reg(XMM2)
        Reg(XMM1)
        Reg(XMM12)
        Reg(XMM8)
        Reg(XMM3)
Reg(XMM10)
    Reg(XMM10) spillCost: 0.0 color: None pruned: False
        Reg(XMM5)
        Reg(XMM6)
        Reg(XMM4)
        Reg(XMM11)
        Reg(XMM7)
        Reg(XMM13)
        Reg(XMM0)
        Reg(XMM9)
        Reg(XMM2)
        Reg(XMM1)
        Reg(XMM12)
        Reg(XMM8)
        Reg(XMM3)
Reg(XMM11)
    Reg(XMM11) spillCost: 0.0 color: None pruned: False
        Reg(XMM5)
        Reg(XMM6)
        Reg(XMM4)
        Reg(XMM10)
        Reg(XMM7)
        Reg(XMM13)
        Reg(XMM0)
        Reg(XMM9)
        Reg(XMM2)
        Reg(XMM1)
        Reg(XMM12)
        Reg(XMM8)
        Reg(XMM3)
Reg(XMM12)
    Reg(XMM12) spillCost: 0.0 color: None pruned: False
        Reg(XMM5)
        Reg(XMM6)
        Reg(XMM4)
        Reg(XMM11)
        Reg(XMM10)
        Reg(XMM7)
        Reg(XMM13)
        Reg(XMM0)
        Reg(XMM9)
        Reg(XMM2)
        Reg(XMM1)
        Reg(XMM8)
        Reg(XMM3)
Reg(XMM13)
    Reg(XMM13) spillCost: 0.0 color: None pruned: False
        Reg(XMM5)
        Reg(XMM6)
        Reg(XMM4)
        Reg(XMM11)
        Reg(XMM10)
        Reg(XMM7)
        Reg(XMM0)
        Reg(XMM9)
        Reg(XMM2)
        Reg(XMM1)
        Reg(XMM12)
        Reg(XMM8)
        Reg(XMM3)
----------------ADD SPILL COSTS DOUBLE.-------------------
Reg(XMM0) Reg(XMM0) spillCost: inf color: None pruned: False
Reg(XMM1) Reg(XMM1) spillCost: inf color: None pruned: False
Reg(XMM2) Reg(XMM2) spillCost: inf color: None pruned: False
Reg(XMM3) Reg(XMM3) spillCost: inf color: None pruned: False
Reg(XMM4) Reg(XMM4) spillCost: inf color: None pruned: False
Reg(XMM5) Reg(XMM5) spillCost: inf color: None pruned: False
Reg(XMM6) Reg(XMM6) spillCost: inf color: None pruned: False
Reg(XMM7) Reg(XMM7) spillCost: inf color: None pruned: False
Reg(XMM8) Reg(XMM8) spillCost: inf color: None pruned: False
Reg(XMM9) Reg(XMM9) spillCost: inf color: None pruned: False
Reg(XMM10) Reg(XMM10) spillCost: inf color: None pruned: False
Reg(XMM11) Reg(XMM11) spillCost: inf color: None pruned: False
Reg(XMM12) Reg(XMM12) spillCost: inf color: None pruned: False
Reg(XMM13) Reg(XMM13) spillCost: inf color: None pruned: False
------------------COLOR GRAPH DOUBLE.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce9f680>, <RegisterAllocation.Node object at 0x7f26fce9f170>, <RegisterAllocation.Node object at 0x7f26fce9f320>, <RegisterAllocation.Node object at 0x7f26fce9f1d0>, <RegisterAllocation.Node object at 0x7f26fce9f230>, <RegisterAllocation.Node object at 0x7f26fce9f0b0>, <RegisterAllocation.Node object at 0x7f26fce9eff0>, <RegisterAllocation.Node object at 0x7f26fce9ef00>, <RegisterAllocation.Node object at 0x7f26fce9ed80>, <RegisterAllocation.Node object at 0x7f26fce9ee70>, <RegisterAllocation.Node object at 0x7f26fce9ec60>, <RegisterAllocation.Node object at 0x7f26fce9eba0>, <RegisterAllocation.Node object at 0x7f26fce9e810>, <RegisterAllocation.Node object at 0x7f26fce9eb10>]
------------------COLOR GRAPH DOUBLE.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce9f170>, <RegisterAllocation.Node object at 0x7f26fce9f320>, <RegisterAllocation.Node object at 0x7f26fce9f1d0>, <RegisterAllocation.Node object at 0x7f26fce9f230>, <RegisterAllocation.Node object at 0x7f26fce9f0b0>, <RegisterAllocation.Node object at 0x7f26fce9eff0>, <RegisterAllocation.Node object at 0x7f26fce9ef00>, <RegisterAllocation.Node object at 0x7f26fce9ed80>, <RegisterAllocation.Node object at 0x7f26fce9ee70>, <RegisterAllocation.Node object at 0x7f26fce9ec60>, <RegisterAllocation.Node object at 0x7f26fce9eba0>, <RegisterAllocation.Node object at 0x7f26fce9e810>, <RegisterAllocation.Node object at 0x7f26fce9eb10>]
------------------COLOR GRAPH DOUBLE.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce9f320>, <RegisterAllocation.Node object at 0x7f26fce9f1d0>, <RegisterAllocation.Node object at 0x7f26fce9f230>, <RegisterAllocation.Node object at 0x7f26fce9f0b0>, <RegisterAllocation.Node object at 0x7f26fce9eff0>, <RegisterAllocation.Node object at 0x7f26fce9ef00>, <RegisterAllocation.Node object at 0x7f26fce9ed80>, <RegisterAllocation.Node object at 0x7f26fce9ee70>, <RegisterAllocation.Node object at 0x7f26fce9ec60>, <RegisterAllocation.Node object at 0x7f26fce9eba0>, <RegisterAllocation.Node object at 0x7f26fce9e810>, <RegisterAllocation.Node object at 0x7f26fce9eb10>]
------------------COLOR GRAPH DOUBLE.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce9f1d0>, <RegisterAllocation.Node object at 0x7f26fce9f230>, <RegisterAllocation.Node object at 0x7f26fce9f0b0>, <RegisterAllocation.Node object at 0x7f26fce9eff0>, <RegisterAllocation.Node object at 0x7f26fce9ef00>, <RegisterAllocation.Node object at 0x7f26fce9ed80>, <RegisterAllocation.Node object at 0x7f26fce9ee70>, <RegisterAllocation.Node object at 0x7f26fce9ec60>, <RegisterAllocation.Node object at 0x7f26fce9eba0>, <RegisterAllocation.Node object at 0x7f26fce9e810>, <RegisterAllocation.Node object at 0x7f26fce9eb10>]
------------------COLOR GRAPH DOUBLE.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce9f230>, <RegisterAllocation.Node object at 0x7f26fce9f0b0>, <RegisterAllocation.Node object at 0x7f26fce9eff0>, <RegisterAllocation.Node object at 0x7f26fce9ef00>, <RegisterAllocation.Node object at 0x7f26fce9ed80>, <RegisterAllocation.Node object at 0x7f26fce9ee70>, <RegisterAllocation.Node object at 0x7f26fce9ec60>, <RegisterAllocation.Node object at 0x7f26fce9eba0>, <RegisterAllocation.Node object at 0x7f26fce9e810>, <RegisterAllocation.Node object at 0x7f26fce9eb10>]
------------------COLOR GRAPH DOUBLE.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce9f0b0>, <RegisterAllocation.Node object at 0x7f26fce9eff0>, <RegisterAllocation.Node object at 0x7f26fce9ef00>, <RegisterAllocation.Node object at 0x7f26fce9ed80>, <RegisterAllocation.Node object at 0x7f26fce9ee70>, <RegisterAllocation.Node object at 0x7f26fce9ec60>, <RegisterAllocation.Node object at 0x7f26fce9eba0>, <RegisterAllocation.Node object at 0x7f26fce9e810>, <RegisterAllocation.Node object at 0x7f26fce9eb10>]
------------------COLOR GRAPH DOUBLE.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce9eff0>, <RegisterAllocation.Node object at 0x7f26fce9ef00>, <RegisterAllocation.Node object at 0x7f26fce9ed80>, <RegisterAllocation.Node object at 0x7f26fce9ee70>, <RegisterAllocation.Node object at 0x7f26fce9ec60>, <RegisterAllocation.Node object at 0x7f26fce9eba0>, <RegisterAllocation.Node object at 0x7f26fce9e810>, <RegisterAllocation.Node object at 0x7f26fce9eb10>]
------------------COLOR GRAPH DOUBLE.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce9ef00>, <RegisterAllocation.Node object at 0x7f26fce9ed80>, <RegisterAllocation.Node object at 0x7f26fce9ee70>, <RegisterAllocation.Node object at 0x7f26fce9ec60>, <RegisterAllocation.Node object at 0x7f26fce9eba0>, <RegisterAllocation.Node object at 0x7f26fce9e810>, <RegisterAllocation.Node object at 0x7f26fce9eb10>]
------------------COLOR GRAPH DOUBLE.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce9ed80>, <RegisterAllocation.Node object at 0x7f26fce9ee70>, <RegisterAllocation.Node object at 0x7f26fce9ec60>, <RegisterAllocation.Node object at 0x7f26fce9eba0>, <RegisterAllocation.Node object at 0x7f26fce9e810>, <RegisterAllocation.Node object at 0x7f26fce9eb10>]
------------------COLOR GRAPH DOUBLE.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce9ee70>, <RegisterAllocation.Node object at 0x7f26fce9ec60>, <RegisterAllocation.Node object at 0x7f26fce9eba0>, <RegisterAllocation.Node object at 0x7f26fce9e810>, <RegisterAllocation.Node object at 0x7f26fce9eb10>]
------------------COLOR GRAPH DOUBLE.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce9ec60>, <RegisterAllocation.Node object at 0x7f26fce9eba0>, <RegisterAllocation.Node object at 0x7f26fce9e810>, <RegisterAllocation.Node object at 0x7f26fce9eb10>]
------------------COLOR GRAPH DOUBLE.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce9eba0>, <RegisterAllocation.Node object at 0x7f26fce9e810>, <RegisterAllocation.Node object at 0x7f26fce9eb10>]
------------------COLOR GRAPH DOUBLE.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce9e810>, <RegisterAllocation.Node object at 0x7f26fce9eb10>]
------------------COLOR GRAPH DOUBLE.---------------------
Reamining Nodes: [<RegisterAllocation.Node object at 0x7f26fce9eb10>]
------------------COLOR GRAPH DOUBLE.---------------------
Reamining Nodes: []
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14}
-----------------COLORED DOUBLE INTER GRAPH.------------------
Reg(XMM0) Reg(XMM0) spillCost: inf color: 14 pruned: False
Reg(XMM1) Reg(XMM1) spillCost: inf color: 13 pruned: False
Reg(XMM2) Reg(XMM2) spillCost: inf color: 12 pruned: False
Reg(XMM3) Reg(XMM3) spillCost: inf color: 11 pruned: False
Reg(XMM4) Reg(XMM4) spillCost: inf color: 10 pruned: False
Reg(XMM5) Reg(XMM5) spillCost: inf color: 9 pruned: False
Reg(XMM6) Reg(XMM6) spillCost: inf color: 8 pruned: False
Reg(XMM7) Reg(XMM7) spillCost: inf color: 7 pruned: False
Reg(XMM8) Reg(XMM8) spillCost: inf color: 6 pruned: False
Reg(XMM9) Reg(XMM9) spillCost: inf color: 5 pruned: False
Reg(XMM10) Reg(XMM10) spillCost: inf color: 4 pruned: False
Reg(XMM11) Reg(XMM11) spillCost: inf color: 3 pruned: False
Reg(XMM12) Reg(XMM12) spillCost: inf color: 2 pruned: False
Reg(XMM13) Reg(XMM13) spillCost: inf color: 1 pruned: False
---------------CREATE REGISTER MAP.-------------------
{14: Reg(XMM0), 13: Reg(XMM1), 12: Reg(XMM2), 11: Reg(XMM3), 10: Reg(XMM4), 9: Reg(XMM5), 8: Reg(XMM6), 7: Reg(XMM7), 6: Reg(XMM8), 5: Reg(XMM9), 4: Reg(XMM10), 3: Reg(XMM11), 2: Reg(XMM12), 1: Reg(XMM13)}
Calle Saved Registers for target: {Reg(BX), Reg(R15d), Reg(R13d), Reg(R12d), Reg(R14d)}
------------------REGISTER DOUBLE MAP.--------------------
{}
------------------REPLACED DOUBLE INTRUCTIONS.--------------------
AssType: Longword Mov(Pseudo(glob_three), Pseudo(tmp.47))              AssType: Longword Mov(Pseudo(glob_three), Pseudo(tmp.47))
AssType: Longword Binary(Add, Imm(3), Pseudo(tmp.47))                  AssType: Longword Binary(Add, Imm(3), Pseudo(tmp.47))
AssType: Longword Mov(Pseudo(glob_three), Reg(DI))                     AssType: Longword Mov(Pseudo(glob_three), Reg(DI))
AssType: Longword Binary(Sub, Imm(2), Reg(DI))                         AssType: Longword Binary(Sub, Imm(2), Reg(DI))
AssType: Longword Mov(Reg(DI), Reg(SI))                                AssType: Longword Mov(Reg(DI), Reg(SI))
AssType: Longword Binary(Add, Reg(DI), Reg(SI))                        AssType: Longword Binary(Add, Reg(DI), Reg(SI))
AssType: Longword Mov(Imm(2), Reg(DX))                                 AssType: Longword Mov(Imm(2), Reg(DX))
AssType: Longword Binary(Add, Reg(DI), Reg(DX))                        AssType: Longword Binary(Add, Reg(DI), Reg(DX))
AssType: Longword Mov(Reg(SI), Reg(CX))                                AssType: Longword Mov(Reg(SI), Reg(CX))
AssType: Longword Binary(Mult, Reg(SI), Reg(CX))                       AssType: Longword Binary(Mult, Reg(SI), Reg(CX))
AssType: Longword Mov(Imm(6), Reg(R8d))                                AssType: Longword Mov(Imm(6), Reg(R8d))
AssType: Longword Binary(Sub, Reg(DI), Reg(R8d))                       AssType: Longword Binary(Sub, Reg(DI), Reg(R8d))
AssType: Longword Mov(Reg(SI), Reg(R9d))                               AssType: Longword Mov(Reg(SI), Reg(R9d))
AssType: Longword Binary(Mult, Reg(DX), Reg(R9d))                      AssType: Longword Binary(Mult, Reg(DX), Reg(R9d))
AssType: Longword Mov(Reg(DI), Reg(R15d))                              AssType: Longword Mov(Reg(DI), Reg(R15d))
AssType: Longword Binary(Add, Imm(6), Reg(R15d))                       AssType: Longword Binary(Add, Imm(6), Reg(R15d))
AssType: Longword Mov(Reg(SI), Reg(R14d))                              AssType: Longword Mov(Reg(SI), Reg(R14d))
AssType: Longword Binary(Mult, Imm(4), Reg(R14d))                      AssType: Longword Binary(Mult, Imm(4), Reg(R14d))
AssType: Longword Mov(Reg(DX), Reg(R13d))                              AssType: Longword Mov(Reg(DX), Reg(R13d))
AssType: Longword Binary(Mult, Reg(DX), Reg(R13d))                     AssType: Longword Binary(Mult, Reg(DX), Reg(R13d))
AssType: Longword Mov(Reg(CX), Reg(R12d))                              AssType: Longword Mov(Reg(CX), Reg(R12d))
AssType: Longword Binary(Add, Reg(R9d), Reg(R12d))                     AssType: Longword Binary(Add, Reg(R9d), Reg(R12d))
AssType: Longword Mov(Imm(16), Reg(BX))                                AssType: Longword Mov(Imm(16), Reg(BX))
AssType: Longword Binary(Sub, Reg(R8d), Reg(BX))                       AssType: Longword Binary(Sub, Reg(R8d), Reg(BX))
AssType: Longword Mov(Reg(R9d), Reg(AX))                               AssType: Longword Mov(Reg(R9d), Reg(AX))
AssType: Longword Binary(Add, Reg(R9d), Reg(AX))                       AssType: Longword Binary(Add, Reg(R9d), Reg(AX))
AssType: Quadword Binary(Sub, Imm(8), Reg(SP))                         AssType: Quadword Binary(Sub, Imm(8), Reg(SP))
Push(Imm(1))                                                           Push(Imm(1))
Push(Reg(AX))                                                          Push(Reg(AX))
AssType: Longword Mov(Reg(BX), Reg(AX))                                AssType: Longword Mov(Reg(BX), Reg(AX))
Push(Reg(AX))                                                          Push(Reg(AX))
AssType: Longword Mov(Reg(R12d), Reg(AX))                              AssType: Longword Mov(Reg(R12d), Reg(AX))
Push(Reg(AX))                                                          Push(Reg(AX))
AssType: Longword Mov(Reg(R13d), Reg(AX))                              AssType: Longword Mov(Reg(R13d), Reg(AX))
Push(Reg(AX))                                                          Push(Reg(AX))
AssType: Longword Mov(Reg(R14d), Reg(AX))                              AssType: Longword Mov(Reg(R14d), Reg(AX))
Push(Reg(AX))                                                          Push(Reg(AX))
AssType: Longword Mov(Reg(R15d), Reg(AX))                              AssType: Longword Mov(Reg(R15d), Reg(AX))
Push(Reg(AX))                                                          Push(Reg(AX))
Call(check_12_ints)                                                    Call(check_12_ints)
AssType: Quadword Binary(Add, Imm(64), Reg(SP))                        AssType: Quadword Binary(Add, Imm(64), Reg(SP))
AssType: Longword Mov(Imm(10), Reg(DI))                                AssType: Longword Mov(Imm(10), Reg(DI))
AssType: Longword Binary(Add, Pseudo(glob_three), Reg(DI))             AssType: Longword Binary(Add, Pseudo(glob_three), Reg(DI))
AssType: Longword Mov(Reg(DI), Reg(SI))                                AssType: Longword Mov(Reg(DI), Reg(SI))
AssType: Longword Binary(Add, Imm(1), Reg(SI))                         AssType: Longword Binary(Add, Imm(1), Reg(SI))
AssType: Longword Mov(Imm(28), Reg(DX))                                AssType: Longword Mov(Imm(28), Reg(DX))
AssType: Longword Binary(Sub, Reg(DI), Reg(DX))                        AssType: Longword Binary(Sub, Reg(DI), Reg(DX))
AssType: Longword Mov(Reg(SI), Reg(CX))                                AssType: Longword Mov(Reg(SI), Reg(CX))
AssType: Longword Binary(Add, Imm(2), Reg(CX))                         AssType: Longword Binary(Add, Imm(2), Reg(CX))
AssType: Longword Mov(Imm(4), Reg(R8d))                                AssType: Longword Mov(Imm(4), Reg(R8d))
AssType: Longword Binary(Add, Reg(DI), Reg(R8d))                       AssType: Longword Binary(Add, Reg(DI), Reg(R8d))
AssType: Longword Mov(Imm(32), Reg(R9d))                               AssType: Longword Mov(Imm(32), Reg(R9d))
AssType: Longword Binary(Sub, Reg(SI), Reg(R9d))                       AssType: Longword Binary(Sub, Reg(SI), Reg(R9d))
AssType: Longword Mov(Imm(35), Reg(R15d))                              AssType: Longword Mov(Imm(35), Reg(R15d))
AssType: Longword Binary(Sub, Reg(CX), Reg(R15d))                      AssType: Longword Binary(Sub, Reg(CX), Reg(R15d))
AssType: Longword Mov(Reg(DX), Reg(R14d))                              AssType: Longword Mov(Reg(DX), Reg(R14d))
AssType: Longword Binary(Add, Imm(5), Reg(R14d))                       AssType: Longword Binary(Add, Imm(5), Reg(R14d))
AssType: Longword Mov(Reg(DI), Reg(AX))                                AssType: Longword Mov(Reg(DI), Reg(AX))
AssType: Longword Binary(Mult, Imm(2), Reg(AX))                        AssType: Longword Binary(Mult, Imm(2), Reg(AX))
AssType: Longword Mov(Reg(AX), Reg(R13d))                              AssType: Longword Mov(Reg(AX), Reg(R13d))
AssType: Longword Binary(Sub, Imm(5), Reg(R13d))                       AssType: Longword Binary(Sub, Imm(5), Reg(R13d))
AssType: Longword Mov(Reg(DX), Reg(R12d))                              AssType: Longword Mov(Reg(DX), Reg(R12d))
AssType: Longword Binary(Add, Imm(7), Reg(R12d))                       AssType: Longword Binary(Add, Imm(7), Reg(R12d))
AssType: Longword Mov(Imm(6), Reg(BX))                                 AssType: Longword Mov(Imm(6), Reg(BX))
AssType: Longword Binary(Add, Reg(R8d), Reg(BX))                       AssType: Longword Binary(Add, Reg(R8d), Reg(BX))
AssType: Longword Mov(Reg(DI), Reg(AX))                                AssType: Longword Mov(Reg(DI), Reg(AX))
AssType: Longword Binary(Add, Imm(11), Reg(AX))                        AssType: Longword Binary(Add, Imm(11), Reg(AX))
AssType: Quadword Binary(Sub, Imm(8), Reg(SP))                         AssType: Quadword Binary(Sub, Imm(8), Reg(SP))
Push(Imm(13))                                                          Push(Imm(13))
Push(Reg(AX))                                                          Push(Reg(AX))
AssType: Longword Mov(Reg(BX), Reg(AX))                                AssType: Longword Mov(Reg(BX), Reg(AX))
Push(Reg(AX))                                                          Push(Reg(AX))
AssType: Longword Mov(Reg(R12d), Reg(AX))                              AssType: Longword Mov(Reg(R12d), Reg(AX))
Push(Reg(AX))                                                          Push(Reg(AX))
AssType: Longword Mov(Reg(R13d), Reg(AX))                              AssType: Longword Mov(Reg(R13d), Reg(AX))
Push(Reg(AX))                                                          Push(Reg(AX))
AssType: Longword Mov(Reg(R14d), Reg(AX))                              AssType: Longword Mov(Reg(R14d), Reg(AX))
Push(Reg(AX))                                                          Push(Reg(AX))
AssType: Longword Mov(Reg(R15d), Reg(AX))                              AssType: Longword Mov(Reg(R15d), Reg(AX))
Push(Reg(AX))                                                          Push(Reg(AX))
Call(check_12_ints)                                                    Call(check_12_ints)
AssType: Quadword Binary(Add, Imm(64), Reg(SP))                        AssType: Quadword Binary(Add, Imm(64), Reg(SP))
AssType: Longword Cmp(Imm(6), Pseudo(tmp.47))                          AssType: Longword Cmp(Imm(6), Pseudo(tmp.47))
AssType: Longword Mov(Imm(0), Reg(AX))                                 AssType: Longword Mov(Imm(0), Reg(AX))
SetCC(ConcCodeType.NE, Reg(AX))                                        SetCC(ConcCodeType.NE, Reg(AX))
AssType: Longword Cmp(Imm(0), Reg(AX))                                 AssType: Longword Cmp(Imm(0), Reg(AX))
JmpCC(ConcCodeType.E, tmp.103)                                         JmpCC(ConcCodeType.E, tmp.103)
AssType: Longword Mov(Imm(1), Reg(AX))                                 AssType: Longword Mov(Imm(1), Reg(AX))
AssType: Longword Unary(Neg, Reg(AX))                                  AssType: Longword Unary(Neg, Reg(AX))
ret                                                                    ret
Label(tmp.103)                                                         Label(tmp.103)
AssType: Longword Mov(Imm(0), Reg(AX))                                 AssType: Longword Mov(Imm(0), Reg(AX))
ret                                                                    ret
ASM Program: [Function target stackOffset: -4 global: True instructions:[AssType: Longword Mov(Data(glob_three, 0), Memory(BP, -4)), AssType: Longword Binary(Add, Imm(3), Memory(BP, -4)), AssType: Longword Mov(Data(glob_three, 0), Reg(DI)), AssType: Longword Binary(Sub, Imm(2), Reg(DI)), AssType: Longword Mov(Reg(DI), Reg(SI)), AssType: Longword Binary(Add, Reg(DI), Reg(SI)), AssType: Longword Mov(Imm(2), Reg(DX)), AssType: Longword Binary(Add, Reg(DI), Reg(DX)), AssType: Longword Mov(Reg(SI), Reg(CX)), AssType: Longword Binary(Mult, Reg(SI), Reg(CX)), AssType: Longword Mov(Imm(6), Reg(R8d)), AssType: Longword Binary(Sub, Reg(DI), Reg(R8d)), AssType: Longword Mov(Reg(SI), Reg(R9d)), AssType: Longword Binary(Mult, Reg(DX), Reg(R9d)), AssType: Longword Mov(Reg(DI), Reg(R15d)), AssType: Longword Binary(Add, Imm(6), Reg(R15d)), AssType: Longword Mov(Reg(SI), Reg(R14d)), AssType: Longword Binary(Mult, Imm(4), Reg(R14d)), AssType: Longword Mov(Reg(DX), Reg(R13d)), AssType: Longword Binary(Mult, Reg(DX), Reg(R13d)), AssType: Longword Mov(Reg(CX), Reg(R12d)), AssType: Longword Binary(Add, Reg(R9d), Reg(R12d)), AssType: Longword Mov(Imm(16), Reg(BX)), AssType: Longword Binary(Sub, Reg(R8d), Reg(BX)), AssType: Longword Mov(Reg(R9d), Reg(AX)), AssType: Longword Binary(Add, Reg(R9d), Reg(AX)), AssType: Quadword Binary(Sub, Imm(8), Reg(SP)), Push(Imm(1)), Push(Reg(AX)), AssType: Longword Mov(Reg(BX), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Reg(R12d), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Reg(R13d), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Reg(R14d), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Reg(R15d), Reg(AX)), Push(Reg(AX)), Call(check_12_ints), AssType: Quadword Binary(Add, Imm(64), Reg(SP)), AssType: Longword Mov(Imm(10), Reg(DI)), AssType: Longword Binary(Add, Data(glob_three, 0), Reg(DI)), AssType: Longword Mov(Reg(DI), Reg(SI)), AssType: Longword Binary(Add, Imm(1), Reg(SI)), AssType: Longword Mov(Imm(28), Reg(DX)), AssType: Longword Binary(Sub, Reg(DI), Reg(DX)), AssType: Longword Mov(Reg(SI), Reg(CX)), AssType: Longword Binary(Add, Imm(2), Reg(CX)), AssType: Longword Mov(Imm(4), Reg(R8d)), AssType: Longword Binary(Add, Reg(DI), Reg(R8d)), AssType: Longword Mov(Imm(32), Reg(R9d)), AssType: Longword Binary(Sub, Reg(SI), Reg(R9d)), AssType: Longword Mov(Imm(35), Reg(R15d)), AssType: Longword Binary(Sub, Reg(CX), Reg(R15d)), AssType: Longword Mov(Reg(DX), Reg(R14d)), AssType: Longword Binary(Add, Imm(5), Reg(R14d)), AssType: Longword Mov(Reg(DI), Reg(AX)), AssType: Longword Binary(Mult, Imm(2), Reg(AX)), AssType: Longword Mov(Reg(AX), Reg(R13d)), AssType: Longword Binary(Sub, Imm(5), Reg(R13d)), AssType: Longword Mov(Reg(DX), Reg(R12d)), AssType: Longword Binary(Add, Imm(7), Reg(R12d)), AssType: Longword Mov(Imm(6), Reg(BX)), AssType: Longword Binary(Add, Reg(R8d), Reg(BX)), AssType: Longword Mov(Reg(DI), Reg(AX)), AssType: Longword Binary(Add, Imm(11), Reg(AX)), AssType: Quadword Binary(Sub, Imm(8), Reg(SP)), Push(Imm(13)), Push(Reg(AX)), AssType: Longword Mov(Reg(BX), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Reg(R12d), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Reg(R13d), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Reg(R14d), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Reg(R15d), Reg(AX)), Push(Reg(AX)), Call(check_12_ints), AssType: Quadword Binary(Add, Imm(64), Reg(SP)), AssType: Longword Cmp(Imm(6), Memory(BP, -4)), AssType: Longword Mov(Imm(0), Reg(AX)), SetCC(ConcCodeType.NE, Reg(AX)), AssType: Longword Cmp(Imm(0), Reg(AX)), JmpCC(ConcCodeType.E, tmp.103), AssType: Longword Mov(Imm(1), Reg(AX)), AssType: Longword Unary(Neg, Reg(AX)), ret, Label(tmp.103), AssType: Longword Mov(Imm(0), Reg(AX)), ret], Static Variable: Global = True Alignment = 4 : glob_three = [c_int(3)]]
original: 44
rounded: 48
adjustment: 8
ASM Program: [Function target stackOffset: -4 global: True instructions:[AssType: Quadword Binary(Sub, Imm(8), Reg(SP)), Push(Reg(BX)), Push(Reg(R15d)), Push(Reg(R13d)), Push(Reg(R12d)), Push(Reg(R14d)), AssType: Longword Mov(Data(glob_three, 0), Reg(R10d)), AssType: Longword Mov(Reg(R10d), Memory(BP, -4)), AssType: Longword Binary(Add, Imm(3), Memory(BP, -4)), AssType: Longword Mov(Data(glob_three, 0), Reg(DI)), AssType: Longword Binary(Sub, Imm(2), Reg(DI)), AssType: Longword Mov(Reg(DI), Reg(SI)), AssType: Longword Binary(Add, Reg(DI), Reg(SI)), AssType: Longword Mov(Imm(2), Reg(DX)), AssType: Longword Binary(Add, Reg(DI), Reg(DX)), AssType: Longword Mov(Reg(SI), Reg(CX)), AssType: Longword Binary(Mult, Reg(SI), Reg(CX)), AssType: Longword Mov(Imm(6), Reg(R8d)), AssType: Longword Binary(Sub, Reg(DI), Reg(R8d)), AssType: Longword Mov(Reg(SI), Reg(R9d)), AssType: Longword Binary(Mult, Reg(DX), Reg(R9d)), AssType: Longword Mov(Reg(DI), Reg(R15d)), AssType: Longword Binary(Add, Imm(6), Reg(R15d)), AssType: Longword Mov(Reg(SI), Reg(R14d)), AssType: Longword Binary(Mult, Imm(4), Reg(R14d)), AssType: Longword Mov(Reg(DX), Reg(R13d)), AssType: Longword Binary(Mult, Reg(DX), Reg(R13d)), AssType: Longword Mov(Reg(CX), Reg(R12d)), AssType: Longword Binary(Add, Reg(R9d), Reg(R12d)), AssType: Longword Mov(Imm(16), Reg(BX)), AssType: Longword Binary(Sub, Reg(R8d), Reg(BX)), AssType: Longword Mov(Reg(R9d), Reg(AX)), AssType: Longword Binary(Add, Reg(R9d), Reg(AX)), AssType: Quadword Binary(Sub, Imm(8), Reg(SP)), Push(Imm(1)), Push(Reg(AX)), AssType: Longword Mov(Reg(BX), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Reg(R12d), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Reg(R13d), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Reg(R14d), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Reg(R15d), Reg(AX)), Push(Reg(AX)), Call(check_12_ints), AssType: Quadword Binary(Add, Imm(64), Reg(SP)), AssType: Longword Mov(Imm(10), Reg(DI)), AssType: Longword Binary(Add, Data(glob_three, 0), Reg(DI)), AssType: Longword Mov(Reg(DI), Reg(SI)), AssType: Longword Binary(Add, Imm(1), Reg(SI)), AssType: Longword Mov(Imm(28), Reg(DX)), AssType: Longword Binary(Sub, Reg(DI), Reg(DX)), AssType: Longword Mov(Reg(SI), Reg(CX)), AssType: Longword Binary(Add, Imm(2), Reg(CX)), AssType: Longword Mov(Imm(4), Reg(R8d)), AssType: Longword Binary(Add, Reg(DI), Reg(R8d)), AssType: Longword Mov(Imm(32), Reg(R9d)), AssType: Longword Binary(Sub, Reg(SI), Reg(R9d)), AssType: Longword Mov(Imm(35), Reg(R15d)), AssType: Longword Binary(Sub, Reg(CX), Reg(R15d)), AssType: Longword Mov(Reg(DX), Reg(R14d)), AssType: Longword Binary(Add, Imm(5), Reg(R14d)), AssType: Longword Mov(Reg(DI), Reg(AX)), AssType: Longword Binary(Mult, Imm(2), Reg(AX)), AssType: Longword Mov(Reg(AX), Reg(R13d)), AssType: Longword Binary(Sub, Imm(5), Reg(R13d)), AssType: Longword Mov(Reg(DX), Reg(R12d)), AssType: Longword Binary(Add, Imm(7), Reg(R12d)), AssType: Longword Mov(Imm(6), Reg(BX)), AssType: Longword Binary(Add, Reg(R8d), Reg(BX)), AssType: Longword Mov(Reg(DI), Reg(AX)), AssType: Longword Binary(Add, Imm(11), Reg(AX)), AssType: Quadword Binary(Sub, Imm(8), Reg(SP)), Push(Imm(13)), Push(Reg(AX)), AssType: Longword Mov(Reg(BX), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Reg(R12d), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Reg(R13d), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Reg(R14d), Reg(AX)), Push(Reg(AX)), AssType: Longword Mov(Reg(R15d), Reg(AX)), Push(Reg(AX)), Call(check_12_ints), AssType: Quadword Binary(Add, Imm(64), Reg(SP)), AssType: Longword Cmp(Imm(6), Memory(BP, -4)), AssType: Longword Mov(Imm(0), Reg(AX)), SetCC(ConcCodeType.NE, Reg(AX)), AssType: Longword Cmp(Imm(0), Reg(AX)), JmpCC(ConcCodeType.E, tmp.103), AssType: Longword Mov(Imm(1), Reg(AX)), AssType: Longword Unary(Neg, Reg(AX)), Pop(Reg(R14d)), Pop(Reg(R12d)), Pop(Reg(R13d)), Pop(Reg(R15d)), Pop(Reg(BX)), ret, Label(tmp.103), AssType: Longword Mov(Imm(0), Reg(AX)), Pop(Reg(R14d)), Pop(Reg(R12d)), Pop(Reg(R13d)), Pop(Reg(R15d)), Pop(Reg(BX)), ret], Static Variable: Global = True Alignment = 4 : glob_three = [c_int(3)]]
